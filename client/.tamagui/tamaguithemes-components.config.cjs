var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __name = (target, value) => __defProp(target, "name", { value, configurable: true });
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// node_modules/@tamagui/themes/dist/esm/index.mjs
var esm_exports = {};
__export(esm_exports, {
  PALETTE_BACKGROUND_OFFSET: () => PALETTE_BACKGROUND_OFFSET,
  ThemeBuilder: () => ThemeBuilder,
  addChildren: () => addChildren,
  amber: () => amber2,
  amberA: () => amberA2,
  amberDark: () => amber,
  amberDarkA: () => amberA,
  applyMask: () => applyMask,
  applyMaskStateless: () => applyMaskStateless,
  blackA: () => blackA,
  blue: () => blue2,
  blueA: () => blueA2,
  blueDark: () => blue,
  blueDarkA: () => blueA,
  bronze: () => bronze2,
  bronzeA: () => bronzeA2,
  bronzeDark: () => bronze,
  bronzeDarkA: () => bronzeA,
  brown: () => brown2,
  brownA: () => brownA2,
  brownDark: () => brown,
  brownDarkA: () => brownA,
  color: () => color,
  colorTokens: () => colorTokens,
  combineMasks: () => combineMasks,
  componentThemeDefinitions: () => componentThemeDefinitions,
  createIdentityMask: () => createIdentityMask,
  createInverseMask: () => createInverseMask,
  createMask: () => createMask,
  createPalettes: () => createPalettes,
  createShiftMask: () => createShiftMask,
  createSoftenMask: () => createSoftenMask,
  createStrengthenMask: () => createStrengthenMask,
  createStudioThemes: () => createStudioThemes,
  createTheme: () => createTheme,
  createThemeBuilder: () => createThemeBuilder,
  createThemeWithPalettes: () => createThemeWithPalettes,
  createThemes: () => createThemes,
  createWeakenMask: () => createWeakenMask,
  crimson: () => crimson2,
  crimsonA: () => crimsonA2,
  crimsonDark: () => crimson,
  crimsonDarkA: () => crimsonA,
  cyan: () => cyan2,
  cyanA: () => cyanA2,
  cyanDark: () => cyan,
  cyanDarkA: () => cyanA,
  darkColors: () => darkColors,
  defaultComponentThemes: () => defaultComponentThemes,
  defaultTemplates: () => defaultTemplates,
  getThemeSuitePalettes: () => getThemeSuitePalettes,
  gold: () => gold2,
  goldA: () => goldA2,
  goldDark: () => gold,
  goldDarkA: () => goldA,
  grass: () => grass2,
  grassA: () => grassA2,
  grassDark: () => grass,
  grassDarkA: () => grassA,
  gray: () => gray2,
  grayA: () => grayA2,
  grayDark: () => gray,
  grayDarkA: () => grayA,
  green: () => green2,
  greenA: () => greenA2,
  greenDark: () => green,
  greenDarkA: () => greenA,
  indigo: () => indigo2,
  indigoA: () => indigoA2,
  indigoDark: () => indigo,
  indigoDarkA: () => indigoA,
  lightColors: () => lightColors,
  lime: () => lime2,
  limeA: () => limeA2,
  limeDark: () => lime,
  limeDarkA: () => limeA,
  maskOptions: () => maskOptions,
  masks: () => masks,
  mauve: () => mauve2,
  mauveA: () => mauveA2,
  mauveDark: () => mauve,
  mauveDarkA: () => mauveA,
  mint: () => mint2,
  mintA: () => mintA2,
  mintDark: () => mint,
  mintDarkA: () => mintA,
  objectEntries: () => objectEntries,
  objectFromEntries: () => objectFromEntries2,
  objectKeys: () => objectKeys2,
  olive: () => olive2,
  oliveA: () => oliveA2,
  oliveDark: () => olive,
  oliveDarkA: () => oliveA,
  orange: () => orange2,
  orangeA: () => orangeA2,
  orangeDark: () => orange,
  orangeDarkA: () => orangeA,
  overlayThemeDefinitions: () => overlayThemeDefinitions,
  palettes: () => palettes,
  pink: () => pink2,
  pinkA: () => pinkA2,
  pinkDark: () => pink,
  pinkDarkA: () => pinkA,
  plum: () => plum2,
  plumA: () => plumA2,
  plumDark: () => plum,
  plumDarkA: () => plumA,
  purple: () => purple2,
  purpleA: () => purpleA2,
  purpleDark: () => purple,
  purpleDarkA: () => purpleA,
  radius: () => radius,
  red: () => red2,
  redA: () => redA2,
  redDark: () => red,
  redDarkA: () => redA,
  sage: () => sage2,
  sageA: () => sageA2,
  sageDark: () => sage,
  sageDarkA: () => sageA,
  sand: () => sand2,
  sandA: () => sandA2,
  sandDark: () => sand,
  sandDarkA: () => sandA,
  shadows: () => shadows2,
  size: () => size,
  skipMask: () => skipMask,
  sky: () => sky2,
  skyA: () => skyA2,
  skyDark: () => sky,
  skyDarkA: () => skyA,
  slate: () => slate2,
  slateA: () => slateA2,
  slateDark: () => slate,
  slateDarkA: () => slateA,
  space: () => space,
  teal: () => teal2,
  tealA: () => tealA2,
  tealDark: () => teal,
  tealDarkA: () => tealA,
  templates: () => templates,
  themes: () => themes,
  tokens: () => tokens,
  tomato: () => tomato2,
  tomatoA: () => tomatoA2,
  tomatoDark: () => tomato,
  tomatoDarkA: () => tomatoA,
  violet: () => violet2,
  violetA: () => violetA2,
  violetDark: () => violet,
  violetDarkA: () => violetA,
  whiteA: () => whiteA,
  yellow: () => yellow2,
  yellowA: () => yellowA2,
  yellowDark: () => yellow,
  yellowDarkA: () => yellowA,
  zIndex: () => zIndex
});
module.exports = __toCommonJS(esm_exports);

// node_modules/@tamagui/themes/dist/esm/generated-new.mjs
function t(a) {
  let res = {};
  for (const [ki, vi] of a) res[ks[ki]] = colors[vi];
  return res;
}
__name(t, "t");
var colors = ["#fff", "#f8f8f8", "hsl(0, 0%, 96.3%)", "hsl(0, 0%, 94.1%)", "hsl(0, 0%, 92.0%)", "hsl(0, 0%, 90.0%)", "hsl(0, 0%, 88.5%)", "hsl(0, 0%, 81.0%)", "hsl(0, 0%, 56.1%)", "hsl(0, 0%, 50.3%)", "hsl(0, 0%, 42.5%)", "hsl(0, 0%, 9.0%)", "rgba(255,255,255,0)", "rgba(10,10,10,0)", "hsl(206, 100%, 99.2%)", "hsl(210, 100%, 98.0%)", "hsl(209, 100%, 96.5%)", "hsl(210, 98.8%, 94.0%)", "hsl(209, 95.0%, 90.1%)", "hsl(209, 81.2%, 84.5%)", "hsl(208, 77.5%, 76.9%)", "hsl(206, 81.9%, 65.3%)", "hsl(206, 100%, 50.0%)", "hsl(208, 100%, 47.3%)", "hsl(211, 100%, 43.2%)", "hsl(211, 100%, 15.0%)", "hsl(0, 0%, 99.0%)", "hsl(0, 0%, 97.3%)", "hsl(0, 0%, 95.1%)", "hsl(0, 0%, 93.0%)", "hsl(0, 0%, 90.9%)", "hsl(0, 0%, 88.7%)", "hsl(0, 0%, 85.8%)", "hsl(0, 0%, 78.0%)", "hsl(0, 0%, 52.3%)", "hsl(0, 0%, 43.5%)", "hsl(136, 50.0%, 98.9%)", "hsl(138, 62.5%, 96.9%)", "hsl(139, 55.2%, 94.5%)", "hsl(140, 48.7%, 91.0%)", "hsl(141, 43.7%, 86.0%)", "hsl(143, 40.3%, 79.0%)", "hsl(146, 38.5%, 69.0%)", "hsl(151, 40.2%, 54.1%)", "hsl(151, 55.0%, 41.5%)", "hsl(152, 57.5%, 37.6%)", "hsl(153, 67.0%, 28.5%)", "hsl(155, 40.0%, 14.0%)", "hsl(24, 70.0%, 99.0%)", "hsl(24, 83.3%, 97.6%)", "hsl(24, 100%, 95.3%)", "hsl(25, 100%, 92.2%)", "hsl(25, 100%, 88.2%)", "hsl(25, 100%, 82.8%)", "hsl(24, 100%, 75.3%)", "hsl(24, 94.5%, 64.3%)", "hsl(24, 94.0%, 50.0%)", "hsl(24, 100%, 46.5%)", "hsl(24, 100%, 37.0%)", "hsl(15, 60.0%, 17.0%)", "hsl(322, 100%, 99.4%)", "hsl(323, 100%, 98.4%)", "hsl(323, 86.3%, 96.5%)", "hsl(323, 78.7%, 94.2%)", "hsl(323, 72.2%, 91.1%)", "hsl(323, 66.3%, 86.6%)", "hsl(323, 62.0%, 80.1%)", "hsl(323, 60.3%, 72.4%)", "hsl(322, 65.0%, 54.5%)", "hsl(322, 63.9%, 50.7%)", "hsl(322, 75.0%, 46.0%)", "hsl(320, 70.0%, 13.5%)", "hsl(280, 65.0%, 99.4%)", "hsl(276, 100%, 99.0%)", "hsl(276, 83.1%, 97.0%)", "hsl(275, 76.4%, 94.7%)", "hsl(275, 70.8%, 91.8%)", "hsl(274, 65.4%, 87.8%)", "hsl(273, 61.0%, 81.7%)", "hsl(272, 60.0%, 73.5%)", "hsl(272, 51.0%, 54.0%)", "hsl(272, 46.8%, 50.3%)", "hsl(272, 50.0%, 45.8%)", "hsl(272, 66.0%, 16.0%)", "hsl(359, 100%, 99.4%)", "hsl(359, 100%, 98.6%)", "hsl(360, 100%, 96.8%)", "hsl(360, 97.9%, 94.8%)", "hsl(360, 90.2%, 91.9%)", "hsl(360, 81.7%, 87.8%)", "hsl(359, 74.2%, 81.7%)", "hsl(359, 69.5%, 74.3%)", "hsl(358, 75.0%, 59.0%)", "hsl(358, 69.4%, 55.2%)", "hsl(358, 65.0%, 48.7%)", "hsl(354, 50.0%, 14.6%)", "hsl(60, 54.0%, 98.5%)", "hsl(52, 100%, 95.5%)", "hsl(55, 100%, 90.9%)", "hsl(54, 100%, 86.6%)", "hsl(52, 97.9%, 82.0%)", "hsl(50, 89.4%, 76.1%)", "hsl(47, 80.4%, 68.0%)", "hsl(48, 100%, 46.1%)", "hsl(53, 92.0%, 50.0%)", "hsl(50, 100%, 48.5%)", "hsl(42, 100%, 29.0%)", "hsl(40, 55.0%, 13.5%)", "rgba(0,0,0,0.085)", "rgba(0,0,0,0.04)", "#050505", "#151515", "#191919", "#232323", "#282828", "#323232", "#424242", "#494949", "#545454", "#626262", "#a5a5a5", "hsl(212, 35.0%, 9.2%)", "hsl(216, 50.0%, 11.8%)", "hsl(214, 59.4%, 15.3%)", "hsl(214, 65.8%, 17.9%)", "hsl(213, 71.2%, 20.2%)", "hsl(212, 77.4%, 23.1%)", "hsl(211, 85.1%, 27.4%)", "hsl(211, 89.7%, 34.1%)", "hsl(209, 100%, 60.6%)", "hsl(210, 100%, 66.1%)", "hsl(206, 98.0%, 95.8%)", "hsl(0, 0%, 8.5%)", "hsl(0, 0%, 11.0%)", "hsl(0, 0%, 13.6%)", "hsl(0, 0%, 15.8%)", "hsl(0, 0%, 17.9%)", "hsl(0, 0%, 20.5%)", "hsl(0, 0%, 24.3%)", "hsl(0, 0%, 31.2%)", "hsl(0, 0%, 43.9%)", "hsl(0, 0%, 49.4%)", "hsl(0, 0%, 62.8%)", "hsl(146, 30.0%, 7.4%)", "hsl(155, 44.2%, 8.4%)", "hsl(155, 46.7%, 10.9%)", "hsl(154, 48.4%, 12.9%)", "hsl(154, 49.7%, 14.9%)", "hsl(154, 50.9%, 17.6%)", "hsl(153, 51.8%, 21.8%)", "hsl(151, 51.7%, 28.4%)", "hsl(151, 49.3%, 46.5%)", "hsl(151, 50.0%, 53.2%)", "hsl(137, 72.0%, 94.0%)", "hsl(30, 70.0%, 7.2%)", "hsl(28, 100%, 8.4%)", "hsl(26, 91.1%, 11.6%)", "hsl(25, 88.3%, 14.1%)", "hsl(24, 87.6%, 16.6%)", "hsl(24, 88.6%, 19.8%)", "hsl(24, 92.4%, 24.0%)", "hsl(25, 100%, 29.0%)", "hsl(24, 100%, 58.5%)", "hsl(24, 100%, 62.2%)", "hsl(24, 97.0%, 93.2%)", "hsl(318, 25.0%, 9.6%)", "hsl(319, 32.2%, 11.6%)", "hsl(319, 41.0%, 16.0%)", "hsl(320, 45.4%, 18.7%)", "hsl(320, 49.0%, 21.1%)", "hsl(321, 53.6%, 24.4%)", "hsl(321, 61.1%, 29.7%)", "hsl(322, 74.9%, 37.5%)", "hsl(323, 72.8%, 59.2%)", "hsl(325, 90.0%, 66.4%)", "hsl(322, 90.0%, 95.8%)", "hsl(284, 20.0%, 9.6%)", "hsl(283, 30.0%, 11.8%)", "hsl(281, 37.5%, 16.5%)", "hsl(280, 41.2%, 20.0%)", "hsl(279, 43.8%, 23.3%)", "hsl(277, 46.4%, 27.5%)", "hsl(275, 49.3%, 34.6%)", "hsl(272, 52.1%, 45.9%)", "hsl(273, 57.3%, 59.1%)", "hsl(275, 80.0%, 71.0%)", "hsl(279, 75.0%, 95.7%)", "hsl(353, 23.0%, 9.8%)", "hsl(357, 34.4%, 12.0%)", "hsl(356, 43.4%, 16.4%)", "hsl(356, 47.6%, 19.2%)", "hsl(356, 51.1%, 21.9%)", "hsl(356, 55.2%, 25.9%)", "hsl(357, 60.2%, 31.8%)", "hsl(358, 65.0%, 40.4%)", "hsl(358, 85.3%, 64.0%)", "hsl(358, 100%, 69.5%)", "hsl(351, 89.0%, 96.0%)", "hsl(45, 100%, 5.5%)", "hsl(46, 100%, 6.7%)", "hsl(45, 100%, 8.7%)", "hsl(45, 100%, 10.4%)", "hsl(47, 100%, 12.1%)", "hsl(49, 100%, 14.3%)", "hsl(49, 90.3%, 18.4%)", "hsl(50, 100%, 22.0%)", "hsl(54, 100%, 68.0%)", "hsl(48, 100%, 47.0%)", "hsl(53, 100%, 91.0%)", "rgba(0,0,0,0.3)", "rgba(0,0,0,0.2)", "hsla(24, 70.0%, 99.0%, 0)", "hsla(15, 60.0%, 17.0%, 0)", "hsla(60, 54.0%, 98.5%, 0)", "hsla(40, 55.0%, 13.5%, 0)", "hsla(136, 50.0%, 98.9%, 0)", "hsla(155, 40.0%, 14.0%, 0)", "hsla(206, 100%, 99.2%, 0)", "hsla(211, 100%, 15.0%, 0)", "hsla(280, 65.0%, 99.4%, 0)", "hsla(272, 66.0%, 16.0%, 0)", "hsla(322, 100%, 99.4%, 0)", "hsla(320, 70.0%, 13.5%, 0)", "hsla(359, 100%, 99.4%, 0)", "hsla(354, 50.0%, 14.6%, 0)", "hsla(30, 70.0%, 7.2%, 0)", "hsla(24, 97.0%, 93.2%, 0)", "hsla(45, 100%, 5.5%, 0)", "hsla(53, 100%, 91.0%, 0)", "hsla(146, 30.0%, 7.4%, 0)", "hsla(137, 72.0%, 94.0%, 0)", "hsla(212, 35.0%, 9.2%, 0)", "hsla(206, 98.0%, 95.8%, 0)", "hsla(284, 20.0%, 9.6%, 0)", "hsla(279, 75.0%, 95.7%, 0)", "hsla(318, 25.0%, 9.6%, 0)", "hsla(322, 90.0%, 95.8%, 0)", "hsla(353, 23.0%, 9.8%, 0)", "hsla(351, 89.0%, 96.0%, 0)", "rgba(0,0,0,0.5)", "rgba(0,0,0,0.9)", "transparent"];
var ks = ["color1", "color2", "color3", "color4", "color5", "color6", "color7", "color8", "color9", "color10", "color11", "color12", "background", "backgroundHover", "backgroundPress", "backgroundFocus", "backgroundStrong", "backgroundTransparent", "color", "colorHover", "colorPress", "colorFocus", "colorTransparent", "borderColor", "borderColorHover", "borderColorFocus", "borderColorPress", "placeholderColor", "blue1", "blue2", "blue3", "blue4", "blue5", "blue6", "blue7", "blue8", "blue9", "blue10", "blue11", "blue12", "gray1", "gray2", "gray3", "gray4", "gray5", "gray6", "gray7", "gray8", "gray9", "gray10", "gray11", "gray12", "green1", "green2", "green3", "green4", "green5", "green6", "green7", "green8", "green9", "green10", "green11", "green12", "orange1", "orange2", "orange3", "orange4", "orange5", "orange6", "orange7", "orange8", "orange9", "orange10", "orange11", "orange12", "pink1", "pink2", "pink3", "pink4", "pink5", "pink6", "pink7", "pink8", "pink9", "pink10", "pink11", "pink12", "purple1", "purple2", "purple3", "purple4", "purple5", "purple6", "purple7", "purple8", "purple9", "purple10", "purple11", "purple12", "red1", "red2", "red3", "red4", "red5", "red6", "red7", "red8", "red9", "red10", "red11", "red12", "yellow1", "yellow2", "yellow3", "yellow4", "yellow5", "yellow6", "yellow7", "yellow8", "yellow9", "yellow10", "yellow11", "yellow12", "shadowColor", "shadowColorHover", "shadowColorPress", "shadowColorFocus"];
var n1 = t([[0, 0], [1, 1], [2, 2], [3, 3], [4, 4], [5, 5], [6, 6], [7, 7], [8, 8], [9, 9], [10, 10], [11, 11], [12, 1], [13, 2], [14, 3], [15, 4], [16, 0], [17, 12], [18, 11], [19, 10], [20, 11], [21, 10], [22, 13], [23, 4], [24, 5], [25, 3], [26, 4], [27, 8], [28, 14], [29, 15], [30, 16], [31, 17], [32, 18], [33, 19], [34, 20], [35, 21], [36, 22], [37, 23], [38, 24], [39, 25], [40, 26], [41, 27], [42, 28], [43, 29], [44, 30], [45, 31], [46, 32], [47, 33], [48, 8], [49, 34], [50, 35], [51, 11], [52, 36], [53, 37], [54, 38], [55, 39], [56, 40], [57, 41], [58, 42], [59, 43], [60, 44], [61, 45], [62, 46], [63, 47], [64, 48], [65, 49], [66, 50], [67, 51], [68, 52], [69, 53], [70, 54], [71, 55], [72, 56], [73, 57], [74, 58], [75, 59], [76, 60], [77, 61], [78, 62], [79, 63], [80, 64], [81, 65], [82, 66], [83, 67], [84, 68], [85, 69], [86, 70], [87, 71], [88, 72], [89, 73], [90, 74], [91, 75], [92, 76], [93, 77], [94, 78], [95, 79], [96, 80], [97, 81], [98, 82], [99, 83], [100, 84], [101, 85], [102, 86], [103, 87], [104, 88], [105, 89], [106, 90], [107, 91], [108, 92], [109, 93], [110, 94], [111, 95], [112, 96], [113, 97], [114, 98], [115, 99], [116, 100], [117, 101], [118, 102], [119, 103], [120, 104], [121, 105], [122, 106], [123, 107], [124, 108], [125, 108], [126, 109], [127, 109]]);
var n2 = t([[0, 110], [1, 111], [2, 112], [3, 113], [4, 114], [5, 115], [6, 116], [7, 117], [8, 118], [9, 119], [10, 120], [11, 0], [12, 111], [13, 112], [14, 113], [15, 114], [16, 110], [17, 13], [18, 0], [19, 120], [20, 0], [21, 120], [22, 12], [23, 114], [24, 115], [25, 113], [26, 114], [27, 118], [28, 121], [29, 122], [30, 123], [31, 124], [32, 125], [33, 126], [34, 127], [35, 128], [36, 22], [37, 129], [38, 130], [39, 131], [40, 132], [41, 133], [42, 134], [43, 135], [44, 136], [45, 137], [46, 138], [47, 139], [48, 140], [49, 141], [50, 142], [51, 29], [52, 143], [53, 144], [54, 145], [55, 146], [56, 147], [57, 148], [58, 149], [59, 150], [60, 44], [61, 151], [62, 152], [63, 153], [64, 154], [65, 155], [66, 156], [67, 157], [68, 158], [69, 159], [70, 160], [71, 161], [72, 56], [73, 162], [74, 163], [75, 164], [76, 165], [77, 166], [78, 167], [79, 168], [80, 169], [81, 170], [82, 171], [83, 172], [84, 68], [85, 173], [86, 174], [87, 175], [88, 176], [89, 177], [90, 178], [91, 179], [92, 180], [93, 181], [94, 182], [95, 183], [96, 80], [97, 184], [98, 185], [99, 186], [100, 187], [101, 188], [102, 189], [103, 190], [104, 191], [105, 192], [106, 193], [107, 194], [108, 92], [109, 195], [110, 196], [111, 197], [112, 198], [113, 199], [114, 200], [115, 201], [116, 202], [117, 203], [118, 204], [119, 205], [120, 104], [121, 206], [122, 207], [123, 208], [124, 209], [125, 209], [126, 210], [127, 210]]);
var n3 = t([[0, 48], [1, 49], [2, 50], [3, 51], [4, 52], [5, 53], [6, 55], [7, 56], [8, 57], [9, 58], [10, 59], [11, 11], [12, 49], [13, 50], [14, 51], [15, 52], [16, 48], [17, 211], [18, 11], [19, 59], [20, 11], [21, 59], [22, 212], [23, 51], [24, 52], [25, 51], [26, 51], [27, 57]]);
var n4 = t([[0, 96], [1, 97], [2, 98], [3, 99], [4, 100], [5, 101], [6, 103], [7, 104], [8, 105], [9, 106], [10, 107], [11, 11], [12, 97], [13, 98], [14, 99], [15, 100], [16, 96], [17, 213], [18, 11], [19, 107], [20, 11], [21, 107], [22, 214], [23, 99], [24, 100], [25, 99], [26, 99], [27, 105]]);
var n5 = t([[0, 36], [1, 37], [2, 38], [3, 39], [4, 40], [5, 41], [6, 43], [7, 44], [8, 45], [9, 46], [10, 47], [11, 11], [12, 37], [13, 38], [14, 39], [15, 40], [16, 36], [17, 215], [18, 11], [19, 47], [20, 11], [21, 47], [22, 216], [23, 39], [24, 40], [25, 39], [26, 39], [27, 45]]);
var n6 = t([[0, 14], [1, 15], [2, 16], [3, 17], [4, 18], [5, 19], [6, 21], [7, 22], [8, 23], [9, 24], [10, 25], [11, 11], [12, 15], [13, 16], [14, 17], [15, 18], [16, 14], [17, 217], [18, 11], [19, 25], [20, 11], [21, 25], [22, 218], [23, 17], [24, 18], [25, 17], [26, 17], [27, 23]]);
var n7 = t([[0, 72], [1, 73], [2, 74], [3, 75], [4, 76], [5, 77], [6, 79], [7, 80], [8, 81], [9, 82], [10, 83], [11, 11], [12, 73], [13, 74], [14, 75], [15, 76], [16, 72], [17, 219], [18, 11], [19, 83], [20, 11], [21, 83], [22, 220], [23, 75], [24, 76], [25, 75], [26, 75], [27, 81]]);
var n8 = t([[0, 60], [1, 61], [2, 62], [3, 63], [4, 64], [5, 65], [6, 67], [7, 68], [8, 69], [9, 70], [10, 71], [11, 11], [12, 61], [13, 62], [14, 63], [15, 64], [16, 60], [17, 221], [18, 11], [19, 71], [20, 11], [21, 71], [22, 222], [23, 63], [24, 64], [25, 63], [26, 63], [27, 69]]);
var n9 = t([[0, 84], [1, 85], [2, 86], [3, 87], [4, 88], [5, 89], [6, 91], [7, 92], [8, 93], [9, 94], [10, 95], [11, 11], [12, 85], [13, 86], [14, 87], [15, 88], [16, 84], [17, 223], [18, 11], [19, 95], [20, 11], [21, 95], [22, 224], [23, 87], [24, 88], [25, 87], [26, 87], [27, 93]]);
var n10 = t([[0, 154], [1, 155], [2, 156], [3, 157], [4, 158], [5, 159], [6, 161], [7, 56], [8, 162], [9, 163], [10, 164], [11, 0], [12, 155], [13, 156], [14, 157], [15, 158], [16, 154], [17, 225], [18, 0], [19, 164], [20, 0], [21, 164], [22, 226], [23, 158], [24, 159], [25, 157], [26, 158], [27, 162]]);
var n11 = t([[0, 198], [1, 199], [2, 200], [3, 201], [4, 202], [5, 203], [6, 205], [7, 104], [8, 206], [9, 207], [10, 208], [11, 0], [12, 199], [13, 200], [14, 201], [15, 202], [16, 198], [17, 227], [18, 0], [19, 208], [20, 0], [21, 208], [22, 228], [23, 202], [24, 203], [25, 201], [26, 202], [27, 206]]);
var n12 = t([[0, 143], [1, 144], [2, 145], [3, 146], [4, 147], [5, 148], [6, 150], [7, 44], [8, 151], [9, 152], [10, 153], [11, 0], [12, 144], [13, 145], [14, 146], [15, 147], [16, 143], [17, 229], [18, 0], [19, 153], [20, 0], [21, 153], [22, 230], [23, 147], [24, 148], [25, 146], [26, 147], [27, 151]]);
var n13 = t([[0, 121], [1, 122], [2, 123], [3, 124], [4, 125], [5, 126], [6, 128], [7, 22], [8, 129], [9, 130], [10, 131], [11, 0], [12, 122], [13, 123], [14, 124], [15, 125], [16, 121], [17, 231], [18, 0], [19, 131], [20, 0], [21, 131], [22, 232], [23, 125], [24, 126], [25, 124], [26, 125], [27, 129]]);
var n14 = t([[0, 176], [1, 177], [2, 178], [3, 179], [4, 180], [5, 181], [6, 183], [7, 80], [8, 184], [9, 185], [10, 186], [11, 0], [12, 177], [13, 178], [14, 179], [15, 180], [16, 176], [17, 233], [18, 0], [19, 186], [20, 0], [21, 186], [22, 234], [23, 180], [24, 181], [25, 179], [26, 180], [27, 184]]);
var n15 = t([[0, 165], [1, 166], [2, 167], [3, 168], [4, 169], [5, 170], [6, 172], [7, 68], [8, 173], [9, 174], [10, 175], [11, 0], [12, 166], [13, 167], [14, 168], [15, 169], [16, 165], [17, 235], [18, 0], [19, 175], [20, 0], [21, 175], [22, 236], [23, 169], [24, 170], [25, 168], [26, 169], [27, 173]]);
var n16 = t([[0, 187], [1, 188], [2, 189], [3, 190], [4, 191], [5, 192], [6, 194], [7, 92], [8, 195], [9, 196], [10, 197], [11, 0], [12, 188], [13, 189], [14, 190], [15, 191], [16, 187], [17, 237], [18, 0], [19, 197], [20, 0], [21, 197], [22, 238], [23, 191], [24, 192], [25, 190], [26, 191], [27, 195]]);
var n17 = t([[12, 239]]);
var n18 = t([[12, 240]]);
var n19 = t([[0, 1], [1, 2], [2, 3], [3, 4], [4, 5], [5, 6], [6, 7], [7, 8], [8, 9], [9, 10], [10, 11], [11, 11], [12, 2], [13, 3], [14, 4], [15, 5], [16, 1], [17, 0], [18, 10], [19, 9], [20, 10], [21, 9], [22, 11], [23, 5], [24, 6], [25, 4], [26, 5], [27, 7]]);
var n20 = t([[0, 2], [1, 3], [2, 4], [3, 5], [4, 6], [5, 7], [6, 8], [7, 9], [8, 10], [9, 11], [10, 11], [11, 11], [12, 3], [13, 4], [14, 5], [15, 6], [16, 2], [17, 1], [18, 9], [19, 8], [20, 9], [21, 8], [22, 10], [23, 6], [24, 7], [25, 5], [26, 6], [27, 6]]);
var n21 = t([[0, 3], [1, 4], [2, 5], [3, 6], [4, 7], [5, 8], [6, 9], [7, 10], [8, 11], [9, 13], [10, 13], [11, 13], [12, 4], [13, 5], [14, 6], [15, 7], [16, 3], [17, 2], [19, 7], [20, 8], [21, 7], [22, 9], [23, 7], [24, 8], [25, 6], [26, 7], [27, 5]]);
var n22 = t([[0, 111], [1, 112], [2, 113], [3, 114], [4, 115], [5, 116], [6, 117], [7, 118], [8, 119], [9, 120], [10, 0], [11, 0], [12, 112], [13, 113], [14, 114], [15, 115], [16, 111], [17, 110], [18, 120], [19, 119], [20, 120], [21, 119], [22, 0], [23, 115], [24, 116], [25, 114], [26, 115], [27, 117]]);
var n23 = t([[0, 112], [1, 113], [2, 114], [3, 115], [4, 116], [5, 117], [6, 118], [7, 119], [8, 120], [9, 0], [10, 0], [11, 0], [12, 113], [13, 114], [14, 115], [15, 116], [16, 112], [17, 111], [18, 119], [19, 118], [20, 119], [21, 118], [22, 120], [23, 116], [24, 117], [25, 115], [26, 116], [27, 116]]);
var n24 = t([[0, 113], [1, 114], [2, 115], [3, 116], [4, 117], [5, 118], [6, 119], [7, 120], [8, 0], [9, 12], [10, 12], [11, 12], [12, 114], [13, 115], [14, 116], [15, 117], [16, 113], [17, 112], [19, 117], [20, 118], [21, 117], [22, 119], [23, 117], [24, 118], [25, 116], [26, 117], [27, 115]]);
var n25 = t([[0, 49], [1, 50], [2, 51], [3, 52], [4, 53], [5, 55], [6, 56], [7, 57], [8, 58], [9, 59], [10, 11], [11, 11], [12, 50], [13, 51], [14, 52], [15, 53], [16, 49], [17, 48], [18, 59], [19, 58], [20, 59], [21, 58], [22, 11], [23, 52], [24, 53], [25, 52], [26, 52], [27, 56]]);
var n26 = t([[0, 50], [1, 51], [2, 52], [3, 53], [4, 55], [5, 56], [6, 57], [7, 58], [8, 59], [9, 11], [10, 11], [11, 11], [12, 51], [13, 52], [14, 53], [15, 55], [16, 50], [17, 49], [18, 58], [19, 57], [20, 58], [21, 57], [22, 59], [23, 53], [24, 55], [25, 53], [26, 53], [27, 55]]);
var n27 = t([[0, 51], [1, 52], [2, 53], [3, 55], [4, 56], [5, 57], [6, 58], [7, 59], [8, 11], [9, 212], [10, 212], [11, 212], [12, 52], [13, 53], [14, 55], [15, 56], [16, 51], [17, 50], [19, 56], [20, 57], [21, 56], [22, 58], [23, 55], [24, 56], [25, 55], [26, 55], [27, 53]]);
var n28 = t([[0, 97], [1, 98], [2, 99], [3, 100], [4, 101], [5, 103], [6, 104], [7, 105], [8, 106], [9, 107], [10, 11], [11, 11], [12, 98], [13, 99], [14, 100], [15, 101], [16, 97], [17, 96], [18, 107], [19, 106], [20, 107], [21, 106], [22, 11], [23, 100], [24, 101], [25, 100], [26, 100], [27, 104]]);
var n29 = t([[0, 98], [1, 99], [2, 100], [3, 101], [4, 103], [5, 104], [6, 105], [7, 106], [8, 107], [9, 11], [10, 11], [11, 11], [12, 99], [13, 100], [14, 101], [15, 103], [16, 98], [17, 97], [18, 106], [19, 105], [20, 106], [21, 105], [22, 107], [23, 101], [24, 103], [25, 101], [26, 101], [27, 103]]);
var n30 = t([[0, 99], [1, 100], [2, 101], [3, 103], [4, 104], [5, 105], [6, 106], [7, 107], [8, 11], [9, 214], [10, 214], [11, 214], [12, 100], [13, 101], [14, 103], [15, 104], [16, 99], [17, 98], [19, 104], [20, 105], [21, 104], [22, 106], [23, 103], [24, 104], [25, 103], [26, 103], [27, 101]]);
var n31 = t([[0, 37], [1, 38], [2, 39], [3, 40], [4, 41], [5, 43], [6, 44], [7, 45], [8, 46], [9, 47], [10, 11], [11, 11], [12, 38], [13, 39], [14, 40], [15, 41], [16, 37], [17, 36], [18, 47], [19, 46], [20, 47], [21, 46], [22, 11], [23, 40], [24, 41], [25, 40], [26, 40], [27, 44]]);
var n32 = t([[0, 38], [1, 39], [2, 40], [3, 41], [4, 43], [5, 44], [6, 45], [7, 46], [8, 47], [9, 11], [10, 11], [11, 11], [12, 39], [13, 40], [14, 41], [15, 43], [16, 38], [17, 37], [18, 46], [19, 45], [20, 46], [21, 45], [22, 47], [23, 41], [24, 43], [25, 41], [26, 41], [27, 43]]);
var n33 = t([[0, 39], [1, 40], [2, 41], [3, 43], [4, 44], [5, 45], [6, 46], [7, 47], [8, 11], [9, 216], [10, 216], [11, 216], [12, 40], [13, 41], [14, 43], [15, 44], [16, 39], [17, 38], [19, 44], [20, 45], [21, 44], [22, 46], [23, 43], [24, 44], [25, 43], [26, 43], [27, 41]]);
var n34 = t([[0, 15], [1, 16], [2, 17], [3, 18], [4, 19], [5, 21], [6, 22], [7, 23], [8, 24], [9, 25], [10, 11], [11, 11], [12, 16], [13, 17], [14, 18], [15, 19], [16, 15], [17, 14], [18, 25], [19, 24], [20, 25], [21, 24], [22, 11], [23, 18], [24, 19], [25, 18], [26, 18], [27, 22]]);
var n35 = t([[0, 16], [1, 17], [2, 18], [3, 19], [4, 21], [5, 22], [6, 23], [7, 24], [8, 25], [9, 11], [10, 11], [11, 11], [12, 17], [13, 18], [14, 19], [15, 21], [16, 16], [17, 15], [18, 24], [19, 23], [20, 24], [21, 23], [22, 25], [23, 19], [24, 21], [25, 19], [26, 19], [27, 21]]);
var n36 = t([[0, 17], [1, 18], [2, 19], [3, 21], [4, 22], [5, 23], [6, 24], [7, 25], [8, 11], [9, 218], [10, 218], [11, 218], [12, 18], [13, 19], [14, 21], [15, 22], [16, 17], [17, 16], [19, 22], [20, 23], [21, 22], [22, 24], [23, 21], [24, 22], [25, 21], [26, 21], [27, 19]]);
var n37 = t([[0, 73], [1, 74], [2, 75], [3, 76], [4, 77], [5, 79], [6, 80], [7, 81], [8, 82], [9, 83], [10, 11], [11, 11], [12, 74], [13, 75], [14, 76], [15, 77], [16, 73], [17, 72], [18, 83], [19, 82], [20, 83], [21, 82], [22, 11], [23, 76], [24, 77], [25, 76], [26, 76], [27, 80]]);
var n38 = t([[0, 74], [1, 75], [2, 76], [3, 77], [4, 79], [5, 80], [6, 81], [7, 82], [8, 83], [9, 11], [10, 11], [11, 11], [12, 75], [13, 76], [14, 77], [15, 79], [16, 74], [17, 73], [18, 82], [19, 81], [20, 82], [21, 81], [22, 83], [23, 77], [24, 79], [25, 77], [26, 77], [27, 79]]);
var n39 = t([[0, 75], [1, 76], [2, 77], [3, 79], [4, 80], [5, 81], [6, 82], [7, 83], [8, 11], [9, 220], [10, 220], [11, 220], [12, 76], [13, 77], [14, 79], [15, 80], [16, 75], [17, 74], [19, 80], [20, 81], [21, 80], [22, 82], [23, 79], [24, 80], [25, 79], [26, 79], [27, 77]]);
var n40 = t([[0, 61], [1, 62], [2, 63], [3, 64], [4, 65], [5, 67], [6, 68], [7, 69], [8, 70], [9, 71], [10, 11], [11, 11], [12, 62], [13, 63], [14, 64], [15, 65], [16, 61], [17, 60], [18, 71], [19, 70], [20, 71], [21, 70], [22, 11], [23, 64], [24, 65], [25, 64], [26, 64], [27, 68]]);
var n41 = t([[0, 62], [1, 63], [2, 64], [3, 65], [4, 67], [5, 68], [6, 69], [7, 70], [8, 71], [9, 11], [10, 11], [11, 11], [12, 63], [13, 64], [14, 65], [15, 67], [16, 62], [17, 61], [18, 70], [19, 69], [20, 70], [21, 69], [22, 71], [23, 65], [24, 67], [25, 65], [26, 65], [27, 67]]);
var n42 = t([[0, 63], [1, 64], [2, 65], [3, 67], [4, 68], [5, 69], [6, 70], [7, 71], [8, 11], [9, 222], [10, 222], [11, 222], [12, 64], [13, 65], [14, 67], [15, 68], [16, 63], [17, 62], [19, 68], [20, 69], [21, 68], [22, 70], [23, 67], [24, 68], [25, 67], [26, 67], [27, 65]]);
var n43 = t([[0, 85], [1, 86], [2, 87], [3, 88], [4, 89], [5, 91], [6, 92], [7, 93], [8, 94], [9, 95], [10, 11], [11, 11], [12, 86], [13, 87], [14, 88], [15, 89], [16, 85], [17, 84], [18, 95], [19, 94], [20, 95], [21, 94], [22, 11], [23, 88], [24, 89], [25, 88], [26, 88], [27, 92]]);
var n44 = t([[0, 86], [1, 87], [2, 88], [3, 89], [4, 91], [5, 92], [6, 93], [7, 94], [8, 95], [9, 11], [10, 11], [11, 11], [12, 87], [13, 88], [14, 89], [15, 91], [16, 86], [17, 85], [18, 94], [19, 93], [20, 94], [21, 93], [22, 95], [23, 89], [24, 91], [25, 89], [26, 89], [27, 91]]);
var n45 = t([[0, 87], [1, 88], [2, 89], [3, 91], [4, 92], [5, 93], [6, 94], [7, 95], [8, 11], [9, 224], [10, 224], [11, 224], [12, 88], [13, 89], [14, 91], [15, 92], [16, 87], [17, 86], [19, 92], [20, 93], [21, 92], [22, 94], [23, 91], [24, 92], [25, 91], [26, 91], [27, 89]]);
var n46 = t([[0, 155], [1, 156], [2, 157], [3, 158], [4, 159], [5, 161], [6, 56], [7, 162], [8, 163], [9, 164], [10, 0], [11, 0], [12, 156], [13, 157], [14, 158], [15, 159], [16, 155], [17, 154], [18, 164], [19, 163], [20, 164], [21, 163], [22, 0], [23, 159], [24, 161], [25, 158], [26, 159], [27, 56]]);
var n47 = t([[0, 156], [1, 157], [2, 158], [3, 159], [4, 161], [5, 56], [6, 162], [7, 163], [8, 164], [9, 0], [10, 0], [11, 0], [12, 157], [13, 158], [14, 159], [15, 161], [16, 156], [17, 155], [18, 163], [19, 162], [20, 163], [21, 162], [22, 164], [23, 161], [24, 56], [25, 159], [26, 161], [27, 161]]);
var n48 = t([[0, 157], [1, 158], [2, 159], [3, 161], [4, 56], [5, 162], [6, 163], [7, 164], [8, 0], [9, 226], [10, 226], [11, 226], [12, 158], [13, 159], [14, 161], [15, 56], [16, 157], [17, 156], [19, 56], [20, 162], [21, 56], [22, 163], [23, 56], [24, 162], [25, 161], [26, 56], [27, 159]]);
var n49 = t([[0, 199], [1, 200], [2, 201], [3, 202], [4, 203], [5, 205], [6, 104], [7, 206], [8, 207], [9, 208], [10, 0], [11, 0], [12, 200], [13, 201], [14, 202], [15, 203], [16, 199], [17, 198], [18, 208], [19, 207], [20, 208], [21, 207], [22, 0], [23, 203], [24, 205], [25, 202], [26, 203], [27, 104]]);
var n50 = t([[0, 200], [1, 201], [2, 202], [3, 203], [4, 205], [5, 104], [6, 206], [7, 207], [8, 208], [9, 0], [10, 0], [11, 0], [12, 201], [13, 202], [14, 203], [15, 205], [16, 200], [17, 199], [18, 207], [19, 206], [20, 207], [21, 206], [22, 208], [23, 205], [24, 104], [25, 203], [26, 205], [27, 205]]);
var n51 = t([[0, 201], [1, 202], [2, 203], [3, 205], [4, 104], [5, 206], [6, 207], [7, 208], [8, 0], [9, 228], [10, 228], [11, 228], [12, 202], [13, 203], [14, 205], [15, 104], [16, 201], [17, 200], [19, 104], [20, 206], [21, 104], [22, 207], [23, 104], [24, 206], [25, 205], [26, 104], [27, 203]]);
var n52 = t([[0, 144], [1, 145], [2, 146], [3, 147], [4, 148], [5, 150], [6, 44], [7, 151], [8, 152], [9, 153], [10, 0], [11, 0], [12, 145], [13, 146], [14, 147], [15, 148], [16, 144], [17, 143], [18, 153], [19, 152], [20, 153], [21, 152], [22, 0], [23, 148], [24, 150], [25, 147], [26, 148], [27, 44]]);
var n53 = t([[0, 145], [1, 146], [2, 147], [3, 148], [4, 150], [5, 44], [6, 151], [7, 152], [8, 153], [9, 0], [10, 0], [11, 0], [12, 146], [13, 147], [14, 148], [15, 150], [16, 145], [17, 144], [18, 152], [19, 151], [20, 152], [21, 151], [22, 153], [23, 150], [24, 44], [25, 148], [26, 150], [27, 150]]);
var n54 = t([[0, 146], [1, 147], [2, 148], [3, 150], [4, 44], [5, 151], [6, 152], [7, 153], [8, 0], [9, 230], [10, 230], [11, 230], [12, 147], [13, 148], [14, 150], [15, 44], [16, 146], [17, 145], [19, 44], [20, 151], [21, 44], [22, 152], [23, 44], [24, 151], [25, 150], [26, 44], [27, 148]]);
var n55 = t([[0, 122], [1, 123], [2, 124], [3, 125], [4, 126], [5, 128], [6, 22], [7, 129], [8, 130], [9, 131], [10, 0], [11, 0], [12, 123], [13, 124], [14, 125], [15, 126], [16, 122], [17, 121], [18, 131], [19, 130], [20, 131], [21, 130], [22, 0], [23, 126], [24, 128], [25, 125], [26, 126], [27, 22]]);
var n56 = t([[0, 123], [1, 124], [2, 125], [3, 126], [4, 128], [5, 22], [6, 129], [7, 130], [8, 131], [9, 0], [10, 0], [11, 0], [12, 124], [13, 125], [14, 126], [15, 128], [16, 123], [17, 122], [18, 130], [19, 129], [20, 130], [21, 129], [22, 131], [23, 128], [24, 22], [25, 126], [26, 128], [27, 128]]);
var n57 = t([[0, 124], [1, 125], [2, 126], [3, 128], [4, 22], [5, 129], [6, 130], [7, 131], [8, 0], [9, 232], [10, 232], [11, 232], [12, 125], [13, 126], [14, 128], [15, 22], [16, 124], [17, 123], [19, 22], [20, 129], [21, 22], [22, 130], [23, 22], [24, 129], [25, 128], [26, 22], [27, 126]]);
var n58 = t([[0, 177], [1, 178], [2, 179], [3, 180], [4, 181], [5, 183], [6, 80], [7, 184], [8, 185], [9, 186], [10, 0], [11, 0], [12, 178], [13, 179], [14, 180], [15, 181], [16, 177], [17, 176], [18, 186], [19, 185], [20, 186], [21, 185], [22, 0], [23, 181], [24, 183], [25, 180], [26, 181], [27, 80]]);
var n59 = t([[0, 178], [1, 179], [2, 180], [3, 181], [4, 183], [5, 80], [6, 184], [7, 185], [8, 186], [9, 0], [10, 0], [11, 0], [12, 179], [13, 180], [14, 181], [15, 183], [16, 178], [17, 177], [18, 185], [19, 184], [20, 185], [21, 184], [22, 186], [23, 183], [24, 80], [25, 181], [26, 183], [27, 183]]);
var n60 = t([[0, 179], [1, 180], [2, 181], [3, 183], [4, 80], [5, 184], [6, 185], [7, 186], [8, 0], [9, 234], [10, 234], [11, 234], [12, 180], [13, 181], [14, 183], [15, 80], [16, 179], [17, 178], [19, 80], [20, 184], [21, 80], [22, 185], [23, 80], [24, 184], [25, 183], [26, 80], [27, 181]]);
var n61 = t([[0, 166], [1, 167], [2, 168], [3, 169], [4, 170], [5, 172], [6, 68], [7, 173], [8, 174], [9, 175], [10, 0], [11, 0], [12, 167], [13, 168], [14, 169], [15, 170], [16, 166], [17, 165], [18, 175], [19, 174], [20, 175], [21, 174], [22, 0], [23, 170], [24, 172], [25, 169], [26, 170], [27, 68]]);
var n62 = t([[0, 167], [1, 168], [2, 169], [3, 170], [4, 172], [5, 68], [6, 173], [7, 174], [8, 175], [9, 0], [10, 0], [11, 0], [12, 168], [13, 169], [14, 170], [15, 172], [16, 167], [17, 166], [18, 174], [19, 173], [20, 174], [21, 173], [22, 175], [23, 172], [24, 68], [25, 170], [26, 172], [27, 172]]);
var n63 = t([[0, 168], [1, 169], [2, 170], [3, 172], [4, 68], [5, 173], [6, 174], [7, 175], [8, 0], [9, 236], [10, 236], [11, 236], [12, 169], [13, 170], [14, 172], [15, 68], [16, 168], [17, 167], [19, 68], [20, 173], [21, 68], [22, 174], [23, 68], [24, 173], [25, 172], [26, 68], [27, 170]]);
var n64 = t([[0, 188], [1, 189], [2, 190], [3, 191], [4, 192], [5, 194], [6, 92], [7, 195], [8, 196], [9, 197], [10, 0], [11, 0], [12, 189], [13, 190], [14, 191], [15, 192], [16, 188], [17, 187], [18, 197], [19, 196], [20, 197], [21, 196], [22, 0], [23, 192], [24, 194], [25, 191], [26, 192], [27, 92]]);
var n65 = t([[0, 189], [1, 190], [2, 191], [3, 192], [4, 194], [5, 92], [6, 195], [7, 196], [8, 197], [9, 0], [10, 0], [11, 0], [12, 190], [13, 191], [14, 192], [15, 194], [16, 189], [17, 188], [18, 196], [19, 195], [20, 196], [21, 195], [22, 197], [23, 194], [24, 92], [25, 192], [26, 194], [27, 194]]);
var n66 = t([[0, 190], [1, 191], [2, 192], [3, 194], [4, 92], [5, 195], [6, 196], [7, 197], [8, 0], [9, 238], [10, 238], [11, 238], [12, 191], [13, 192], [14, 194], [15, 92], [16, 190], [17, 189], [19, 92], [20, 195], [21, 92], [22, 196], [23, 92], [24, 195], [25, 194], [26, 92], [27, 192]]);
var n67 = t([[12, 0], [13, 1], [14, 2], [15, 3], [16, 0], [17, 0], [18, 11], [19, 10], [20, 11], [21, 10], [22, 11], [23, 3], [24, 4], [25, 2], [26, 3], [27, 9]]);
var n68 = t([[12, 2], [13, 3], [14, 4], [15, 5], [16, 1], [17, 0], [18, 11], [19, 10], [20, 11], [21, 10], [22, 11], [23, 5], [24, 6], [25, 4], [26, 5], [27, 7]]);
var n69 = t([[12, 3], [13, 4], [14, 5], [15, 6], [16, 2], [17, 1], [18, 11], [19, 10], [20, 11], [21, 10], [22, 10], [23, 241], [24, 241], [25, 5], [26, 6], [27, 6]]);
var n70 = t([[12, 1], [13, 2], [14, 3], [15, 4], [16, 0], [17, 12], [18, 11], [19, 10], [20, 11], [21, 10], [22, 13], [23, 6], [24, 7], [25, 5], [26, 6], [27, 8]]);
var n71 = t([[12, 3], [13, 4], [14, 5], [15, 6], [16, 2], [17, 1], [18, 11], [19, 10], [20, 11], [21, 10], [22, 10], [23, 6], [24, 7], [25, 5], [26, 6], [27, 6]]);
var n72 = t([[12, 11], [13, 11], [14, 10], [15, 9], [16, 11], [17, 11], [18, 0], [19, 1], [20, 0], [21, 1], [22, 0], [23, 9], [24, 8], [25, 10], [26, 9], [27, 1]]);
var n73 = t([[12, 8], [13, 7], [14, 6], [15, 5], [16, 9], [17, 10], [18, 0], [19, 1], [20, 0], [21, 1], [22, 1], [23, 5], [24, 4], [25, 6], [26, 5], [27, 5]]);
var n74 = t([[12, 10], [13, 9], [14, 8], [15, 7], [16, 11], [17, 13], [18, 0], [19, 1], [20, 0], [21, 1], [22, 12], [23, 7], [24, 6], [25, 8], [26, 7], [27, 3]]);
var n75 = t([[12, 111], [13, 112], [14, 113], [15, 114], [16, 110], [17, 13], [18, 0], [19, 120], [20, 0], [21, 120], [22, 12], [23, 114], [24, 115], [25, 113], [26, 114], [27, 118]]);
var n76 = t([[12, 112], [13, 113], [14, 114], [15, 115], [16, 111], [17, 110], [18, 0], [19, 120], [20, 0], [21, 120], [22, 0], [23, 115], [24, 116], [25, 114], [26, 115], [27, 117]]);
var n77 = t([[12, 113], [13, 114], [14, 115], [15, 116], [16, 112], [17, 111], [18, 0], [19, 120], [20, 0], [21, 120], [22, 120], [23, 241], [24, 241], [25, 115], [26, 116], [27, 116]]);
var n78 = t([[12, 111], [13, 112], [14, 113], [15, 114], [16, 110], [17, 13], [18, 0], [19, 120], [20, 0], [21, 120], [22, 12], [23, 116], [24, 117], [25, 115], [26, 116], [27, 118]]);
var n79 = t([[12, 113], [13, 114], [14, 115], [15, 116], [16, 112], [17, 111], [18, 0], [19, 120], [20, 0], [21, 120], [22, 120], [23, 116], [24, 117], [25, 115], [26, 116], [27, 116]]);
var n80 = t([[12, 0], [13, 0], [14, 120], [15, 119], [16, 0], [17, 0], [18, 110], [19, 111], [20, 110], [21, 111], [22, 110], [23, 119], [24, 118], [25, 120], [26, 119], [27, 111]]);
var n81 = t([[12, 118], [13, 117], [14, 116], [15, 115], [16, 119], [17, 120], [18, 110], [19, 111], [20, 110], [21, 111], [22, 111], [23, 115], [24, 114], [25, 116], [26, 115], [27, 115]]);
var n82 = t([[12, 120], [13, 119], [14, 118], [15, 117], [16, 0], [17, 12], [18, 110], [19, 111], [20, 110], [21, 111], [22, 13], [23, 117], [24, 116], [25, 118], [26, 117], [27, 113]]);
var n83 = t([[12, 48], [13, 49], [14, 50], [15, 51], [16, 48], [17, 48], [18, 11], [19, 59], [20, 11], [21, 59], [22, 11], [23, 50], [24, 51], [25, 50], [26, 50], [27, 58]]);
var n84 = t([[12, 50], [13, 51], [14, 52], [15, 53], [16, 49], [17, 48], [18, 11], [19, 59], [20, 11], [21, 59], [22, 11], [23, 52], [24, 53], [25, 52], [26, 52], [27, 56]]);
var n85 = t([[12, 51], [13, 52], [14, 53], [15, 55], [16, 50], [17, 49], [18, 11], [19, 59], [20, 11], [21, 59], [22, 59], [23, 241], [24, 241], [25, 53], [26, 53], [27, 55]]);
var n86 = t([[12, 49], [13, 50], [14, 51], [15, 52], [16, 48], [17, 211], [18, 11], [19, 59], [20, 11], [21, 59], [22, 212], [23, 53], [24, 55], [25, 53], [26, 53], [27, 57]]);
var n87 = t([[12, 51], [13, 52], [14, 53], [15, 55], [16, 50], [17, 49], [18, 11], [19, 59], [20, 11], [21, 59], [22, 59], [23, 53], [24, 55], [25, 53], [26, 53], [27, 55]]);
var n88 = t([[12, 11], [13, 11], [14, 59], [15, 58], [16, 11], [17, 11], [18, 48], [19, 49], [20, 48], [21, 49], [22, 48], [23, 59], [24, 58], [25, 59], [26, 59], [27, 49]]);
var n89 = t([[12, 57], [13, 56], [14, 55], [15, 53], [16, 58], [17, 59], [18, 48], [19, 49], [20, 48], [21, 49], [22, 49], [23, 55], [24, 53], [25, 55], [26, 55], [27, 53]]);
var n90 = t([[12, 59], [13, 58], [14, 57], [15, 56], [16, 11], [17, 212], [18, 48], [19, 49], [20, 48], [21, 49], [22, 211], [23, 57], [24, 56], [25, 57], [26, 57], [27, 51]]);
var n91 = t([[12, 96], [13, 97], [14, 98], [15, 99], [16, 96], [17, 96], [18, 11], [19, 107], [20, 11], [21, 107], [22, 11], [23, 98], [24, 99], [25, 98], [26, 98], [27, 106]]);
var n92 = t([[12, 98], [13, 99], [14, 100], [15, 101], [16, 97], [17, 96], [18, 11], [19, 107], [20, 11], [21, 107], [22, 11], [23, 100], [24, 101], [25, 100], [26, 100], [27, 104]]);
var n93 = t([[12, 99], [13, 100], [14, 101], [15, 103], [16, 98], [17, 97], [18, 11], [19, 107], [20, 11], [21, 107], [22, 107], [23, 241], [24, 241], [25, 101], [26, 101], [27, 103]]);
var n94 = t([[12, 97], [13, 98], [14, 99], [15, 100], [16, 96], [17, 213], [18, 11], [19, 107], [20, 11], [21, 107], [22, 214], [23, 101], [24, 103], [25, 101], [26, 101], [27, 105]]);
var n95 = t([[12, 99], [13, 100], [14, 101], [15, 103], [16, 98], [17, 97], [18, 11], [19, 107], [20, 11], [21, 107], [22, 107], [23, 101], [24, 103], [25, 101], [26, 101], [27, 103]]);
var n96 = t([[12, 11], [13, 11], [14, 107], [15, 106], [16, 11], [17, 11], [18, 96], [19, 97], [20, 96], [21, 97], [22, 96], [23, 107], [24, 106], [25, 107], [26, 107], [27, 97]]);
var n97 = t([[12, 105], [13, 104], [14, 103], [15, 101], [16, 106], [17, 107], [18, 96], [19, 97], [20, 96], [21, 97], [22, 97], [23, 103], [24, 101], [25, 103], [26, 103], [27, 101]]);
var n98 = t([[12, 107], [13, 106], [14, 105], [15, 104], [16, 11], [17, 214], [18, 96], [19, 97], [20, 96], [21, 97], [22, 213], [23, 105], [24, 104], [25, 105], [26, 105], [27, 99]]);
var n99 = t([[12, 36], [13, 37], [14, 38], [15, 39], [16, 36], [17, 36], [18, 11], [19, 47], [20, 11], [21, 47], [22, 11], [23, 38], [24, 39], [25, 38], [26, 38], [27, 46]]);
var n100 = t([[12, 38], [13, 39], [14, 40], [15, 41], [16, 37], [17, 36], [18, 11], [19, 47], [20, 11], [21, 47], [22, 11], [23, 40], [24, 41], [25, 40], [26, 40], [27, 44]]);
var n101 = t([[12, 39], [13, 40], [14, 41], [15, 43], [16, 38], [17, 37], [18, 11], [19, 47], [20, 11], [21, 47], [22, 47], [23, 241], [24, 241], [25, 41], [26, 41], [27, 43]]);
var n102 = t([[12, 37], [13, 38], [14, 39], [15, 40], [16, 36], [17, 215], [18, 11], [19, 47], [20, 11], [21, 47], [22, 216], [23, 41], [24, 43], [25, 41], [26, 41], [27, 45]]);
var n103 = t([[12, 39], [13, 40], [14, 41], [15, 43], [16, 38], [17, 37], [18, 11], [19, 47], [20, 11], [21, 47], [22, 47], [23, 41], [24, 43], [25, 41], [26, 41], [27, 43]]);
var n104 = t([[12, 11], [13, 11], [14, 47], [15, 46], [16, 11], [17, 11], [18, 36], [19, 37], [20, 36], [21, 37], [22, 36], [23, 47], [24, 46], [25, 47], [26, 47], [27, 37]]);
var n105 = t([[12, 45], [13, 44], [14, 43], [15, 41], [16, 46], [17, 47], [18, 36], [19, 37], [20, 36], [21, 37], [22, 37], [23, 43], [24, 41], [25, 43], [26, 43], [27, 41]]);
var n106 = t([[12, 47], [13, 46], [14, 45], [15, 44], [16, 11], [17, 216], [18, 36], [19, 37], [20, 36], [21, 37], [22, 215], [23, 45], [24, 44], [25, 45], [26, 45], [27, 39]]);
var n107 = t([[12, 14], [13, 15], [14, 16], [15, 17], [16, 14], [17, 14], [18, 11], [19, 25], [20, 11], [21, 25], [22, 11], [23, 16], [24, 17], [25, 16], [26, 16], [27, 24]]);
var n108 = t([[12, 16], [13, 17], [14, 18], [15, 19], [16, 15], [17, 14], [18, 11], [19, 25], [20, 11], [21, 25], [22, 11], [23, 18], [24, 19], [25, 18], [26, 18], [27, 22]]);
var n109 = t([[12, 17], [13, 18], [14, 19], [15, 21], [16, 16], [17, 15], [18, 11], [19, 25], [20, 11], [21, 25], [22, 25], [23, 241], [24, 241], [25, 19], [26, 19], [27, 21]]);
var n110 = t([[12, 15], [13, 16], [14, 17], [15, 18], [16, 14], [17, 217], [18, 11], [19, 25], [20, 11], [21, 25], [22, 218], [23, 19], [24, 21], [25, 19], [26, 19], [27, 23]]);
var n111 = t([[12, 17], [13, 18], [14, 19], [15, 21], [16, 16], [17, 15], [18, 11], [19, 25], [20, 11], [21, 25], [22, 25], [23, 19], [24, 21], [25, 19], [26, 19], [27, 21]]);
var n112 = t([[12, 11], [13, 11], [14, 25], [15, 24], [16, 11], [17, 11], [18, 14], [19, 15], [20, 14], [21, 15], [22, 14], [23, 25], [24, 24], [25, 25], [26, 25], [27, 15]]);
var n113 = t([[12, 23], [13, 22], [14, 21], [15, 19], [16, 24], [17, 25], [18, 14], [19, 15], [20, 14], [21, 15], [22, 15], [23, 21], [24, 19], [25, 21], [26, 21], [27, 19]]);
var n114 = t([[12, 25], [13, 24], [14, 23], [15, 22], [16, 11], [17, 218], [18, 14], [19, 15], [20, 14], [21, 15], [22, 217], [23, 23], [24, 22], [25, 23], [26, 23], [27, 17]]);
var n115 = t([[12, 72], [13, 73], [14, 74], [15, 75], [16, 72], [17, 72], [18, 11], [19, 83], [20, 11], [21, 83], [22, 11], [23, 74], [24, 75], [25, 74], [26, 74], [27, 82]]);
var n116 = t([[12, 74], [13, 75], [14, 76], [15, 77], [16, 73], [17, 72], [18, 11], [19, 83], [20, 11], [21, 83], [22, 11], [23, 76], [24, 77], [25, 76], [26, 76], [27, 80]]);
var n117 = t([[12, 75], [13, 76], [14, 77], [15, 79], [16, 74], [17, 73], [18, 11], [19, 83], [20, 11], [21, 83], [22, 83], [23, 241], [24, 241], [25, 77], [26, 77], [27, 79]]);
var n118 = t([[12, 73], [13, 74], [14, 75], [15, 76], [16, 72], [17, 219], [18, 11], [19, 83], [20, 11], [21, 83], [22, 220], [23, 77], [24, 79], [25, 77], [26, 77], [27, 81]]);
var n119 = t([[12, 75], [13, 76], [14, 77], [15, 79], [16, 74], [17, 73], [18, 11], [19, 83], [20, 11], [21, 83], [22, 83], [23, 77], [24, 79], [25, 77], [26, 77], [27, 79]]);
var n120 = t([[12, 11], [13, 11], [14, 83], [15, 82], [16, 11], [17, 11], [18, 72], [19, 73], [20, 72], [21, 73], [22, 72], [23, 83], [24, 82], [25, 83], [26, 83], [27, 73]]);
var n121 = t([[12, 81], [13, 80], [14, 79], [15, 77], [16, 82], [17, 83], [18, 72], [19, 73], [20, 72], [21, 73], [22, 73], [23, 79], [24, 77], [25, 79], [26, 79], [27, 77]]);
var n122 = t([[12, 83], [13, 82], [14, 81], [15, 80], [16, 11], [17, 220], [18, 72], [19, 73], [20, 72], [21, 73], [22, 219], [23, 81], [24, 80], [25, 81], [26, 81], [27, 75]]);
var n123 = t([[12, 60], [13, 61], [14, 62], [15, 63], [16, 60], [17, 60], [18, 11], [19, 71], [20, 11], [21, 71], [22, 11], [23, 62], [24, 63], [25, 62], [26, 62], [27, 70]]);
var n124 = t([[12, 62], [13, 63], [14, 64], [15, 65], [16, 61], [17, 60], [18, 11], [19, 71], [20, 11], [21, 71], [22, 11], [23, 64], [24, 65], [25, 64], [26, 64], [27, 68]]);
var n125 = t([[12, 63], [13, 64], [14, 65], [15, 67], [16, 62], [17, 61], [18, 11], [19, 71], [20, 11], [21, 71], [22, 71], [23, 241], [24, 241], [25, 65], [26, 65], [27, 67]]);
var n126 = t([[12, 61], [13, 62], [14, 63], [15, 64], [16, 60], [17, 221], [18, 11], [19, 71], [20, 11], [21, 71], [22, 222], [23, 65], [24, 67], [25, 65], [26, 65], [27, 69]]);
var n127 = t([[12, 63], [13, 64], [14, 65], [15, 67], [16, 62], [17, 61], [18, 11], [19, 71], [20, 11], [21, 71], [22, 71], [23, 65], [24, 67], [25, 65], [26, 65], [27, 67]]);
var n128 = t([[12, 11], [13, 11], [14, 71], [15, 70], [16, 11], [17, 11], [18, 60], [19, 61], [20, 60], [21, 61], [22, 60], [23, 71], [24, 70], [25, 71], [26, 71], [27, 61]]);
var n129 = t([[12, 69], [13, 68], [14, 67], [15, 65], [16, 70], [17, 71], [18, 60], [19, 61], [20, 60], [21, 61], [22, 61], [23, 67], [24, 65], [25, 67], [26, 67], [27, 65]]);
var n130 = t([[12, 71], [13, 70], [14, 69], [15, 68], [16, 11], [17, 222], [18, 60], [19, 61], [20, 60], [21, 61], [22, 221], [23, 69], [24, 68], [25, 69], [26, 69], [27, 63]]);
var n131 = t([[12, 84], [13, 85], [14, 86], [15, 87], [16, 84], [17, 84], [18, 11], [19, 95], [20, 11], [21, 95], [22, 11], [23, 86], [24, 87], [25, 86], [26, 86], [27, 94]]);
var n132 = t([[12, 86], [13, 87], [14, 88], [15, 89], [16, 85], [17, 84], [18, 11], [19, 95], [20, 11], [21, 95], [22, 11], [23, 88], [24, 89], [25, 88], [26, 88], [27, 92]]);
var n133 = t([[12, 87], [13, 88], [14, 89], [15, 91], [16, 86], [17, 85], [18, 11], [19, 95], [20, 11], [21, 95], [22, 95], [23, 241], [24, 241], [25, 89], [26, 89], [27, 91]]);
var n134 = t([[12, 85], [13, 86], [14, 87], [15, 88], [16, 84], [17, 223], [18, 11], [19, 95], [20, 11], [21, 95], [22, 224], [23, 89], [24, 91], [25, 89], [26, 89], [27, 93]]);
var n135 = t([[12, 87], [13, 88], [14, 89], [15, 91], [16, 86], [17, 85], [18, 11], [19, 95], [20, 11], [21, 95], [22, 95], [23, 89], [24, 91], [25, 89], [26, 89], [27, 91]]);
var n136 = t([[12, 11], [13, 11], [14, 95], [15, 94], [16, 11], [17, 11], [18, 84], [19, 85], [20, 84], [21, 85], [22, 84], [23, 95], [24, 94], [25, 95], [26, 95], [27, 85]]);
var n137 = t([[12, 93], [13, 92], [14, 91], [15, 89], [16, 94], [17, 95], [18, 84], [19, 85], [20, 84], [21, 85], [22, 85], [23, 91], [24, 89], [25, 91], [26, 91], [27, 89]]);
var n138 = t([[12, 95], [13, 94], [14, 93], [15, 92], [16, 11], [17, 224], [18, 84], [19, 85], [20, 84], [21, 85], [22, 223], [23, 93], [24, 92], [25, 93], [26, 93], [27, 87]]);
var n139 = t([[12, 155], [13, 156], [14, 157], [15, 158], [16, 154], [17, 225], [18, 0], [19, 164], [20, 0], [21, 164], [22, 226], [23, 158], [24, 159], [25, 157], [26, 158], [27, 162]]);
var n140 = t([[12, 156], [13, 157], [14, 158], [15, 159], [16, 155], [17, 154], [18, 0], [19, 164], [20, 0], [21, 164], [22, 0], [23, 159], [24, 161], [25, 158], [26, 159], [27, 56]]);
var n141 = t([[12, 157], [13, 158], [14, 159], [15, 161], [16, 156], [17, 155], [18, 0], [19, 164], [20, 0], [21, 164], [22, 164], [23, 241], [24, 241], [25, 159], [26, 161], [27, 161]]);
var n142 = t([[12, 155], [13, 156], [14, 157], [15, 158], [16, 154], [17, 225], [18, 0], [19, 164], [20, 0], [21, 164], [22, 226], [23, 161], [24, 56], [25, 159], [26, 161], [27, 162]]);
var n143 = t([[12, 157], [13, 158], [14, 159], [15, 161], [16, 156], [17, 155], [18, 0], [19, 164], [20, 0], [21, 164], [22, 164], [23, 161], [24, 56], [25, 159], [26, 161], [27, 161]]);
var n144 = t([[12, 0], [13, 0], [14, 164], [15, 163], [16, 0], [17, 0], [18, 154], [19, 155], [20, 154], [21, 155], [22, 154], [23, 163], [24, 162], [25, 164], [26, 163], [27, 155]]);
var n145 = t([[12, 162], [13, 56], [14, 161], [15, 159], [16, 163], [17, 164], [18, 154], [19, 155], [20, 154], [21, 155], [22, 155], [23, 159], [24, 158], [25, 161], [26, 159], [27, 159]]);
var n146 = t([[12, 164], [13, 163], [14, 162], [15, 56], [16, 0], [17, 226], [18, 154], [19, 155], [20, 154], [21, 155], [22, 225], [23, 56], [24, 161], [25, 162], [26, 56], [27, 157]]);
var n147 = t([[12, 199], [13, 200], [14, 201], [15, 202], [16, 198], [17, 227], [18, 0], [19, 208], [20, 0], [21, 208], [22, 228], [23, 202], [24, 203], [25, 201], [26, 202], [27, 206]]);
var n148 = t([[12, 200], [13, 201], [14, 202], [15, 203], [16, 199], [17, 198], [18, 0], [19, 208], [20, 0], [21, 208], [22, 0], [23, 203], [24, 205], [25, 202], [26, 203], [27, 104]]);
var n149 = t([[12, 201], [13, 202], [14, 203], [15, 205], [16, 200], [17, 199], [18, 0], [19, 208], [20, 0], [21, 208], [22, 208], [23, 241], [24, 241], [25, 203], [26, 205], [27, 205]]);
var n150 = t([[12, 199], [13, 200], [14, 201], [15, 202], [16, 198], [17, 227], [18, 0], [19, 208], [20, 0], [21, 208], [22, 228], [23, 205], [24, 104], [25, 203], [26, 205], [27, 206]]);
var n151 = t([[12, 201], [13, 202], [14, 203], [15, 205], [16, 200], [17, 199], [18, 0], [19, 208], [20, 0], [21, 208], [22, 208], [23, 205], [24, 104], [25, 203], [26, 205], [27, 205]]);
var n152 = t([[12, 0], [13, 0], [14, 208], [15, 207], [16, 0], [17, 0], [18, 198], [19, 199], [20, 198], [21, 199], [22, 198], [23, 207], [24, 206], [25, 208], [26, 207], [27, 199]]);
var n153 = t([[12, 206], [13, 104], [14, 205], [15, 203], [16, 207], [17, 208], [18, 198], [19, 199], [20, 198], [21, 199], [22, 199], [23, 203], [24, 202], [25, 205], [26, 203], [27, 203]]);
var n154 = t([[12, 208], [13, 207], [14, 206], [15, 104], [16, 0], [17, 228], [18, 198], [19, 199], [20, 198], [21, 199], [22, 227], [23, 104], [24, 205], [25, 206], [26, 104], [27, 201]]);
var n155 = t([[12, 144], [13, 145], [14, 146], [15, 147], [16, 143], [17, 229], [18, 0], [19, 153], [20, 0], [21, 153], [22, 230], [23, 147], [24, 148], [25, 146], [26, 147], [27, 151]]);
var n156 = t([[12, 145], [13, 146], [14, 147], [15, 148], [16, 144], [17, 143], [18, 0], [19, 153], [20, 0], [21, 153], [22, 0], [23, 148], [24, 150], [25, 147], [26, 148], [27, 44]]);
var n157 = t([[12, 146], [13, 147], [14, 148], [15, 150], [16, 145], [17, 144], [18, 0], [19, 153], [20, 0], [21, 153], [22, 153], [23, 241], [24, 241], [25, 148], [26, 150], [27, 150]]);
var n158 = t([[12, 144], [13, 145], [14, 146], [15, 147], [16, 143], [17, 229], [18, 0], [19, 153], [20, 0], [21, 153], [22, 230], [23, 150], [24, 44], [25, 148], [26, 150], [27, 151]]);
var n159 = t([[12, 146], [13, 147], [14, 148], [15, 150], [16, 145], [17, 144], [18, 0], [19, 153], [20, 0], [21, 153], [22, 153], [23, 150], [24, 44], [25, 148], [26, 150], [27, 150]]);
var n160 = t([[12, 0], [13, 0], [14, 153], [15, 152], [16, 0], [17, 0], [18, 143], [19, 144], [20, 143], [21, 144], [22, 143], [23, 152], [24, 151], [25, 153], [26, 152], [27, 144]]);
var n161 = t([[12, 151], [13, 44], [14, 150], [15, 148], [16, 152], [17, 153], [18, 143], [19, 144], [20, 143], [21, 144], [22, 144], [23, 148], [24, 147], [25, 150], [26, 148], [27, 148]]);
var n162 = t([[12, 153], [13, 152], [14, 151], [15, 44], [16, 0], [17, 230], [18, 143], [19, 144], [20, 143], [21, 144], [22, 229], [23, 44], [24, 150], [25, 151], [26, 44], [27, 146]]);
var n163 = t([[12, 122], [13, 123], [14, 124], [15, 125], [16, 121], [17, 231], [18, 0], [19, 131], [20, 0], [21, 131], [22, 232], [23, 125], [24, 126], [25, 124], [26, 125], [27, 129]]);
var n164 = t([[12, 123], [13, 124], [14, 125], [15, 126], [16, 122], [17, 121], [18, 0], [19, 131], [20, 0], [21, 131], [22, 0], [23, 126], [24, 128], [25, 125], [26, 126], [27, 22]]);
var n165 = t([[12, 124], [13, 125], [14, 126], [15, 128], [16, 123], [17, 122], [18, 0], [19, 131], [20, 0], [21, 131], [22, 131], [23, 241], [24, 241], [25, 126], [26, 128], [27, 128]]);
var n166 = t([[12, 122], [13, 123], [14, 124], [15, 125], [16, 121], [17, 231], [18, 0], [19, 131], [20, 0], [21, 131], [22, 232], [23, 128], [24, 22], [25, 126], [26, 128], [27, 129]]);
var n167 = t([[12, 124], [13, 125], [14, 126], [15, 128], [16, 123], [17, 122], [18, 0], [19, 131], [20, 0], [21, 131], [22, 131], [23, 128], [24, 22], [25, 126], [26, 128], [27, 128]]);
var n168 = t([[12, 0], [13, 0], [14, 131], [15, 130], [16, 0], [17, 0], [18, 121], [19, 122], [20, 121], [21, 122], [22, 121], [23, 130], [24, 129], [25, 131], [26, 130], [27, 122]]);
var n169 = t([[12, 129], [13, 22], [14, 128], [15, 126], [16, 130], [17, 131], [18, 121], [19, 122], [20, 121], [21, 122], [22, 122], [23, 126], [24, 125], [25, 128], [26, 126], [27, 126]]);
var n170 = t([[12, 131], [13, 130], [14, 129], [15, 22], [16, 0], [17, 232], [18, 121], [19, 122], [20, 121], [21, 122], [22, 231], [23, 22], [24, 128], [25, 129], [26, 22], [27, 124]]);
var n171 = t([[12, 177], [13, 178], [14, 179], [15, 180], [16, 176], [17, 233], [18, 0], [19, 186], [20, 0], [21, 186], [22, 234], [23, 180], [24, 181], [25, 179], [26, 180], [27, 184]]);
var n172 = t([[12, 178], [13, 179], [14, 180], [15, 181], [16, 177], [17, 176], [18, 0], [19, 186], [20, 0], [21, 186], [22, 0], [23, 181], [24, 183], [25, 180], [26, 181], [27, 80]]);
var n173 = t([[12, 179], [13, 180], [14, 181], [15, 183], [16, 178], [17, 177], [18, 0], [19, 186], [20, 0], [21, 186], [22, 186], [23, 241], [24, 241], [25, 181], [26, 183], [27, 183]]);
var n174 = t([[12, 177], [13, 178], [14, 179], [15, 180], [16, 176], [17, 233], [18, 0], [19, 186], [20, 0], [21, 186], [22, 234], [23, 183], [24, 80], [25, 181], [26, 183], [27, 184]]);
var n175 = t([[12, 179], [13, 180], [14, 181], [15, 183], [16, 178], [17, 177], [18, 0], [19, 186], [20, 0], [21, 186], [22, 186], [23, 183], [24, 80], [25, 181], [26, 183], [27, 183]]);
var n176 = t([[12, 0], [13, 0], [14, 186], [15, 185], [16, 0], [17, 0], [18, 176], [19, 177], [20, 176], [21, 177], [22, 176], [23, 185], [24, 184], [25, 186], [26, 185], [27, 177]]);
var n177 = t([[12, 184], [13, 80], [14, 183], [15, 181], [16, 185], [17, 186], [18, 176], [19, 177], [20, 176], [21, 177], [22, 177], [23, 181], [24, 180], [25, 183], [26, 181], [27, 181]]);
var n178 = t([[12, 186], [13, 185], [14, 184], [15, 80], [16, 0], [17, 234], [18, 176], [19, 177], [20, 176], [21, 177], [22, 233], [23, 80], [24, 183], [25, 184], [26, 80], [27, 179]]);
var n179 = t([[12, 166], [13, 167], [14, 168], [15, 169], [16, 165], [17, 235], [18, 0], [19, 175], [20, 0], [21, 175], [22, 236], [23, 169], [24, 170], [25, 168], [26, 169], [27, 173]]);
var n180 = t([[12, 167], [13, 168], [14, 169], [15, 170], [16, 166], [17, 165], [18, 0], [19, 175], [20, 0], [21, 175], [22, 0], [23, 170], [24, 172], [25, 169], [26, 170], [27, 68]]);
var n181 = t([[12, 168], [13, 169], [14, 170], [15, 172], [16, 167], [17, 166], [18, 0], [19, 175], [20, 0], [21, 175], [22, 175], [23, 241], [24, 241], [25, 170], [26, 172], [27, 172]]);
var n182 = t([[12, 166], [13, 167], [14, 168], [15, 169], [16, 165], [17, 235], [18, 0], [19, 175], [20, 0], [21, 175], [22, 236], [23, 172], [24, 68], [25, 170], [26, 172], [27, 173]]);
var n183 = t([[12, 168], [13, 169], [14, 170], [15, 172], [16, 167], [17, 166], [18, 0], [19, 175], [20, 0], [21, 175], [22, 175], [23, 172], [24, 68], [25, 170], [26, 172], [27, 172]]);
var n184 = t([[12, 0], [13, 0], [14, 175], [15, 174], [16, 0], [17, 0], [18, 165], [19, 166], [20, 165], [21, 166], [22, 165], [23, 174], [24, 173], [25, 175], [26, 174], [27, 166]]);
var n185 = t([[12, 173], [13, 68], [14, 172], [15, 170], [16, 174], [17, 175], [18, 165], [19, 166], [20, 165], [21, 166], [22, 166], [23, 170], [24, 169], [25, 172], [26, 170], [27, 170]]);
var n186 = t([[12, 175], [13, 174], [14, 173], [15, 68], [16, 0], [17, 236], [18, 165], [19, 166], [20, 165], [21, 166], [22, 235], [23, 68], [24, 172], [25, 173], [26, 68], [27, 168]]);
var n187 = t([[12, 188], [13, 189], [14, 190], [15, 191], [16, 187], [17, 237], [18, 0], [19, 197], [20, 0], [21, 197], [22, 238], [23, 191], [24, 192], [25, 190], [26, 191], [27, 195]]);
var n188 = t([[12, 189], [13, 190], [14, 191], [15, 192], [16, 188], [17, 187], [18, 0], [19, 197], [20, 0], [21, 197], [22, 0], [23, 192], [24, 194], [25, 191], [26, 192], [27, 92]]);
var n189 = t([[12, 190], [13, 191], [14, 192], [15, 194], [16, 189], [17, 188], [18, 0], [19, 197], [20, 0], [21, 197], [22, 197], [23, 241], [24, 241], [25, 192], [26, 194], [27, 194]]);
var n190 = t([[12, 188], [13, 189], [14, 190], [15, 191], [16, 187], [17, 237], [18, 0], [19, 197], [20, 0], [21, 197], [22, 238], [23, 194], [24, 92], [25, 192], [26, 194], [27, 195]]);
var n191 = t([[12, 190], [13, 191], [14, 192], [15, 194], [16, 189], [17, 188], [18, 0], [19, 197], [20, 0], [21, 197], [22, 197], [23, 194], [24, 92], [25, 192], [26, 194], [27, 194]]);
var n192 = t([[12, 0], [13, 0], [14, 197], [15, 196], [16, 0], [17, 0], [18, 187], [19, 188], [20, 187], [21, 188], [22, 187], [23, 196], [24, 195], [25, 197], [26, 196], [27, 188]]);
var n193 = t([[12, 195], [13, 92], [14, 194], [15, 192], [16, 196], [17, 197], [18, 187], [19, 188], [20, 187], [21, 188], [22, 188], [23, 192], [24, 191], [25, 194], [26, 192], [27, 192]]);
var n194 = t([[12, 197], [13, 196], [14, 195], [15, 92], [16, 0], [17, 238], [18, 187], [19, 188], [20, 187], [21, 188], [22, 237], [23, 92], [24, 194], [25, 195], [26, 92], [27, 190]]);
var n195 = t([[12, 1], [13, 2], [14, 3], [15, 4], [16, 0], [17, 0], [18, 10], [19, 9], [20, 10], [21, 9], [22, 11], [23, 4], [24, 5], [25, 3], [26, 4], [27, 8]]);
var n196 = t([[12, 3], [13, 4], [14, 5], [15, 6], [16, 2], [17, 1], [18, 10], [19, 9], [20, 10], [21, 9], [22, 10], [23, 6], [24, 7], [25, 5], [26, 6], [27, 6]]);
var n197 = t([[12, 4], [13, 5], [14, 6], [15, 7], [16, 3], [17, 2], [18, 10], [19, 9], [20, 10], [21, 9], [22, 9], [23, 241], [24, 241], [25, 6], [26, 7], [27, 5]]);
var n198 = t([[12, 2], [13, 3], [14, 4], [15, 5], [16, 1], [17, 0], [18, 10], [19, 9], [20, 10], [21, 9], [22, 11], [23, 7], [24, 8], [25, 6], [26, 7], [27, 7]]);
var n199 = t([[12, 4], [13, 5], [14, 6], [15, 7], [16, 3], [17, 2], [18, 10], [19, 9], [20, 10], [21, 9], [22, 9], [23, 7], [24, 8], [25, 6], [26, 7], [27, 5]]);
var n200 = t([[12, 11], [13, 10], [14, 9], [15, 8], [16, 11], [17, 11], [18, 1], [19, 2], [20, 1], [21, 2], [22, 0], [23, 8], [24, 7], [25, 9], [26, 8], [27, 2]]);
var n201 = t([[12, 7], [13, 6], [14, 5], [15, 4], [16, 8], [17, 9], [18, 1], [19, 2], [20, 1], [21, 2], [22, 2], [23, 4], [24, 3], [25, 5], [26, 4], [27, 6]]);
var n202 = t([[12, 9], [13, 8], [14, 7], [15, 6], [16, 10], [17, 11], [18, 1], [19, 2], [20, 1], [21, 2], [22, 0], [23, 6], [24, 5], [25, 7], [26, 6], [27, 4]]);
var n203 = t([[12, 2], [13, 3], [14, 4], [15, 5], [16, 1], [17, 0], [18, 9], [19, 8], [20, 9], [21, 8], [22, 11], [23, 5], [24, 6], [25, 4], [26, 5], [27, 7]]);
var n204 = t([[12, 4], [13, 5], [14, 6], [15, 7], [16, 3], [17, 2], [18, 9], [19, 8], [20, 9], [21, 8], [22, 9], [23, 7], [24, 8], [25, 6], [26, 7], [27, 5]]);
var n205 = t([[12, 5], [13, 6], [14, 7], [15, 8], [16, 4], [17, 3], [18, 9], [19, 8], [20, 9], [21, 8], [22, 8], [23, 241], [24, 241], [25, 7], [26, 8], [27, 4]]);
var n206 = t([[12, 3], [13, 4], [14, 5], [15, 6], [16, 2], [17, 1], [18, 9], [19, 8], [20, 9], [21, 8], [22, 10], [23, 8], [24, 9], [25, 7], [26, 8], [27, 6]]);
var n207 = t([[12, 5], [13, 6], [14, 7], [15, 8], [16, 4], [17, 3], [18, 9], [19, 8], [20, 9], [21, 8], [22, 8], [23, 8], [24, 9], [25, 7], [26, 8], [27, 4]]);
var n208 = t([[12, 10], [13, 9], [14, 8], [15, 7], [16, 11], [17, 11], [18, 2], [19, 3], [20, 2], [21, 3], [22, 0], [23, 7], [24, 6], [25, 8], [26, 7], [27, 3]]);
var n209 = t([[12, 6], [13, 5], [14, 4], [15, 3], [16, 7], [17, 8], [18, 2], [19, 3], [20, 2], [21, 3], [22, 3], [23, 3], [24, 2], [25, 4], [26, 3], [27, 7]]);
var n210 = t([[12, 8], [13, 7], [14, 6], [15, 5], [16, 9], [17, 10], [18, 2], [19, 3], [20, 2], [21, 3], [22, 1], [23, 5], [24, 4], [25, 6], [26, 5], [27, 5]]);
var n211 = t([[12, 3], [13, 4], [14, 5], [15, 6], [16, 2], [17, 1], [19, 7], [20, 8], [21, 7], [22, 10], [23, 6], [24, 7], [25, 5], [26, 6], [27, 6]]);
var n212 = t([[12, 5], [13, 6], [14, 7], [15, 8], [16, 4], [17, 3], [19, 7], [20, 8], [21, 7], [22, 8], [23, 8], [24, 9], [25, 7], [26, 8], [27, 4]]);
var n213 = t([[12, 6], [13, 7], [14, 8], [15, 9], [16, 5], [17, 4], [19, 7], [20, 8], [21, 7], [22, 7], [23, 241], [24, 241], [25, 8], [26, 9], [27, 3]]);
var n214 = t([[12, 4], [13, 5], [14, 6], [15, 7], [16, 3], [17, 2], [19, 7], [20, 8], [21, 7], [22, 9], [23, 9], [24, 10], [25, 8], [26, 9], [27, 5]]);
var n215 = t([[12, 6], [13, 7], [14, 8], [15, 9], [16, 5], [17, 4], [19, 7], [20, 8], [21, 7], [22, 7], [23, 9], [24, 10], [25, 8], [26, 9], [27, 3]]);
var n216 = t([[12, 9], [13, 8], [14, 7], [15, 6], [16, 10], [17, 11], [19, 4], [20, 3], [21, 4], [22, 0], [23, 6], [24, 5], [25, 7], [26, 6], [27, 4]]);
var n217 = t([[12, 5], [13, 4], [14, 3], [15, 2], [16, 6], [17, 7], [19, 4], [20, 3], [21, 4], [22, 4], [23, 2], [24, 1], [25, 3], [26, 2], [27, 8]]);
var n218 = t([[12, 7], [13, 6], [14, 5], [15, 4], [16, 8], [17, 9], [19, 4], [20, 3], [21, 4], [22, 2], [23, 4], [24, 3], [25, 5], [26, 4], [27, 6]]);
var n219 = t([[12, 112], [13, 113], [14, 114], [15, 115], [16, 111], [17, 110], [18, 120], [19, 119], [20, 120], [21, 119], [22, 0], [23, 115], [24, 116], [25, 114], [26, 115], [27, 117]]);
var n220 = t([[12, 113], [13, 114], [14, 115], [15, 116], [16, 112], [17, 111], [18, 120], [19, 119], [20, 120], [21, 119], [22, 120], [23, 116], [24, 117], [25, 115], [26, 116], [27, 116]]);
var n221 = t([[12, 114], [13, 115], [14, 116], [15, 117], [16, 113], [17, 112], [18, 120], [19, 119], [20, 120], [21, 119], [22, 119], [23, 241], [24, 241], [25, 116], [26, 117], [27, 115]]);
var n222 = t([[12, 112], [13, 113], [14, 114], [15, 115], [16, 111], [17, 110], [18, 120], [19, 119], [20, 120], [21, 119], [22, 0], [23, 117], [24, 118], [25, 116], [26, 117], [27, 117]]);
var n223 = t([[12, 114], [13, 115], [14, 116], [15, 117], [16, 113], [17, 112], [18, 120], [19, 119], [20, 120], [21, 119], [22, 119], [23, 117], [24, 118], [25, 116], [26, 117], [27, 115]]);
var n224 = t([[12, 0], [13, 120], [14, 119], [15, 118], [16, 0], [17, 0], [18, 111], [19, 112], [20, 111], [21, 112], [22, 110], [23, 118], [24, 117], [25, 119], [26, 118], [27, 112]]);
var n225 = t([[12, 117], [13, 116], [14, 115], [15, 114], [16, 118], [17, 119], [18, 111], [19, 112], [20, 111], [21, 112], [22, 112], [23, 114], [24, 113], [25, 115], [26, 114], [27, 116]]);
var n226 = t([[12, 119], [13, 118], [14, 117], [15, 116], [16, 120], [17, 0], [18, 111], [19, 112], [20, 111], [21, 112], [22, 110], [23, 116], [24, 115], [25, 117], [26, 116], [27, 114]]);
var n227 = t([[12, 113], [13, 114], [14, 115], [15, 116], [16, 112], [17, 111], [18, 119], [19, 118], [20, 119], [21, 118], [22, 120], [23, 116], [24, 117], [25, 115], [26, 116], [27, 116]]);
var n228 = t([[12, 114], [13, 115], [14, 116], [15, 117], [16, 113], [17, 112], [18, 119], [19, 118], [20, 119], [21, 118], [22, 119], [23, 117], [24, 118], [25, 116], [26, 117], [27, 115]]);
var n229 = t([[12, 115], [13, 116], [14, 117], [15, 118], [16, 114], [17, 113], [18, 119], [19, 118], [20, 119], [21, 118], [22, 118], [23, 241], [24, 241], [25, 117], [26, 118], [27, 114]]);
var n230 = t([[12, 113], [13, 114], [14, 115], [15, 116], [16, 112], [17, 111], [18, 119], [19, 118], [20, 119], [21, 118], [22, 120], [23, 118], [24, 119], [25, 117], [26, 118], [27, 116]]);
var n231 = t([[12, 115], [13, 116], [14, 117], [15, 118], [16, 114], [17, 113], [18, 119], [19, 118], [20, 119], [21, 118], [22, 118], [23, 118], [24, 119], [25, 117], [26, 118], [27, 114]]);
var n232 = t([[12, 120], [13, 119], [14, 118], [15, 117], [16, 0], [17, 0], [18, 112], [19, 113], [20, 112], [21, 113], [22, 110], [23, 117], [24, 116], [25, 118], [26, 117], [27, 113]]);
var n233 = t([[12, 116], [13, 115], [14, 114], [15, 113], [16, 117], [17, 118], [18, 112], [19, 113], [20, 112], [21, 113], [22, 113], [23, 113], [24, 112], [25, 114], [26, 113], [27, 117]]);
var n234 = t([[12, 118], [13, 117], [14, 116], [15, 115], [16, 119], [17, 120], [18, 112], [19, 113], [20, 112], [21, 113], [22, 111], [23, 115], [24, 114], [25, 116], [26, 115], [27, 115]]);
var n235 = t([[12, 114], [13, 115], [14, 116], [15, 117], [16, 113], [17, 112], [19, 117], [20, 118], [21, 117], [22, 119], [23, 117], [24, 118], [25, 116], [26, 117], [27, 115]]);
var n236 = t([[12, 115], [13, 116], [14, 117], [15, 118], [16, 114], [17, 113], [19, 117], [20, 118], [21, 117], [22, 118], [23, 118], [24, 119], [25, 117], [26, 118], [27, 114]]);
var n237 = t([[12, 116], [13, 117], [14, 118], [15, 119], [16, 115], [17, 114], [19, 117], [20, 118], [21, 117], [22, 117], [23, 241], [24, 241], [25, 118], [26, 119], [27, 113]]);
var n238 = t([[12, 114], [13, 115], [14, 116], [15, 117], [16, 113], [17, 112], [19, 117], [20, 118], [21, 117], [22, 119], [23, 119], [24, 120], [25, 118], [26, 119], [27, 115]]);
var n239 = t([[12, 116], [13, 117], [14, 118], [15, 119], [16, 115], [17, 114], [19, 117], [20, 118], [21, 117], [22, 117], [23, 119], [24, 120], [25, 118], [26, 119], [27, 113]]);
var n240 = t([[12, 119], [13, 118], [14, 117], [15, 116], [16, 120], [17, 0], [19, 114], [20, 113], [21, 114], [22, 110], [23, 116], [24, 115], [25, 117], [26, 116], [27, 114]]);
var n241 = t([[12, 115], [13, 114], [14, 113], [15, 112], [16, 116], [17, 117], [19, 114], [20, 113], [21, 114], [22, 114], [23, 112], [24, 111], [25, 113], [26, 112], [27, 118]]);
var n242 = t([[12, 117], [13, 116], [14, 115], [15, 114], [16, 118], [17, 119], [19, 114], [20, 113], [21, 114], [22, 112], [23, 114], [24, 113], [25, 115], [26, 114], [27, 116]]);
var n243 = t([[12, 49], [13, 50], [14, 51], [15, 52], [16, 48], [17, 48], [18, 59], [19, 58], [20, 59], [21, 58], [22, 11], [23, 51], [24, 52], [25, 51], [26, 51], [27, 57]]);
var n244 = t([[12, 51], [13, 52], [14, 53], [15, 55], [16, 50], [17, 49], [18, 59], [19, 58], [20, 59], [21, 58], [22, 59], [23, 53], [24, 55], [25, 53], [26, 53], [27, 55]]);
var n245 = t([[12, 52], [13, 53], [14, 55], [15, 56], [16, 51], [17, 50], [18, 59], [19, 58], [20, 59], [21, 58], [22, 58], [23, 241], [24, 241], [25, 55], [26, 55], [27, 53]]);
var n246 = t([[12, 50], [13, 51], [14, 52], [15, 53], [16, 49], [17, 48], [18, 59], [19, 58], [20, 59], [21, 58], [22, 11], [23, 55], [24, 56], [25, 55], [26, 55], [27, 56]]);
var n247 = t([[12, 52], [13, 53], [14, 55], [15, 56], [16, 51], [17, 50], [18, 59], [19, 58], [20, 59], [21, 58], [22, 58], [23, 55], [24, 56], [25, 55], [26, 55], [27, 53]]);
var n248 = t([[12, 11], [13, 59], [14, 58], [15, 57], [16, 11], [17, 11], [18, 49], [19, 50], [20, 49], [21, 50], [22, 48], [23, 58], [24, 57], [25, 58], [26, 58], [27, 50]]);
var n249 = t([[12, 56], [13, 55], [14, 53], [15, 52], [16, 57], [17, 58], [18, 49], [19, 50], [20, 49], [21, 50], [22, 50], [23, 53], [24, 52], [25, 53], [26, 53], [27, 55]]);
var n250 = t([[12, 58], [13, 57], [14, 56], [15, 55], [16, 59], [17, 11], [18, 49], [19, 50], [20, 49], [21, 50], [22, 48], [23, 56], [24, 55], [25, 56], [26, 56], [27, 52]]);
var n251 = t([[12, 50], [13, 51], [14, 52], [15, 53], [16, 49], [17, 48], [18, 58], [19, 57], [20, 58], [21, 57], [22, 11], [23, 52], [24, 53], [25, 52], [26, 52], [27, 56]]);
var n252 = t([[12, 52], [13, 53], [14, 55], [15, 56], [16, 51], [17, 50], [18, 58], [19, 57], [20, 58], [21, 57], [22, 58], [23, 55], [24, 56], [25, 55], [26, 55], [27, 53]]);
var n253 = t([[12, 53], [13, 55], [14, 56], [15, 57], [16, 52], [17, 51], [18, 58], [19, 57], [20, 58], [21, 57], [22, 57], [23, 241], [24, 241], [25, 56], [26, 56], [27, 52]]);
var n254 = t([[12, 51], [13, 52], [14, 53], [15, 55], [16, 50], [17, 49], [18, 58], [19, 57], [20, 58], [21, 57], [22, 59], [23, 56], [24, 57], [25, 56], [26, 56], [27, 55]]);
var n255 = t([[12, 53], [13, 55], [14, 56], [15, 57], [16, 52], [17, 51], [18, 58], [19, 57], [20, 58], [21, 57], [22, 57], [23, 56], [24, 57], [25, 56], [26, 56], [27, 52]]);
var n256 = t([[12, 59], [13, 58], [14, 57], [15, 56], [16, 11], [17, 11], [18, 50], [19, 51], [20, 50], [21, 51], [22, 48], [23, 57], [24, 56], [25, 57], [26, 57], [27, 51]]);
var n257 = t([[12, 55], [13, 53], [14, 52], [15, 51], [16, 56], [17, 57], [18, 50], [19, 51], [20, 50], [21, 51], [22, 51], [23, 52], [24, 51], [25, 52], [26, 52], [27, 56]]);
var n258 = t([[12, 57], [13, 56], [14, 55], [15, 53], [16, 58], [17, 59], [18, 50], [19, 51], [20, 50], [21, 51], [22, 49], [23, 55], [24, 53], [25, 55], [26, 55], [27, 53]]);
var n259 = t([[12, 51], [13, 52], [14, 53], [15, 55], [16, 50], [17, 49], [19, 56], [20, 57], [21, 56], [22, 59], [23, 53], [24, 55], [25, 53], [26, 53], [27, 55]]);
var n260 = t([[12, 53], [13, 55], [14, 56], [15, 57], [16, 52], [17, 51], [19, 56], [20, 57], [21, 56], [22, 57], [23, 56], [24, 57], [25, 56], [26, 56], [27, 52]]);
var n261 = t([[12, 55], [13, 56], [14, 57], [15, 58], [16, 53], [17, 52], [19, 56], [20, 57], [21, 56], [22, 56], [23, 241], [24, 241], [25, 57], [26, 57], [27, 51]]);
var n262 = t([[12, 52], [13, 53], [14, 55], [15, 56], [16, 51], [17, 50], [19, 56], [20, 57], [21, 56], [22, 58], [23, 57], [24, 58], [25, 57], [26, 57], [27, 53]]);
var n263 = t([[12, 55], [13, 56], [14, 57], [15, 58], [16, 53], [17, 52], [19, 56], [20, 57], [21, 56], [22, 56], [23, 57], [24, 58], [25, 57], [26, 57], [27, 51]]);
var n264 = t([[12, 58], [13, 57], [14, 56], [15, 55], [16, 59], [17, 11], [19, 52], [20, 51], [21, 52], [22, 48], [23, 56], [24, 55], [25, 56], [26, 56], [27, 52]]);
var n265 = t([[12, 53], [13, 52], [14, 51], [15, 50], [16, 55], [17, 56], [19, 52], [20, 51], [21, 52], [22, 52], [23, 51], [24, 50], [25, 51], [26, 51], [27, 57]]);
var n266 = t([[12, 56], [13, 55], [14, 53], [15, 52], [16, 57], [17, 58], [19, 52], [20, 51], [21, 52], [22, 50], [23, 53], [24, 52], [25, 53], [26, 53], [27, 55]]);
var n267 = t([[12, 97], [13, 98], [14, 99], [15, 100], [16, 96], [17, 96], [18, 107], [19, 106], [20, 107], [21, 106], [22, 11], [23, 99], [24, 100], [25, 99], [26, 99], [27, 105]]);
var n268 = t([[12, 99], [13, 100], [14, 101], [15, 103], [16, 98], [17, 97], [18, 107], [19, 106], [20, 107], [21, 106], [22, 107], [23, 101], [24, 103], [25, 101], [26, 101], [27, 103]]);
var n269 = t([[12, 100], [13, 101], [14, 103], [15, 104], [16, 99], [17, 98], [18, 107], [19, 106], [20, 107], [21, 106], [22, 106], [23, 241], [24, 241], [25, 103], [26, 103], [27, 101]]);
var n270 = t([[12, 98], [13, 99], [14, 100], [15, 101], [16, 97], [17, 96], [18, 107], [19, 106], [20, 107], [21, 106], [22, 11], [23, 103], [24, 104], [25, 103], [26, 103], [27, 104]]);
var n271 = t([[12, 100], [13, 101], [14, 103], [15, 104], [16, 99], [17, 98], [18, 107], [19, 106], [20, 107], [21, 106], [22, 106], [23, 103], [24, 104], [25, 103], [26, 103], [27, 101]]);
var n272 = t([[12, 11], [13, 107], [14, 106], [15, 105], [16, 11], [17, 11], [18, 97], [19, 98], [20, 97], [21, 98], [22, 96], [23, 106], [24, 105], [25, 106], [26, 106], [27, 98]]);
var n273 = t([[12, 104], [13, 103], [14, 101], [15, 100], [16, 105], [17, 106], [18, 97], [19, 98], [20, 97], [21, 98], [22, 98], [23, 101], [24, 100], [25, 101], [26, 101], [27, 103]]);
var n274 = t([[12, 106], [13, 105], [14, 104], [15, 103], [16, 107], [17, 11], [18, 97], [19, 98], [20, 97], [21, 98], [22, 96], [23, 104], [24, 103], [25, 104], [26, 104], [27, 100]]);
var n275 = t([[12, 98], [13, 99], [14, 100], [15, 101], [16, 97], [17, 96], [18, 106], [19, 105], [20, 106], [21, 105], [22, 11], [23, 100], [24, 101], [25, 100], [26, 100], [27, 104]]);
var n276 = t([[12, 100], [13, 101], [14, 103], [15, 104], [16, 99], [17, 98], [18, 106], [19, 105], [20, 106], [21, 105], [22, 106], [23, 103], [24, 104], [25, 103], [26, 103], [27, 101]]);
var n277 = t([[12, 101], [13, 103], [14, 104], [15, 105], [16, 100], [17, 99], [18, 106], [19, 105], [20, 106], [21, 105], [22, 105], [23, 241], [24, 241], [25, 104], [26, 104], [27, 100]]);
var n278 = t([[12, 99], [13, 100], [14, 101], [15, 103], [16, 98], [17, 97], [18, 106], [19, 105], [20, 106], [21, 105], [22, 107], [23, 104], [24, 105], [25, 104], [26, 104], [27, 103]]);
var n279 = t([[12, 101], [13, 103], [14, 104], [15, 105], [16, 100], [17, 99], [18, 106], [19, 105], [20, 106], [21, 105], [22, 105], [23, 104], [24, 105], [25, 104], [26, 104], [27, 100]]);
var n280 = t([[12, 107], [13, 106], [14, 105], [15, 104], [16, 11], [17, 11], [18, 98], [19, 99], [20, 98], [21, 99], [22, 96], [23, 105], [24, 104], [25, 105], [26, 105], [27, 99]]);
var n281 = t([[12, 103], [13, 101], [14, 100], [15, 99], [16, 104], [17, 105], [18, 98], [19, 99], [20, 98], [21, 99], [22, 99], [23, 100], [24, 99], [25, 100], [26, 100], [27, 104]]);
var n282 = t([[12, 105], [13, 104], [14, 103], [15, 101], [16, 106], [17, 107], [18, 98], [19, 99], [20, 98], [21, 99], [22, 97], [23, 103], [24, 101], [25, 103], [26, 103], [27, 101]]);
var n283 = t([[12, 99], [13, 100], [14, 101], [15, 103], [16, 98], [17, 97], [19, 104], [20, 105], [21, 104], [22, 107], [23, 101], [24, 103], [25, 101], [26, 101], [27, 103]]);
var n284 = t([[12, 101], [13, 103], [14, 104], [15, 105], [16, 100], [17, 99], [19, 104], [20, 105], [21, 104], [22, 105], [23, 104], [24, 105], [25, 104], [26, 104], [27, 100]]);
var n285 = t([[12, 103], [13, 104], [14, 105], [15, 106], [16, 101], [17, 100], [19, 104], [20, 105], [21, 104], [22, 104], [23, 241], [24, 241], [25, 105], [26, 105], [27, 99]]);
var n286 = t([[12, 100], [13, 101], [14, 103], [15, 104], [16, 99], [17, 98], [19, 104], [20, 105], [21, 104], [22, 106], [23, 105], [24, 106], [25, 105], [26, 105], [27, 101]]);
var n287 = t([[12, 103], [13, 104], [14, 105], [15, 106], [16, 101], [17, 100], [19, 104], [20, 105], [21, 104], [22, 104], [23, 105], [24, 106], [25, 105], [26, 105], [27, 99]]);
var n288 = t([[12, 106], [13, 105], [14, 104], [15, 103], [16, 107], [17, 11], [19, 100], [20, 99], [21, 100], [22, 96], [23, 104], [24, 103], [25, 104], [26, 104], [27, 100]]);
var n289 = t([[12, 101], [13, 100], [14, 99], [15, 98], [16, 103], [17, 104], [19, 100], [20, 99], [21, 100], [22, 100], [23, 99], [24, 98], [25, 99], [26, 99], [27, 105]]);
var n290 = t([[12, 104], [13, 103], [14, 101], [15, 100], [16, 105], [17, 106], [19, 100], [20, 99], [21, 100], [22, 98], [23, 101], [24, 100], [25, 101], [26, 101], [27, 103]]);
var n291 = t([[12, 37], [13, 38], [14, 39], [15, 40], [16, 36], [17, 36], [18, 47], [19, 46], [20, 47], [21, 46], [22, 11], [23, 39], [24, 40], [25, 39], [26, 39], [27, 45]]);
var n292 = t([[12, 39], [13, 40], [14, 41], [15, 43], [16, 38], [17, 37], [18, 47], [19, 46], [20, 47], [21, 46], [22, 47], [23, 41], [24, 43], [25, 41], [26, 41], [27, 43]]);
var n293 = t([[12, 40], [13, 41], [14, 43], [15, 44], [16, 39], [17, 38], [18, 47], [19, 46], [20, 47], [21, 46], [22, 46], [23, 241], [24, 241], [25, 43], [26, 43], [27, 41]]);
var n294 = t([[12, 38], [13, 39], [14, 40], [15, 41], [16, 37], [17, 36], [18, 47], [19, 46], [20, 47], [21, 46], [22, 11], [23, 43], [24, 44], [25, 43], [26, 43], [27, 44]]);
var n295 = t([[12, 40], [13, 41], [14, 43], [15, 44], [16, 39], [17, 38], [18, 47], [19, 46], [20, 47], [21, 46], [22, 46], [23, 43], [24, 44], [25, 43], [26, 43], [27, 41]]);
var n296 = t([[12, 11], [13, 47], [14, 46], [15, 45], [16, 11], [17, 11], [18, 37], [19, 38], [20, 37], [21, 38], [22, 36], [23, 46], [24, 45], [25, 46], [26, 46], [27, 38]]);
var n297 = t([[12, 44], [13, 43], [14, 41], [15, 40], [16, 45], [17, 46], [18, 37], [19, 38], [20, 37], [21, 38], [22, 38], [23, 41], [24, 40], [25, 41], [26, 41], [27, 43]]);
var n298 = t([[12, 46], [13, 45], [14, 44], [15, 43], [16, 47], [17, 11], [18, 37], [19, 38], [20, 37], [21, 38], [22, 36], [23, 44], [24, 43], [25, 44], [26, 44], [27, 40]]);
var n299 = t([[12, 38], [13, 39], [14, 40], [15, 41], [16, 37], [17, 36], [18, 46], [19, 45], [20, 46], [21, 45], [22, 11], [23, 40], [24, 41], [25, 40], [26, 40], [27, 44]]);
var n300 = t([[12, 40], [13, 41], [14, 43], [15, 44], [16, 39], [17, 38], [18, 46], [19, 45], [20, 46], [21, 45], [22, 46], [23, 43], [24, 44], [25, 43], [26, 43], [27, 41]]);
var n301 = t([[12, 41], [13, 43], [14, 44], [15, 45], [16, 40], [17, 39], [18, 46], [19, 45], [20, 46], [21, 45], [22, 45], [23, 241], [24, 241], [25, 44], [26, 44], [27, 40]]);
var n302 = t([[12, 39], [13, 40], [14, 41], [15, 43], [16, 38], [17, 37], [18, 46], [19, 45], [20, 46], [21, 45], [22, 47], [23, 44], [24, 45], [25, 44], [26, 44], [27, 43]]);
var n303 = t([[12, 41], [13, 43], [14, 44], [15, 45], [16, 40], [17, 39], [18, 46], [19, 45], [20, 46], [21, 45], [22, 45], [23, 44], [24, 45], [25, 44], [26, 44], [27, 40]]);
var n304 = t([[12, 47], [13, 46], [14, 45], [15, 44], [16, 11], [17, 11], [18, 38], [19, 39], [20, 38], [21, 39], [22, 36], [23, 45], [24, 44], [25, 45], [26, 45], [27, 39]]);
var n305 = t([[12, 43], [13, 41], [14, 40], [15, 39], [16, 44], [17, 45], [18, 38], [19, 39], [20, 38], [21, 39], [22, 39], [23, 40], [24, 39], [25, 40], [26, 40], [27, 44]]);
var n306 = t([[12, 45], [13, 44], [14, 43], [15, 41], [16, 46], [17, 47], [18, 38], [19, 39], [20, 38], [21, 39], [22, 37], [23, 43], [24, 41], [25, 43], [26, 43], [27, 41]]);
var n307 = t([[12, 39], [13, 40], [14, 41], [15, 43], [16, 38], [17, 37], [19, 44], [20, 45], [21, 44], [22, 47], [23, 41], [24, 43], [25, 41], [26, 41], [27, 43]]);
var n308 = t([[12, 41], [13, 43], [14, 44], [15, 45], [16, 40], [17, 39], [19, 44], [20, 45], [21, 44], [22, 45], [23, 44], [24, 45], [25, 44], [26, 44], [27, 40]]);
var n309 = t([[12, 43], [13, 44], [14, 45], [15, 46], [16, 41], [17, 40], [19, 44], [20, 45], [21, 44], [22, 44], [23, 241], [24, 241], [25, 45], [26, 45], [27, 39]]);
var n310 = t([[12, 40], [13, 41], [14, 43], [15, 44], [16, 39], [17, 38], [19, 44], [20, 45], [21, 44], [22, 46], [23, 45], [24, 46], [25, 45], [26, 45], [27, 41]]);
var n311 = t([[12, 43], [13, 44], [14, 45], [15, 46], [16, 41], [17, 40], [19, 44], [20, 45], [21, 44], [22, 44], [23, 45], [24, 46], [25, 45], [26, 45], [27, 39]]);
var n312 = t([[12, 46], [13, 45], [14, 44], [15, 43], [16, 47], [17, 11], [19, 40], [20, 39], [21, 40], [22, 36], [23, 44], [24, 43], [25, 44], [26, 44], [27, 40]]);
var n313 = t([[12, 41], [13, 40], [14, 39], [15, 38], [16, 43], [17, 44], [19, 40], [20, 39], [21, 40], [22, 40], [23, 39], [24, 38], [25, 39], [26, 39], [27, 45]]);
var n314 = t([[12, 44], [13, 43], [14, 41], [15, 40], [16, 45], [17, 46], [19, 40], [20, 39], [21, 40], [22, 38], [23, 41], [24, 40], [25, 41], [26, 41], [27, 43]]);
var n315 = t([[12, 15], [13, 16], [14, 17], [15, 18], [16, 14], [17, 14], [18, 25], [19, 24], [20, 25], [21, 24], [22, 11], [23, 17], [24, 18], [25, 17], [26, 17], [27, 23]]);
var n316 = t([[12, 17], [13, 18], [14, 19], [15, 21], [16, 16], [17, 15], [18, 25], [19, 24], [20, 25], [21, 24], [22, 25], [23, 19], [24, 21], [25, 19], [26, 19], [27, 21]]);
var n317 = t([[12, 18], [13, 19], [14, 21], [15, 22], [16, 17], [17, 16], [18, 25], [19, 24], [20, 25], [21, 24], [22, 24], [23, 241], [24, 241], [25, 21], [26, 21], [27, 19]]);
var n318 = t([[12, 16], [13, 17], [14, 18], [15, 19], [16, 15], [17, 14], [18, 25], [19, 24], [20, 25], [21, 24], [22, 11], [23, 21], [24, 22], [25, 21], [26, 21], [27, 22]]);
var n319 = t([[12, 18], [13, 19], [14, 21], [15, 22], [16, 17], [17, 16], [18, 25], [19, 24], [20, 25], [21, 24], [22, 24], [23, 21], [24, 22], [25, 21], [26, 21], [27, 19]]);
var n320 = t([[12, 11], [13, 25], [14, 24], [15, 23], [16, 11], [17, 11], [18, 15], [19, 16], [20, 15], [21, 16], [22, 14], [23, 24], [24, 23], [25, 24], [26, 24], [27, 16]]);
var n321 = t([[12, 22], [13, 21], [14, 19], [15, 18], [16, 23], [17, 24], [18, 15], [19, 16], [20, 15], [21, 16], [22, 16], [23, 19], [24, 18], [25, 19], [26, 19], [27, 21]]);
var n322 = t([[12, 24], [13, 23], [14, 22], [15, 21], [16, 25], [17, 11], [18, 15], [19, 16], [20, 15], [21, 16], [22, 14], [23, 22], [24, 21], [25, 22], [26, 22], [27, 18]]);
var n323 = t([[12, 16], [13, 17], [14, 18], [15, 19], [16, 15], [17, 14], [18, 24], [19, 23], [20, 24], [21, 23], [22, 11], [23, 18], [24, 19], [25, 18], [26, 18], [27, 22]]);
var n324 = t([[12, 18], [13, 19], [14, 21], [15, 22], [16, 17], [17, 16], [18, 24], [19, 23], [20, 24], [21, 23], [22, 24], [23, 21], [24, 22], [25, 21], [26, 21], [27, 19]]);
var n325 = t([[12, 19], [13, 21], [14, 22], [15, 23], [16, 18], [17, 17], [18, 24], [19, 23], [20, 24], [21, 23], [22, 23], [23, 241], [24, 241], [25, 22], [26, 22], [27, 18]]);
var n326 = t([[12, 17], [13, 18], [14, 19], [15, 21], [16, 16], [17, 15], [18, 24], [19, 23], [20, 24], [21, 23], [22, 25], [23, 22], [24, 23], [25, 22], [26, 22], [27, 21]]);
var n327 = t([[12, 19], [13, 21], [14, 22], [15, 23], [16, 18], [17, 17], [18, 24], [19, 23], [20, 24], [21, 23], [22, 23], [23, 22], [24, 23], [25, 22], [26, 22], [27, 18]]);
var n328 = t([[12, 25], [13, 24], [14, 23], [15, 22], [16, 11], [17, 11], [18, 16], [19, 17], [20, 16], [21, 17], [22, 14], [23, 23], [24, 22], [25, 23], [26, 23], [27, 17]]);
var n329 = t([[12, 21], [13, 19], [14, 18], [15, 17], [16, 22], [17, 23], [18, 16], [19, 17], [20, 16], [21, 17], [22, 17], [23, 18], [24, 17], [25, 18], [26, 18], [27, 22]]);
var n330 = t([[12, 23], [13, 22], [14, 21], [15, 19], [16, 24], [17, 25], [18, 16], [19, 17], [20, 16], [21, 17], [22, 15], [23, 21], [24, 19], [25, 21], [26, 21], [27, 19]]);
var n331 = t([[12, 17], [13, 18], [14, 19], [15, 21], [16, 16], [17, 15], [19, 22], [20, 23], [21, 22], [22, 25], [23, 19], [24, 21], [25, 19], [26, 19], [27, 21]]);
var n332 = t([[12, 19], [13, 21], [14, 22], [15, 23], [16, 18], [17, 17], [19, 22], [20, 23], [21, 22], [22, 23], [23, 22], [24, 23], [25, 22], [26, 22], [27, 18]]);
var n333 = t([[12, 21], [13, 22], [14, 23], [15, 24], [16, 19], [17, 18], [19, 22], [20, 23], [21, 22], [22, 22], [23, 241], [24, 241], [25, 23], [26, 23], [27, 17]]);
var n334 = t([[12, 18], [13, 19], [14, 21], [15, 22], [16, 17], [17, 16], [19, 22], [20, 23], [21, 22], [22, 24], [23, 23], [24, 24], [25, 23], [26, 23], [27, 19]]);
var n335 = t([[12, 21], [13, 22], [14, 23], [15, 24], [16, 19], [17, 18], [19, 22], [20, 23], [21, 22], [22, 22], [23, 23], [24, 24], [25, 23], [26, 23], [27, 17]]);
var n336 = t([[12, 24], [13, 23], [14, 22], [15, 21], [16, 25], [17, 11], [19, 18], [20, 17], [21, 18], [22, 14], [23, 22], [24, 21], [25, 22], [26, 22], [27, 18]]);
var n337 = t([[12, 19], [13, 18], [14, 17], [15, 16], [16, 21], [17, 22], [19, 18], [20, 17], [21, 18], [22, 18], [23, 17], [24, 16], [25, 17], [26, 17], [27, 23]]);
var n338 = t([[12, 22], [13, 21], [14, 19], [15, 18], [16, 23], [17, 24], [19, 18], [20, 17], [21, 18], [22, 16], [23, 19], [24, 18], [25, 19], [26, 19], [27, 21]]);
var n339 = t([[12, 73], [13, 74], [14, 75], [15, 76], [16, 72], [17, 72], [18, 83], [19, 82], [20, 83], [21, 82], [22, 11], [23, 75], [24, 76], [25, 75], [26, 75], [27, 81]]);
var n340 = t([[12, 75], [13, 76], [14, 77], [15, 79], [16, 74], [17, 73], [18, 83], [19, 82], [20, 83], [21, 82], [22, 83], [23, 77], [24, 79], [25, 77], [26, 77], [27, 79]]);
var n341 = t([[12, 76], [13, 77], [14, 79], [15, 80], [16, 75], [17, 74], [18, 83], [19, 82], [20, 83], [21, 82], [22, 82], [23, 241], [24, 241], [25, 79], [26, 79], [27, 77]]);
var n342 = t([[12, 74], [13, 75], [14, 76], [15, 77], [16, 73], [17, 72], [18, 83], [19, 82], [20, 83], [21, 82], [22, 11], [23, 79], [24, 80], [25, 79], [26, 79], [27, 80]]);
var n343 = t([[12, 76], [13, 77], [14, 79], [15, 80], [16, 75], [17, 74], [18, 83], [19, 82], [20, 83], [21, 82], [22, 82], [23, 79], [24, 80], [25, 79], [26, 79], [27, 77]]);
var n344 = t([[12, 11], [13, 83], [14, 82], [15, 81], [16, 11], [17, 11], [18, 73], [19, 74], [20, 73], [21, 74], [22, 72], [23, 82], [24, 81], [25, 82], [26, 82], [27, 74]]);
var n345 = t([[12, 80], [13, 79], [14, 77], [15, 76], [16, 81], [17, 82], [18, 73], [19, 74], [20, 73], [21, 74], [22, 74], [23, 77], [24, 76], [25, 77], [26, 77], [27, 79]]);
var n346 = t([[12, 82], [13, 81], [14, 80], [15, 79], [16, 83], [17, 11], [18, 73], [19, 74], [20, 73], [21, 74], [22, 72], [23, 80], [24, 79], [25, 80], [26, 80], [27, 76]]);
var n347 = t([[12, 74], [13, 75], [14, 76], [15, 77], [16, 73], [17, 72], [18, 82], [19, 81], [20, 82], [21, 81], [22, 11], [23, 76], [24, 77], [25, 76], [26, 76], [27, 80]]);
var n348 = t([[12, 76], [13, 77], [14, 79], [15, 80], [16, 75], [17, 74], [18, 82], [19, 81], [20, 82], [21, 81], [22, 82], [23, 79], [24, 80], [25, 79], [26, 79], [27, 77]]);
var n349 = t([[12, 77], [13, 79], [14, 80], [15, 81], [16, 76], [17, 75], [18, 82], [19, 81], [20, 82], [21, 81], [22, 81], [23, 241], [24, 241], [25, 80], [26, 80], [27, 76]]);
var n350 = t([[12, 75], [13, 76], [14, 77], [15, 79], [16, 74], [17, 73], [18, 82], [19, 81], [20, 82], [21, 81], [22, 83], [23, 80], [24, 81], [25, 80], [26, 80], [27, 79]]);
var n351 = t([[12, 77], [13, 79], [14, 80], [15, 81], [16, 76], [17, 75], [18, 82], [19, 81], [20, 82], [21, 81], [22, 81], [23, 80], [24, 81], [25, 80], [26, 80], [27, 76]]);
var n352 = t([[12, 83], [13, 82], [14, 81], [15, 80], [16, 11], [17, 11], [18, 74], [19, 75], [20, 74], [21, 75], [22, 72], [23, 81], [24, 80], [25, 81], [26, 81], [27, 75]]);
var n353 = t([[12, 79], [13, 77], [14, 76], [15, 75], [16, 80], [17, 81], [18, 74], [19, 75], [20, 74], [21, 75], [22, 75], [23, 76], [24, 75], [25, 76], [26, 76], [27, 80]]);
var n354 = t([[12, 81], [13, 80], [14, 79], [15, 77], [16, 82], [17, 83], [18, 74], [19, 75], [20, 74], [21, 75], [22, 73], [23, 79], [24, 77], [25, 79], [26, 79], [27, 77]]);
var n355 = t([[12, 75], [13, 76], [14, 77], [15, 79], [16, 74], [17, 73], [19, 80], [20, 81], [21, 80], [22, 83], [23, 77], [24, 79], [25, 77], [26, 77], [27, 79]]);
var n356 = t([[12, 77], [13, 79], [14, 80], [15, 81], [16, 76], [17, 75], [19, 80], [20, 81], [21, 80], [22, 81], [23, 80], [24, 81], [25, 80], [26, 80], [27, 76]]);
var n357 = t([[12, 79], [13, 80], [14, 81], [15, 82], [16, 77], [17, 76], [19, 80], [20, 81], [21, 80], [22, 80], [23, 241], [24, 241], [25, 81], [26, 81], [27, 75]]);
var n358 = t([[12, 76], [13, 77], [14, 79], [15, 80], [16, 75], [17, 74], [19, 80], [20, 81], [21, 80], [22, 82], [23, 81], [24, 82], [25, 81], [26, 81], [27, 77]]);
var n359 = t([[12, 79], [13, 80], [14, 81], [15, 82], [16, 77], [17, 76], [19, 80], [20, 81], [21, 80], [22, 80], [23, 81], [24, 82], [25, 81], [26, 81], [27, 75]]);
var n360 = t([[12, 82], [13, 81], [14, 80], [15, 79], [16, 83], [17, 11], [19, 76], [20, 75], [21, 76], [22, 72], [23, 80], [24, 79], [25, 80], [26, 80], [27, 76]]);
var n361 = t([[12, 77], [13, 76], [14, 75], [15, 74], [16, 79], [17, 80], [19, 76], [20, 75], [21, 76], [22, 76], [23, 75], [24, 74], [25, 75], [26, 75], [27, 81]]);
var n362 = t([[12, 80], [13, 79], [14, 77], [15, 76], [16, 81], [17, 82], [19, 76], [20, 75], [21, 76], [22, 74], [23, 77], [24, 76], [25, 77], [26, 77], [27, 79]]);
var n363 = t([[12, 61], [13, 62], [14, 63], [15, 64], [16, 60], [17, 60], [18, 71], [19, 70], [20, 71], [21, 70], [22, 11], [23, 63], [24, 64], [25, 63], [26, 63], [27, 69]]);
var n364 = t([[12, 63], [13, 64], [14, 65], [15, 67], [16, 62], [17, 61], [18, 71], [19, 70], [20, 71], [21, 70], [22, 71], [23, 65], [24, 67], [25, 65], [26, 65], [27, 67]]);
var n365 = t([[12, 64], [13, 65], [14, 67], [15, 68], [16, 63], [17, 62], [18, 71], [19, 70], [20, 71], [21, 70], [22, 70], [23, 241], [24, 241], [25, 67], [26, 67], [27, 65]]);
var n366 = t([[12, 62], [13, 63], [14, 64], [15, 65], [16, 61], [17, 60], [18, 71], [19, 70], [20, 71], [21, 70], [22, 11], [23, 67], [24, 68], [25, 67], [26, 67], [27, 68]]);
var n367 = t([[12, 64], [13, 65], [14, 67], [15, 68], [16, 63], [17, 62], [18, 71], [19, 70], [20, 71], [21, 70], [22, 70], [23, 67], [24, 68], [25, 67], [26, 67], [27, 65]]);
var n368 = t([[12, 11], [13, 71], [14, 70], [15, 69], [16, 11], [17, 11], [18, 61], [19, 62], [20, 61], [21, 62], [22, 60], [23, 70], [24, 69], [25, 70], [26, 70], [27, 62]]);
var n369 = t([[12, 68], [13, 67], [14, 65], [15, 64], [16, 69], [17, 70], [18, 61], [19, 62], [20, 61], [21, 62], [22, 62], [23, 65], [24, 64], [25, 65], [26, 65], [27, 67]]);
var n370 = t([[12, 70], [13, 69], [14, 68], [15, 67], [16, 71], [17, 11], [18, 61], [19, 62], [20, 61], [21, 62], [22, 60], [23, 68], [24, 67], [25, 68], [26, 68], [27, 64]]);
var n371 = t([[12, 62], [13, 63], [14, 64], [15, 65], [16, 61], [17, 60], [18, 70], [19, 69], [20, 70], [21, 69], [22, 11], [23, 64], [24, 65], [25, 64], [26, 64], [27, 68]]);
var n372 = t([[12, 64], [13, 65], [14, 67], [15, 68], [16, 63], [17, 62], [18, 70], [19, 69], [20, 70], [21, 69], [22, 70], [23, 67], [24, 68], [25, 67], [26, 67], [27, 65]]);
var n373 = t([[12, 65], [13, 67], [14, 68], [15, 69], [16, 64], [17, 63], [18, 70], [19, 69], [20, 70], [21, 69], [22, 69], [23, 241], [24, 241], [25, 68], [26, 68], [27, 64]]);
var n374 = t([[12, 63], [13, 64], [14, 65], [15, 67], [16, 62], [17, 61], [18, 70], [19, 69], [20, 70], [21, 69], [22, 71], [23, 68], [24, 69], [25, 68], [26, 68], [27, 67]]);
var n375 = t([[12, 65], [13, 67], [14, 68], [15, 69], [16, 64], [17, 63], [18, 70], [19, 69], [20, 70], [21, 69], [22, 69], [23, 68], [24, 69], [25, 68], [26, 68], [27, 64]]);
var n376 = t([[12, 71], [13, 70], [14, 69], [15, 68], [16, 11], [17, 11], [18, 62], [19, 63], [20, 62], [21, 63], [22, 60], [23, 69], [24, 68], [25, 69], [26, 69], [27, 63]]);
var n377 = t([[12, 67], [13, 65], [14, 64], [15, 63], [16, 68], [17, 69], [18, 62], [19, 63], [20, 62], [21, 63], [22, 63], [23, 64], [24, 63], [25, 64], [26, 64], [27, 68]]);
var n378 = t([[12, 69], [13, 68], [14, 67], [15, 65], [16, 70], [17, 71], [18, 62], [19, 63], [20, 62], [21, 63], [22, 61], [23, 67], [24, 65], [25, 67], [26, 67], [27, 65]]);
var n379 = t([[12, 63], [13, 64], [14, 65], [15, 67], [16, 62], [17, 61], [19, 68], [20, 69], [21, 68], [22, 71], [23, 65], [24, 67], [25, 65], [26, 65], [27, 67]]);
var n380 = t([[12, 65], [13, 67], [14, 68], [15, 69], [16, 64], [17, 63], [19, 68], [20, 69], [21, 68], [22, 69], [23, 68], [24, 69], [25, 68], [26, 68], [27, 64]]);
var n381 = t([[12, 67], [13, 68], [14, 69], [15, 70], [16, 65], [17, 64], [19, 68], [20, 69], [21, 68], [22, 68], [23, 241], [24, 241], [25, 69], [26, 69], [27, 63]]);
var n382 = t([[12, 64], [13, 65], [14, 67], [15, 68], [16, 63], [17, 62], [19, 68], [20, 69], [21, 68], [22, 70], [23, 69], [24, 70], [25, 69], [26, 69], [27, 65]]);
var n383 = t([[12, 67], [13, 68], [14, 69], [15, 70], [16, 65], [17, 64], [19, 68], [20, 69], [21, 68], [22, 68], [23, 69], [24, 70], [25, 69], [26, 69], [27, 63]]);
var n384 = t([[12, 70], [13, 69], [14, 68], [15, 67], [16, 71], [17, 11], [19, 64], [20, 63], [21, 64], [22, 60], [23, 68], [24, 67], [25, 68], [26, 68], [27, 64]]);
var n385 = t([[12, 65], [13, 64], [14, 63], [15, 62], [16, 67], [17, 68], [19, 64], [20, 63], [21, 64], [22, 64], [23, 63], [24, 62], [25, 63], [26, 63], [27, 69]]);
var n386 = t([[12, 68], [13, 67], [14, 65], [15, 64], [16, 69], [17, 70], [19, 64], [20, 63], [21, 64], [22, 62], [23, 65], [24, 64], [25, 65], [26, 65], [27, 67]]);
var n387 = t([[12, 85], [13, 86], [14, 87], [15, 88], [16, 84], [17, 84], [18, 95], [19, 94], [20, 95], [21, 94], [22, 11], [23, 87], [24, 88], [25, 87], [26, 87], [27, 93]]);
var n388 = t([[12, 87], [13, 88], [14, 89], [15, 91], [16, 86], [17, 85], [18, 95], [19, 94], [20, 95], [21, 94], [22, 95], [23, 89], [24, 91], [25, 89], [26, 89], [27, 91]]);
var n389 = t([[12, 88], [13, 89], [14, 91], [15, 92], [16, 87], [17, 86], [18, 95], [19, 94], [20, 95], [21, 94], [22, 94], [23, 241], [24, 241], [25, 91], [26, 91], [27, 89]]);
var n390 = t([[12, 86], [13, 87], [14, 88], [15, 89], [16, 85], [17, 84], [18, 95], [19, 94], [20, 95], [21, 94], [22, 11], [23, 91], [24, 92], [25, 91], [26, 91], [27, 92]]);
var n391 = t([[12, 88], [13, 89], [14, 91], [15, 92], [16, 87], [17, 86], [18, 95], [19, 94], [20, 95], [21, 94], [22, 94], [23, 91], [24, 92], [25, 91], [26, 91], [27, 89]]);
var n392 = t([[12, 11], [13, 95], [14, 94], [15, 93], [16, 11], [17, 11], [18, 85], [19, 86], [20, 85], [21, 86], [22, 84], [23, 94], [24, 93], [25, 94], [26, 94], [27, 86]]);
var n393 = t([[12, 92], [13, 91], [14, 89], [15, 88], [16, 93], [17, 94], [18, 85], [19, 86], [20, 85], [21, 86], [22, 86], [23, 89], [24, 88], [25, 89], [26, 89], [27, 91]]);
var n394 = t([[12, 94], [13, 93], [14, 92], [15, 91], [16, 95], [17, 11], [18, 85], [19, 86], [20, 85], [21, 86], [22, 84], [23, 92], [24, 91], [25, 92], [26, 92], [27, 88]]);
var n395 = t([[12, 86], [13, 87], [14, 88], [15, 89], [16, 85], [17, 84], [18, 94], [19, 93], [20, 94], [21, 93], [22, 11], [23, 88], [24, 89], [25, 88], [26, 88], [27, 92]]);
var n396 = t([[12, 88], [13, 89], [14, 91], [15, 92], [16, 87], [17, 86], [18, 94], [19, 93], [20, 94], [21, 93], [22, 94], [23, 91], [24, 92], [25, 91], [26, 91], [27, 89]]);
var n397 = t([[12, 89], [13, 91], [14, 92], [15, 93], [16, 88], [17, 87], [18, 94], [19, 93], [20, 94], [21, 93], [22, 93], [23, 241], [24, 241], [25, 92], [26, 92], [27, 88]]);
var n398 = t([[12, 87], [13, 88], [14, 89], [15, 91], [16, 86], [17, 85], [18, 94], [19, 93], [20, 94], [21, 93], [22, 95], [23, 92], [24, 93], [25, 92], [26, 92], [27, 91]]);
var n399 = t([[12, 89], [13, 91], [14, 92], [15, 93], [16, 88], [17, 87], [18, 94], [19, 93], [20, 94], [21, 93], [22, 93], [23, 92], [24, 93], [25, 92], [26, 92], [27, 88]]);
var n400 = t([[12, 95], [13, 94], [14, 93], [15, 92], [16, 11], [17, 11], [18, 86], [19, 87], [20, 86], [21, 87], [22, 84], [23, 93], [24, 92], [25, 93], [26, 93], [27, 87]]);
var n401 = t([[12, 91], [13, 89], [14, 88], [15, 87], [16, 92], [17, 93], [18, 86], [19, 87], [20, 86], [21, 87], [22, 87], [23, 88], [24, 87], [25, 88], [26, 88], [27, 92]]);
var n402 = t([[12, 93], [13, 92], [14, 91], [15, 89], [16, 94], [17, 95], [18, 86], [19, 87], [20, 86], [21, 87], [22, 85], [23, 91], [24, 89], [25, 91], [26, 91], [27, 89]]);
var n403 = t([[12, 87], [13, 88], [14, 89], [15, 91], [16, 86], [17, 85], [19, 92], [20, 93], [21, 92], [22, 95], [23, 89], [24, 91], [25, 89], [26, 89], [27, 91]]);
var n404 = t([[12, 89], [13, 91], [14, 92], [15, 93], [16, 88], [17, 87], [19, 92], [20, 93], [21, 92], [22, 93], [23, 92], [24, 93], [25, 92], [26, 92], [27, 88]]);
var n405 = t([[12, 91], [13, 92], [14, 93], [15, 94], [16, 89], [17, 88], [19, 92], [20, 93], [21, 92], [22, 92], [23, 241], [24, 241], [25, 93], [26, 93], [27, 87]]);
var n406 = t([[12, 88], [13, 89], [14, 91], [15, 92], [16, 87], [17, 86], [19, 92], [20, 93], [21, 92], [22, 94], [23, 93], [24, 94], [25, 93], [26, 93], [27, 89]]);
var n407 = t([[12, 91], [13, 92], [14, 93], [15, 94], [16, 89], [17, 88], [19, 92], [20, 93], [21, 92], [22, 92], [23, 93], [24, 94], [25, 93], [26, 93], [27, 87]]);
var n408 = t([[12, 94], [13, 93], [14, 92], [15, 91], [16, 95], [17, 11], [19, 88], [20, 87], [21, 88], [22, 84], [23, 92], [24, 91], [25, 92], [26, 92], [27, 88]]);
var n409 = t([[12, 89], [13, 88], [14, 87], [15, 86], [16, 91], [17, 92], [19, 88], [20, 87], [21, 88], [22, 88], [23, 87], [24, 86], [25, 87], [26, 87], [27, 93]]);
var n410 = t([[12, 92], [13, 91], [14, 89], [15, 88], [16, 93], [17, 94], [19, 88], [20, 87], [21, 88], [22, 86], [23, 89], [24, 88], [25, 89], [26, 89], [27, 91]]);
var n411 = t([[12, 156], [13, 157], [14, 158], [15, 159], [16, 155], [17, 154], [18, 164], [19, 163], [20, 164], [21, 163], [22, 0], [23, 159], [24, 161], [25, 158], [26, 159], [27, 56]]);
var n412 = t([[12, 157], [13, 158], [14, 159], [15, 161], [16, 156], [17, 155], [18, 164], [19, 163], [20, 164], [21, 163], [22, 164], [23, 161], [24, 56], [25, 159], [26, 161], [27, 161]]);
var n413 = t([[12, 158], [13, 159], [14, 161], [15, 56], [16, 157], [17, 156], [18, 164], [19, 163], [20, 164], [21, 163], [22, 163], [23, 241], [24, 241], [25, 161], [26, 56], [27, 159]]);
var n414 = t([[12, 156], [13, 157], [14, 158], [15, 159], [16, 155], [17, 154], [18, 164], [19, 163], [20, 164], [21, 163], [22, 0], [23, 56], [24, 162], [25, 161], [26, 56], [27, 56]]);
var n415 = t([[12, 158], [13, 159], [14, 161], [15, 56], [16, 157], [17, 156], [18, 164], [19, 163], [20, 164], [21, 163], [22, 163], [23, 56], [24, 162], [25, 161], [26, 56], [27, 159]]);
var n416 = t([[12, 0], [13, 164], [14, 163], [15, 162], [16, 0], [17, 0], [18, 155], [19, 156], [20, 155], [21, 156], [22, 154], [23, 162], [24, 56], [25, 163], [26, 162], [27, 156]]);
var n417 = t([[12, 56], [13, 161], [14, 159], [15, 158], [16, 162], [17, 163], [18, 155], [19, 156], [20, 155], [21, 156], [22, 156], [23, 158], [24, 157], [25, 159], [26, 158], [27, 161]]);
var n418 = t([[12, 163], [13, 162], [14, 56], [15, 161], [16, 164], [17, 0], [18, 155], [19, 156], [20, 155], [21, 156], [22, 154], [23, 161], [24, 159], [25, 56], [26, 161], [27, 158]]);
var n419 = t([[12, 157], [13, 158], [14, 159], [15, 161], [16, 156], [17, 155], [18, 163], [19, 162], [20, 163], [21, 162], [22, 164], [23, 161], [24, 56], [25, 159], [26, 161], [27, 161]]);
var n420 = t([[12, 158], [13, 159], [14, 161], [15, 56], [16, 157], [17, 156], [18, 163], [19, 162], [20, 163], [21, 162], [22, 163], [23, 56], [24, 162], [25, 161], [26, 56], [27, 159]]);
var n421 = t([[12, 159], [13, 161], [14, 56], [15, 162], [16, 158], [17, 157], [18, 163], [19, 162], [20, 163], [21, 162], [22, 162], [23, 241], [24, 241], [25, 56], [26, 162], [27, 158]]);
var n422 = t([[12, 157], [13, 158], [14, 159], [15, 161], [16, 156], [17, 155], [18, 163], [19, 162], [20, 163], [21, 162], [22, 164], [23, 162], [24, 163], [25, 56], [26, 162], [27, 161]]);
var n423 = t([[12, 159], [13, 161], [14, 56], [15, 162], [16, 158], [17, 157], [18, 163], [19, 162], [20, 163], [21, 162], [22, 162], [23, 162], [24, 163], [25, 56], [26, 162], [27, 158]]);
var n424 = t([[12, 164], [13, 163], [14, 162], [15, 56], [16, 0], [17, 0], [18, 156], [19, 157], [20, 156], [21, 157], [22, 154], [23, 56], [24, 161], [25, 162], [26, 56], [27, 157]]);
var n425 = t([[12, 161], [13, 159], [14, 158], [15, 157], [16, 56], [17, 162], [18, 156], [19, 157], [20, 156], [21, 157], [22, 157], [23, 157], [24, 156], [25, 158], [26, 157], [27, 56]]);
var n426 = t([[12, 162], [13, 56], [14, 161], [15, 159], [16, 163], [17, 164], [18, 156], [19, 157], [20, 156], [21, 157], [22, 155], [23, 159], [24, 158], [25, 161], [26, 159], [27, 159]]);
var n427 = t([[12, 158], [13, 159], [14, 161], [15, 56], [16, 157], [17, 156], [19, 56], [20, 162], [21, 56], [22, 163], [23, 56], [24, 162], [25, 161], [26, 56], [27, 159]]);
var n428 = t([[12, 159], [13, 161], [14, 56], [15, 162], [16, 158], [17, 157], [19, 56], [20, 162], [21, 56], [22, 162], [23, 162], [24, 163], [25, 56], [26, 162], [27, 158]]);
var n429 = t([[12, 161], [13, 56], [14, 162], [15, 163], [16, 159], [17, 158], [19, 56], [20, 162], [21, 56], [22, 56], [23, 241], [24, 241], [25, 162], [26, 163], [27, 157]]);
var n430 = t([[12, 158], [13, 159], [14, 161], [15, 56], [16, 157], [17, 156], [19, 56], [20, 162], [21, 56], [22, 163], [23, 163], [24, 164], [25, 162], [26, 163], [27, 159]]);
var n431 = t([[12, 161], [13, 56], [14, 162], [15, 163], [16, 159], [17, 158], [19, 56], [20, 162], [21, 56], [22, 56], [23, 163], [24, 164], [25, 162], [26, 163], [27, 157]]);
var n432 = t([[12, 163], [13, 162], [14, 56], [15, 161], [16, 164], [17, 0], [19, 158], [20, 157], [21, 158], [22, 154], [23, 161], [24, 159], [25, 56], [26, 161], [27, 158]]);
var n433 = t([[12, 159], [13, 158], [14, 157], [15, 156], [16, 161], [17, 56], [19, 158], [20, 157], [21, 158], [22, 158], [23, 156], [24, 155], [25, 157], [26, 156], [27, 162]]);
var n434 = t([[12, 56], [13, 161], [14, 159], [15, 158], [16, 162], [17, 163], [19, 158], [20, 157], [21, 158], [22, 156], [23, 158], [24, 157], [25, 159], [26, 158], [27, 161]]);
var n435 = t([[12, 200], [13, 201], [14, 202], [15, 203], [16, 199], [17, 198], [18, 208], [19, 207], [20, 208], [21, 207], [22, 0], [23, 203], [24, 205], [25, 202], [26, 203], [27, 104]]);
var n436 = t([[12, 201], [13, 202], [14, 203], [15, 205], [16, 200], [17, 199], [18, 208], [19, 207], [20, 208], [21, 207], [22, 208], [23, 205], [24, 104], [25, 203], [26, 205], [27, 205]]);
var n437 = t([[12, 202], [13, 203], [14, 205], [15, 104], [16, 201], [17, 200], [18, 208], [19, 207], [20, 208], [21, 207], [22, 207], [23, 241], [24, 241], [25, 205], [26, 104], [27, 203]]);
var n438 = t([[12, 200], [13, 201], [14, 202], [15, 203], [16, 199], [17, 198], [18, 208], [19, 207], [20, 208], [21, 207], [22, 0], [23, 104], [24, 206], [25, 205], [26, 104], [27, 104]]);
var n439 = t([[12, 202], [13, 203], [14, 205], [15, 104], [16, 201], [17, 200], [18, 208], [19, 207], [20, 208], [21, 207], [22, 207], [23, 104], [24, 206], [25, 205], [26, 104], [27, 203]]);
var n440 = t([[12, 0], [13, 208], [14, 207], [15, 206], [16, 0], [17, 0], [18, 199], [19, 200], [20, 199], [21, 200], [22, 198], [23, 206], [24, 104], [25, 207], [26, 206], [27, 200]]);
var n441 = t([[12, 104], [13, 205], [14, 203], [15, 202], [16, 206], [17, 207], [18, 199], [19, 200], [20, 199], [21, 200], [22, 200], [23, 202], [24, 201], [25, 203], [26, 202], [27, 205]]);
var n442 = t([[12, 207], [13, 206], [14, 104], [15, 205], [16, 208], [17, 0], [18, 199], [19, 200], [20, 199], [21, 200], [22, 198], [23, 205], [24, 203], [25, 104], [26, 205], [27, 202]]);
var n443 = t([[12, 201], [13, 202], [14, 203], [15, 205], [16, 200], [17, 199], [18, 207], [19, 206], [20, 207], [21, 206], [22, 208], [23, 205], [24, 104], [25, 203], [26, 205], [27, 205]]);
var n444 = t([[12, 202], [13, 203], [14, 205], [15, 104], [16, 201], [17, 200], [18, 207], [19, 206], [20, 207], [21, 206], [22, 207], [23, 104], [24, 206], [25, 205], [26, 104], [27, 203]]);
var n445 = t([[12, 203], [13, 205], [14, 104], [15, 206], [16, 202], [17, 201], [18, 207], [19, 206], [20, 207], [21, 206], [22, 206], [23, 241], [24, 241], [25, 104], [26, 206], [27, 202]]);
var n446 = t([[12, 201], [13, 202], [14, 203], [15, 205], [16, 200], [17, 199], [18, 207], [19, 206], [20, 207], [21, 206], [22, 208], [23, 206], [24, 207], [25, 104], [26, 206], [27, 205]]);
var n447 = t([[12, 203], [13, 205], [14, 104], [15, 206], [16, 202], [17, 201], [18, 207], [19, 206], [20, 207], [21, 206], [22, 206], [23, 206], [24, 207], [25, 104], [26, 206], [27, 202]]);
var n448 = t([[12, 208], [13, 207], [14, 206], [15, 104], [16, 0], [17, 0], [18, 200], [19, 201], [20, 200], [21, 201], [22, 198], [23, 104], [24, 205], [25, 206], [26, 104], [27, 201]]);
var n449 = t([[12, 205], [13, 203], [14, 202], [15, 201], [16, 104], [17, 206], [18, 200], [19, 201], [20, 200], [21, 201], [22, 201], [23, 201], [24, 200], [25, 202], [26, 201], [27, 104]]);
var n450 = t([[12, 206], [13, 104], [14, 205], [15, 203], [16, 207], [17, 208], [18, 200], [19, 201], [20, 200], [21, 201], [22, 199], [23, 203], [24, 202], [25, 205], [26, 203], [27, 203]]);
var n451 = t([[12, 202], [13, 203], [14, 205], [15, 104], [16, 201], [17, 200], [19, 104], [20, 206], [21, 104], [22, 207], [23, 104], [24, 206], [25, 205], [26, 104], [27, 203]]);
var n452 = t([[12, 203], [13, 205], [14, 104], [15, 206], [16, 202], [17, 201], [19, 104], [20, 206], [21, 104], [22, 206], [23, 206], [24, 207], [25, 104], [26, 206], [27, 202]]);
var n453 = t([[12, 205], [13, 104], [14, 206], [15, 207], [16, 203], [17, 202], [19, 104], [20, 206], [21, 104], [22, 104], [23, 241], [24, 241], [25, 206], [26, 207], [27, 201]]);
var n454 = t([[12, 202], [13, 203], [14, 205], [15, 104], [16, 201], [17, 200], [19, 104], [20, 206], [21, 104], [22, 207], [23, 207], [24, 208], [25, 206], [26, 207], [27, 203]]);
var n455 = t([[12, 205], [13, 104], [14, 206], [15, 207], [16, 203], [17, 202], [19, 104], [20, 206], [21, 104], [22, 104], [23, 207], [24, 208], [25, 206], [26, 207], [27, 201]]);
var n456 = t([[12, 207], [13, 206], [14, 104], [15, 205], [16, 208], [17, 0], [19, 202], [20, 201], [21, 202], [22, 198], [23, 205], [24, 203], [25, 104], [26, 205], [27, 202]]);
var n457 = t([[12, 203], [13, 202], [14, 201], [15, 200], [16, 205], [17, 104], [19, 202], [20, 201], [21, 202], [22, 202], [23, 200], [24, 199], [25, 201], [26, 200], [27, 206]]);
var n458 = t([[12, 104], [13, 205], [14, 203], [15, 202], [16, 206], [17, 207], [19, 202], [20, 201], [21, 202], [22, 200], [23, 202], [24, 201], [25, 203], [26, 202], [27, 205]]);
var n459 = t([[12, 145], [13, 146], [14, 147], [15, 148], [16, 144], [17, 143], [18, 153], [19, 152], [20, 153], [21, 152], [22, 0], [23, 148], [24, 150], [25, 147], [26, 148], [27, 44]]);
var n460 = t([[12, 146], [13, 147], [14, 148], [15, 150], [16, 145], [17, 144], [18, 153], [19, 152], [20, 153], [21, 152], [22, 153], [23, 150], [24, 44], [25, 148], [26, 150], [27, 150]]);
var n461 = t([[12, 147], [13, 148], [14, 150], [15, 44], [16, 146], [17, 145], [18, 153], [19, 152], [20, 153], [21, 152], [22, 152], [23, 241], [24, 241], [25, 150], [26, 44], [27, 148]]);
var n462 = t([[12, 145], [13, 146], [14, 147], [15, 148], [16, 144], [17, 143], [18, 153], [19, 152], [20, 153], [21, 152], [22, 0], [23, 44], [24, 151], [25, 150], [26, 44], [27, 44]]);
var n463 = t([[12, 147], [13, 148], [14, 150], [15, 44], [16, 146], [17, 145], [18, 153], [19, 152], [20, 153], [21, 152], [22, 152], [23, 44], [24, 151], [25, 150], [26, 44], [27, 148]]);
var n464 = t([[12, 0], [13, 153], [14, 152], [15, 151], [16, 0], [17, 0], [18, 144], [19, 145], [20, 144], [21, 145], [22, 143], [23, 151], [24, 44], [25, 152], [26, 151], [27, 145]]);
var n465 = t([[12, 44], [13, 150], [14, 148], [15, 147], [16, 151], [17, 152], [18, 144], [19, 145], [20, 144], [21, 145], [22, 145], [23, 147], [24, 146], [25, 148], [26, 147], [27, 150]]);
var n466 = t([[12, 152], [13, 151], [14, 44], [15, 150], [16, 153], [17, 0], [18, 144], [19, 145], [20, 144], [21, 145], [22, 143], [23, 150], [24, 148], [25, 44], [26, 150], [27, 147]]);
var n467 = t([[12, 146], [13, 147], [14, 148], [15, 150], [16, 145], [17, 144], [18, 152], [19, 151], [20, 152], [21, 151], [22, 153], [23, 150], [24, 44], [25, 148], [26, 150], [27, 150]]);
var n468 = t([[12, 147], [13, 148], [14, 150], [15, 44], [16, 146], [17, 145], [18, 152], [19, 151], [20, 152], [21, 151], [22, 152], [23, 44], [24, 151], [25, 150], [26, 44], [27, 148]]);
var n469 = t([[12, 148], [13, 150], [14, 44], [15, 151], [16, 147], [17, 146], [18, 152], [19, 151], [20, 152], [21, 151], [22, 151], [23, 241], [24, 241], [25, 44], [26, 151], [27, 147]]);
var n470 = t([[12, 146], [13, 147], [14, 148], [15, 150], [16, 145], [17, 144], [18, 152], [19, 151], [20, 152], [21, 151], [22, 153], [23, 151], [24, 152], [25, 44], [26, 151], [27, 150]]);
var n471 = t([[12, 148], [13, 150], [14, 44], [15, 151], [16, 147], [17, 146], [18, 152], [19, 151], [20, 152], [21, 151], [22, 151], [23, 151], [24, 152], [25, 44], [26, 151], [27, 147]]);
var n472 = t([[12, 153], [13, 152], [14, 151], [15, 44], [16, 0], [17, 0], [18, 145], [19, 146], [20, 145], [21, 146], [22, 143], [23, 44], [24, 150], [25, 151], [26, 44], [27, 146]]);
var n473 = t([[12, 150], [13, 148], [14, 147], [15, 146], [16, 44], [17, 151], [18, 145], [19, 146], [20, 145], [21, 146], [22, 146], [23, 146], [24, 145], [25, 147], [26, 146], [27, 44]]);
var n474 = t([[12, 151], [13, 44], [14, 150], [15, 148], [16, 152], [17, 153], [18, 145], [19, 146], [20, 145], [21, 146], [22, 144], [23, 148], [24, 147], [25, 150], [26, 148], [27, 148]]);
var n475 = t([[12, 147], [13, 148], [14, 150], [15, 44], [16, 146], [17, 145], [19, 44], [20, 151], [21, 44], [22, 152], [23, 44], [24, 151], [25, 150], [26, 44], [27, 148]]);
var n476 = t([[12, 148], [13, 150], [14, 44], [15, 151], [16, 147], [17, 146], [19, 44], [20, 151], [21, 44], [22, 151], [23, 151], [24, 152], [25, 44], [26, 151], [27, 147]]);
var n477 = t([[12, 150], [13, 44], [14, 151], [15, 152], [16, 148], [17, 147], [19, 44], [20, 151], [21, 44], [22, 44], [23, 241], [24, 241], [25, 151], [26, 152], [27, 146]]);
var n478 = t([[12, 147], [13, 148], [14, 150], [15, 44], [16, 146], [17, 145], [19, 44], [20, 151], [21, 44], [22, 152], [23, 152], [24, 153], [25, 151], [26, 152], [27, 148]]);
var n479 = t([[12, 150], [13, 44], [14, 151], [15, 152], [16, 148], [17, 147], [19, 44], [20, 151], [21, 44], [22, 44], [23, 152], [24, 153], [25, 151], [26, 152], [27, 146]]);
var n480 = t([[12, 152], [13, 151], [14, 44], [15, 150], [16, 153], [17, 0], [19, 147], [20, 146], [21, 147], [22, 143], [23, 150], [24, 148], [25, 44], [26, 150], [27, 147]]);
var n481 = t([[12, 148], [13, 147], [14, 146], [15, 145], [16, 150], [17, 44], [19, 147], [20, 146], [21, 147], [22, 147], [23, 145], [24, 144], [25, 146], [26, 145], [27, 151]]);
var n482 = t([[12, 44], [13, 150], [14, 148], [15, 147], [16, 151], [17, 152], [19, 147], [20, 146], [21, 147], [22, 145], [23, 147], [24, 146], [25, 148], [26, 147], [27, 150]]);
var n483 = t([[12, 123], [13, 124], [14, 125], [15, 126], [16, 122], [17, 121], [18, 131], [19, 130], [20, 131], [21, 130], [22, 0], [23, 126], [24, 128], [25, 125], [26, 126], [27, 22]]);
var n484 = t([[12, 124], [13, 125], [14, 126], [15, 128], [16, 123], [17, 122], [18, 131], [19, 130], [20, 131], [21, 130], [22, 131], [23, 128], [24, 22], [25, 126], [26, 128], [27, 128]]);
var n485 = t([[12, 125], [13, 126], [14, 128], [15, 22], [16, 124], [17, 123], [18, 131], [19, 130], [20, 131], [21, 130], [22, 130], [23, 241], [24, 241], [25, 128], [26, 22], [27, 126]]);
var n486 = t([[12, 123], [13, 124], [14, 125], [15, 126], [16, 122], [17, 121], [18, 131], [19, 130], [20, 131], [21, 130], [22, 0], [23, 22], [24, 129], [25, 128], [26, 22], [27, 22]]);
var n487 = t([[12, 125], [13, 126], [14, 128], [15, 22], [16, 124], [17, 123], [18, 131], [19, 130], [20, 131], [21, 130], [22, 130], [23, 22], [24, 129], [25, 128], [26, 22], [27, 126]]);
var n488 = t([[12, 0], [13, 131], [14, 130], [15, 129], [16, 0], [17, 0], [18, 122], [19, 123], [20, 122], [21, 123], [22, 121], [23, 129], [24, 22], [25, 130], [26, 129], [27, 123]]);
var n489 = t([[12, 22], [13, 128], [14, 126], [15, 125], [16, 129], [17, 130], [18, 122], [19, 123], [20, 122], [21, 123], [22, 123], [23, 125], [24, 124], [25, 126], [26, 125], [27, 128]]);
var n490 = t([[12, 130], [13, 129], [14, 22], [15, 128], [16, 131], [17, 0], [18, 122], [19, 123], [20, 122], [21, 123], [22, 121], [23, 128], [24, 126], [25, 22], [26, 128], [27, 125]]);
var n491 = t([[12, 124], [13, 125], [14, 126], [15, 128], [16, 123], [17, 122], [18, 130], [19, 129], [20, 130], [21, 129], [22, 131], [23, 128], [24, 22], [25, 126], [26, 128], [27, 128]]);
var n492 = t([[12, 125], [13, 126], [14, 128], [15, 22], [16, 124], [17, 123], [18, 130], [19, 129], [20, 130], [21, 129], [22, 130], [23, 22], [24, 129], [25, 128], [26, 22], [27, 126]]);
var n493 = t([[12, 126], [13, 128], [14, 22], [15, 129], [16, 125], [17, 124], [18, 130], [19, 129], [20, 130], [21, 129], [22, 129], [23, 241], [24, 241], [25, 22], [26, 129], [27, 125]]);
var n494 = t([[12, 124], [13, 125], [14, 126], [15, 128], [16, 123], [17, 122], [18, 130], [19, 129], [20, 130], [21, 129], [22, 131], [23, 129], [24, 130], [25, 22], [26, 129], [27, 128]]);
var n495 = t([[12, 126], [13, 128], [14, 22], [15, 129], [16, 125], [17, 124], [18, 130], [19, 129], [20, 130], [21, 129], [22, 129], [23, 129], [24, 130], [25, 22], [26, 129], [27, 125]]);
var n496 = t([[12, 131], [13, 130], [14, 129], [15, 22], [16, 0], [17, 0], [18, 123], [19, 124], [20, 123], [21, 124], [22, 121], [23, 22], [24, 128], [25, 129], [26, 22], [27, 124]]);
var n497 = t([[12, 128], [13, 126], [14, 125], [15, 124], [16, 22], [17, 129], [18, 123], [19, 124], [20, 123], [21, 124], [22, 124], [23, 124], [24, 123], [25, 125], [26, 124], [27, 22]]);
var n498 = t([[12, 129], [13, 22], [14, 128], [15, 126], [16, 130], [17, 131], [18, 123], [19, 124], [20, 123], [21, 124], [22, 122], [23, 126], [24, 125], [25, 128], [26, 126], [27, 126]]);
var n499 = t([[12, 125], [13, 126], [14, 128], [15, 22], [16, 124], [17, 123], [19, 22], [20, 129], [21, 22], [22, 130], [23, 22], [24, 129], [25, 128], [26, 22], [27, 126]]);
var n500 = t([[12, 126], [13, 128], [14, 22], [15, 129], [16, 125], [17, 124], [19, 22], [20, 129], [21, 22], [22, 129], [23, 129], [24, 130], [25, 22], [26, 129], [27, 125]]);
var n501 = t([[12, 128], [13, 22], [14, 129], [15, 130], [16, 126], [17, 125], [19, 22], [20, 129], [21, 22], [22, 22], [23, 241], [24, 241], [25, 129], [26, 130], [27, 124]]);
var n502 = t([[12, 125], [13, 126], [14, 128], [15, 22], [16, 124], [17, 123], [19, 22], [20, 129], [21, 22], [22, 130], [23, 130], [24, 131], [25, 129], [26, 130], [27, 126]]);
var n503 = t([[12, 128], [13, 22], [14, 129], [15, 130], [16, 126], [17, 125], [19, 22], [20, 129], [21, 22], [22, 22], [23, 130], [24, 131], [25, 129], [26, 130], [27, 124]]);
var n504 = t([[12, 130], [13, 129], [14, 22], [15, 128], [16, 131], [17, 0], [19, 125], [20, 124], [21, 125], [22, 121], [23, 128], [24, 126], [25, 22], [26, 128], [27, 125]]);
var n505 = t([[12, 126], [13, 125], [14, 124], [15, 123], [16, 128], [17, 22], [19, 125], [20, 124], [21, 125], [22, 125], [23, 123], [24, 122], [25, 124], [26, 123], [27, 129]]);
var n506 = t([[12, 22], [13, 128], [14, 126], [15, 125], [16, 129], [17, 130], [19, 125], [20, 124], [21, 125], [22, 123], [23, 125], [24, 124], [25, 126], [26, 125], [27, 128]]);
var n507 = t([[12, 178], [13, 179], [14, 180], [15, 181], [16, 177], [17, 176], [18, 186], [19, 185], [20, 186], [21, 185], [22, 0], [23, 181], [24, 183], [25, 180], [26, 181], [27, 80]]);
var n508 = t([[12, 179], [13, 180], [14, 181], [15, 183], [16, 178], [17, 177], [18, 186], [19, 185], [20, 186], [21, 185], [22, 186], [23, 183], [24, 80], [25, 181], [26, 183], [27, 183]]);
var n509 = t([[12, 180], [13, 181], [14, 183], [15, 80], [16, 179], [17, 178], [18, 186], [19, 185], [20, 186], [21, 185], [22, 185], [23, 241], [24, 241], [25, 183], [26, 80], [27, 181]]);
var n510 = t([[12, 178], [13, 179], [14, 180], [15, 181], [16, 177], [17, 176], [18, 186], [19, 185], [20, 186], [21, 185], [22, 0], [23, 80], [24, 184], [25, 183], [26, 80], [27, 80]]);
var n511 = t([[12, 180], [13, 181], [14, 183], [15, 80], [16, 179], [17, 178], [18, 186], [19, 185], [20, 186], [21, 185], [22, 185], [23, 80], [24, 184], [25, 183], [26, 80], [27, 181]]);
var n512 = t([[12, 0], [13, 186], [14, 185], [15, 184], [16, 0], [17, 0], [18, 177], [19, 178], [20, 177], [21, 178], [22, 176], [23, 184], [24, 80], [25, 185], [26, 184], [27, 178]]);
var n513 = t([[12, 80], [13, 183], [14, 181], [15, 180], [16, 184], [17, 185], [18, 177], [19, 178], [20, 177], [21, 178], [22, 178], [23, 180], [24, 179], [25, 181], [26, 180], [27, 183]]);
var n514 = t([[12, 185], [13, 184], [14, 80], [15, 183], [16, 186], [17, 0], [18, 177], [19, 178], [20, 177], [21, 178], [22, 176], [23, 183], [24, 181], [25, 80], [26, 183], [27, 180]]);
var n515 = t([[12, 179], [13, 180], [14, 181], [15, 183], [16, 178], [17, 177], [18, 185], [19, 184], [20, 185], [21, 184], [22, 186], [23, 183], [24, 80], [25, 181], [26, 183], [27, 183]]);
var n516 = t([[12, 180], [13, 181], [14, 183], [15, 80], [16, 179], [17, 178], [18, 185], [19, 184], [20, 185], [21, 184], [22, 185], [23, 80], [24, 184], [25, 183], [26, 80], [27, 181]]);
var n517 = t([[12, 181], [13, 183], [14, 80], [15, 184], [16, 180], [17, 179], [18, 185], [19, 184], [20, 185], [21, 184], [22, 184], [23, 241], [24, 241], [25, 80], [26, 184], [27, 180]]);
var n518 = t([[12, 179], [13, 180], [14, 181], [15, 183], [16, 178], [17, 177], [18, 185], [19, 184], [20, 185], [21, 184], [22, 186], [23, 184], [24, 185], [25, 80], [26, 184], [27, 183]]);
var n519 = t([[12, 181], [13, 183], [14, 80], [15, 184], [16, 180], [17, 179], [18, 185], [19, 184], [20, 185], [21, 184], [22, 184], [23, 184], [24, 185], [25, 80], [26, 184], [27, 180]]);
var n520 = t([[12, 186], [13, 185], [14, 184], [15, 80], [16, 0], [17, 0], [18, 178], [19, 179], [20, 178], [21, 179], [22, 176], [23, 80], [24, 183], [25, 184], [26, 80], [27, 179]]);
var n521 = t([[12, 183], [13, 181], [14, 180], [15, 179], [16, 80], [17, 184], [18, 178], [19, 179], [20, 178], [21, 179], [22, 179], [23, 179], [24, 178], [25, 180], [26, 179], [27, 80]]);
var n522 = t([[12, 184], [13, 80], [14, 183], [15, 181], [16, 185], [17, 186], [18, 178], [19, 179], [20, 178], [21, 179], [22, 177], [23, 181], [24, 180], [25, 183], [26, 181], [27, 181]]);
var n523 = t([[12, 180], [13, 181], [14, 183], [15, 80], [16, 179], [17, 178], [19, 80], [20, 184], [21, 80], [22, 185], [23, 80], [24, 184], [25, 183], [26, 80], [27, 181]]);
var n524 = t([[12, 181], [13, 183], [14, 80], [15, 184], [16, 180], [17, 179], [19, 80], [20, 184], [21, 80], [22, 184], [23, 184], [24, 185], [25, 80], [26, 184], [27, 180]]);
var n525 = t([[12, 183], [13, 80], [14, 184], [15, 185], [16, 181], [17, 180], [19, 80], [20, 184], [21, 80], [22, 80], [23, 241], [24, 241], [25, 184], [26, 185], [27, 179]]);
var n526 = t([[12, 180], [13, 181], [14, 183], [15, 80], [16, 179], [17, 178], [19, 80], [20, 184], [21, 80], [22, 185], [23, 185], [24, 186], [25, 184], [26, 185], [27, 181]]);
var n527 = t([[12, 183], [13, 80], [14, 184], [15, 185], [16, 181], [17, 180], [19, 80], [20, 184], [21, 80], [22, 80], [23, 185], [24, 186], [25, 184], [26, 185], [27, 179]]);
var n528 = t([[12, 185], [13, 184], [14, 80], [15, 183], [16, 186], [17, 0], [19, 180], [20, 179], [21, 180], [22, 176], [23, 183], [24, 181], [25, 80], [26, 183], [27, 180]]);
var n529 = t([[12, 181], [13, 180], [14, 179], [15, 178], [16, 183], [17, 80], [19, 180], [20, 179], [21, 180], [22, 180], [23, 178], [24, 177], [25, 179], [26, 178], [27, 184]]);
var n530 = t([[12, 80], [13, 183], [14, 181], [15, 180], [16, 184], [17, 185], [19, 180], [20, 179], [21, 180], [22, 178], [23, 180], [24, 179], [25, 181], [26, 180], [27, 183]]);
var n531 = t([[12, 167], [13, 168], [14, 169], [15, 170], [16, 166], [17, 165], [18, 175], [19, 174], [20, 175], [21, 174], [22, 0], [23, 170], [24, 172], [25, 169], [26, 170], [27, 68]]);
var n532 = t([[12, 168], [13, 169], [14, 170], [15, 172], [16, 167], [17, 166], [18, 175], [19, 174], [20, 175], [21, 174], [22, 175], [23, 172], [24, 68], [25, 170], [26, 172], [27, 172]]);
var n533 = t([[12, 169], [13, 170], [14, 172], [15, 68], [16, 168], [17, 167], [18, 175], [19, 174], [20, 175], [21, 174], [22, 174], [23, 241], [24, 241], [25, 172], [26, 68], [27, 170]]);
var n534 = t([[12, 167], [13, 168], [14, 169], [15, 170], [16, 166], [17, 165], [18, 175], [19, 174], [20, 175], [21, 174], [22, 0], [23, 68], [24, 173], [25, 172], [26, 68], [27, 68]]);
var n535 = t([[12, 169], [13, 170], [14, 172], [15, 68], [16, 168], [17, 167], [18, 175], [19, 174], [20, 175], [21, 174], [22, 174], [23, 68], [24, 173], [25, 172], [26, 68], [27, 170]]);
var n536 = t([[12, 0], [13, 175], [14, 174], [15, 173], [16, 0], [17, 0], [18, 166], [19, 167], [20, 166], [21, 167], [22, 165], [23, 173], [24, 68], [25, 174], [26, 173], [27, 167]]);
var n537 = t([[12, 68], [13, 172], [14, 170], [15, 169], [16, 173], [17, 174], [18, 166], [19, 167], [20, 166], [21, 167], [22, 167], [23, 169], [24, 168], [25, 170], [26, 169], [27, 172]]);
var n538 = t([[12, 174], [13, 173], [14, 68], [15, 172], [16, 175], [17, 0], [18, 166], [19, 167], [20, 166], [21, 167], [22, 165], [23, 172], [24, 170], [25, 68], [26, 172], [27, 169]]);
var n539 = t([[12, 168], [13, 169], [14, 170], [15, 172], [16, 167], [17, 166], [18, 174], [19, 173], [20, 174], [21, 173], [22, 175], [23, 172], [24, 68], [25, 170], [26, 172], [27, 172]]);
var n540 = t([[12, 169], [13, 170], [14, 172], [15, 68], [16, 168], [17, 167], [18, 174], [19, 173], [20, 174], [21, 173], [22, 174], [23, 68], [24, 173], [25, 172], [26, 68], [27, 170]]);
var n541 = t([[12, 170], [13, 172], [14, 68], [15, 173], [16, 169], [17, 168], [18, 174], [19, 173], [20, 174], [21, 173], [22, 173], [23, 241], [24, 241], [25, 68], [26, 173], [27, 169]]);
var n542 = t([[12, 168], [13, 169], [14, 170], [15, 172], [16, 167], [17, 166], [18, 174], [19, 173], [20, 174], [21, 173], [22, 175], [23, 173], [24, 174], [25, 68], [26, 173], [27, 172]]);
var n543 = t([[12, 170], [13, 172], [14, 68], [15, 173], [16, 169], [17, 168], [18, 174], [19, 173], [20, 174], [21, 173], [22, 173], [23, 173], [24, 174], [25, 68], [26, 173], [27, 169]]);
var n544 = t([[12, 175], [13, 174], [14, 173], [15, 68], [16, 0], [17, 0], [18, 167], [19, 168], [20, 167], [21, 168], [22, 165], [23, 68], [24, 172], [25, 173], [26, 68], [27, 168]]);
var n545 = t([[12, 172], [13, 170], [14, 169], [15, 168], [16, 68], [17, 173], [18, 167], [19, 168], [20, 167], [21, 168], [22, 168], [23, 168], [24, 167], [25, 169], [26, 168], [27, 68]]);
var n546 = t([[12, 173], [13, 68], [14, 172], [15, 170], [16, 174], [17, 175], [18, 167], [19, 168], [20, 167], [21, 168], [22, 166], [23, 170], [24, 169], [25, 172], [26, 170], [27, 170]]);
var n547 = t([[12, 169], [13, 170], [14, 172], [15, 68], [16, 168], [17, 167], [19, 68], [20, 173], [21, 68], [22, 174], [23, 68], [24, 173], [25, 172], [26, 68], [27, 170]]);
var n548 = t([[12, 170], [13, 172], [14, 68], [15, 173], [16, 169], [17, 168], [19, 68], [20, 173], [21, 68], [22, 173], [23, 173], [24, 174], [25, 68], [26, 173], [27, 169]]);
var n549 = t([[12, 172], [13, 68], [14, 173], [15, 174], [16, 170], [17, 169], [19, 68], [20, 173], [21, 68], [22, 68], [23, 241], [24, 241], [25, 173], [26, 174], [27, 168]]);
var n550 = t([[12, 169], [13, 170], [14, 172], [15, 68], [16, 168], [17, 167], [19, 68], [20, 173], [21, 68], [22, 174], [23, 174], [24, 175], [25, 173], [26, 174], [27, 170]]);
var n551 = t([[12, 172], [13, 68], [14, 173], [15, 174], [16, 170], [17, 169], [19, 68], [20, 173], [21, 68], [22, 68], [23, 174], [24, 175], [25, 173], [26, 174], [27, 168]]);
var n552 = t([[12, 174], [13, 173], [14, 68], [15, 172], [16, 175], [17, 0], [19, 169], [20, 168], [21, 169], [22, 165], [23, 172], [24, 170], [25, 68], [26, 172], [27, 169]]);
var n553 = t([[12, 170], [13, 169], [14, 168], [15, 167], [16, 172], [17, 68], [19, 169], [20, 168], [21, 169], [22, 169], [23, 167], [24, 166], [25, 168], [26, 167], [27, 173]]);
var n554 = t([[12, 68], [13, 172], [14, 170], [15, 169], [16, 173], [17, 174], [19, 169], [20, 168], [21, 169], [22, 167], [23, 169], [24, 168], [25, 170], [26, 169], [27, 172]]);
var n555 = t([[12, 189], [13, 190], [14, 191], [15, 192], [16, 188], [17, 187], [18, 197], [19, 196], [20, 197], [21, 196], [22, 0], [23, 192], [24, 194], [25, 191], [26, 192], [27, 92]]);
var n556 = t([[12, 190], [13, 191], [14, 192], [15, 194], [16, 189], [17, 188], [18, 197], [19, 196], [20, 197], [21, 196], [22, 197], [23, 194], [24, 92], [25, 192], [26, 194], [27, 194]]);
var n557 = t([[12, 191], [13, 192], [14, 194], [15, 92], [16, 190], [17, 189], [18, 197], [19, 196], [20, 197], [21, 196], [22, 196], [23, 241], [24, 241], [25, 194], [26, 92], [27, 192]]);
var n558 = t([[12, 189], [13, 190], [14, 191], [15, 192], [16, 188], [17, 187], [18, 197], [19, 196], [20, 197], [21, 196], [22, 0], [23, 92], [24, 195], [25, 194], [26, 92], [27, 92]]);
var n559 = t([[12, 191], [13, 192], [14, 194], [15, 92], [16, 190], [17, 189], [18, 197], [19, 196], [20, 197], [21, 196], [22, 196], [23, 92], [24, 195], [25, 194], [26, 92], [27, 192]]);
var n560 = t([[12, 0], [13, 197], [14, 196], [15, 195], [16, 0], [17, 0], [18, 188], [19, 189], [20, 188], [21, 189], [22, 187], [23, 195], [24, 92], [25, 196], [26, 195], [27, 189]]);
var n561 = t([[12, 92], [13, 194], [14, 192], [15, 191], [16, 195], [17, 196], [18, 188], [19, 189], [20, 188], [21, 189], [22, 189], [23, 191], [24, 190], [25, 192], [26, 191], [27, 194]]);
var n562 = t([[12, 196], [13, 195], [14, 92], [15, 194], [16, 197], [17, 0], [18, 188], [19, 189], [20, 188], [21, 189], [22, 187], [23, 194], [24, 192], [25, 92], [26, 194], [27, 191]]);
var n563 = t([[12, 190], [13, 191], [14, 192], [15, 194], [16, 189], [17, 188], [18, 196], [19, 195], [20, 196], [21, 195], [22, 197], [23, 194], [24, 92], [25, 192], [26, 194], [27, 194]]);
var n564 = t([[12, 191], [13, 192], [14, 194], [15, 92], [16, 190], [17, 189], [18, 196], [19, 195], [20, 196], [21, 195], [22, 196], [23, 92], [24, 195], [25, 194], [26, 92], [27, 192]]);
var n565 = t([[12, 192], [13, 194], [14, 92], [15, 195], [16, 191], [17, 190], [18, 196], [19, 195], [20, 196], [21, 195], [22, 195], [23, 241], [24, 241], [25, 92], [26, 195], [27, 191]]);
var n566 = t([[12, 190], [13, 191], [14, 192], [15, 194], [16, 189], [17, 188], [18, 196], [19, 195], [20, 196], [21, 195], [22, 197], [23, 195], [24, 196], [25, 92], [26, 195], [27, 194]]);
var n567 = t([[12, 192], [13, 194], [14, 92], [15, 195], [16, 191], [17, 190], [18, 196], [19, 195], [20, 196], [21, 195], [22, 195], [23, 195], [24, 196], [25, 92], [26, 195], [27, 191]]);
var n568 = t([[12, 197], [13, 196], [14, 195], [15, 92], [16, 0], [17, 0], [18, 189], [19, 190], [20, 189], [21, 190], [22, 187], [23, 92], [24, 194], [25, 195], [26, 92], [27, 190]]);
var n569 = t([[12, 194], [13, 192], [14, 191], [15, 190], [16, 92], [17, 195], [18, 189], [19, 190], [20, 189], [21, 190], [22, 190], [23, 190], [24, 189], [25, 191], [26, 190], [27, 92]]);
var n570 = t([[12, 195], [13, 92], [14, 194], [15, 192], [16, 196], [17, 197], [18, 189], [19, 190], [20, 189], [21, 190], [22, 188], [23, 192], [24, 191], [25, 194], [26, 192], [27, 192]]);
var n571 = t([[12, 191], [13, 192], [14, 194], [15, 92], [16, 190], [17, 189], [19, 92], [20, 195], [21, 92], [22, 196], [23, 92], [24, 195], [25, 194], [26, 92], [27, 192]]);
var n572 = t([[12, 192], [13, 194], [14, 92], [15, 195], [16, 191], [17, 190], [19, 92], [20, 195], [21, 92], [22, 195], [23, 195], [24, 196], [25, 92], [26, 195], [27, 191]]);
var n573 = t([[12, 194], [13, 92], [14, 195], [15, 196], [16, 192], [17, 191], [19, 92], [20, 195], [21, 92], [22, 92], [23, 241], [24, 241], [25, 195], [26, 196], [27, 190]]);
var n574 = t([[12, 191], [13, 192], [14, 194], [15, 92], [16, 190], [17, 189], [19, 92], [20, 195], [21, 92], [22, 196], [23, 196], [24, 197], [25, 195], [26, 196], [27, 192]]);
var n575 = t([[12, 194], [13, 92], [14, 195], [15, 196], [16, 192], [17, 191], [19, 92], [20, 195], [21, 92], [22, 92], [23, 196], [24, 197], [25, 195], [26, 196], [27, 190]]);
var n576 = t([[12, 196], [13, 195], [14, 92], [15, 194], [16, 197], [17, 0], [19, 191], [20, 190], [21, 191], [22, 187], [23, 194], [24, 192], [25, 92], [26, 194], [27, 191]]);
var n577 = t([[12, 192], [13, 191], [14, 190], [15, 189], [16, 194], [17, 92], [19, 191], [20, 190], [21, 191], [22, 191], [23, 189], [24, 188], [25, 190], [26, 189], [27, 195]]);
var n578 = t([[12, 92], [13, 194], [14, 192], [15, 191], [16, 195], [17, 196], [19, 191], [20, 190], [21, 191], [22, 189], [23, 191], [24, 190], [25, 192], [26, 191], [27, 194]]);
var themes = {
  light: n1,
  dark: n2,
  light_orange: n3,
  light_yellow: n4,
  light_green: n5,
  light_blue: n6,
  light_purple: n7,
  light_pink: n8,
  light_red: n9,
  dark_orange: n10,
  dark_yellow: n11,
  dark_green: n12,
  dark_blue: n13,
  dark_purple: n14,
  dark_pink: n15,
  dark_red: n16,
  light_SheetOverlay: n17,
  light_DialogOverlay: n17,
  light_ModalOverlay: n17,
  light_orange_SheetOverlay: n17,
  light_orange_DialogOverlay: n17,
  light_orange_ModalOverlay: n17,
  light_yellow_SheetOverlay: n17,
  light_yellow_DialogOverlay: n17,
  light_yellow_ModalOverlay: n17,
  light_green_SheetOverlay: n17,
  light_green_DialogOverlay: n17,
  light_green_ModalOverlay: n17,
  light_blue_SheetOverlay: n17,
  light_blue_DialogOverlay: n17,
  light_blue_ModalOverlay: n17,
  light_purple_SheetOverlay: n17,
  light_purple_DialogOverlay: n17,
  light_purple_ModalOverlay: n17,
  light_pink_SheetOverlay: n17,
  light_pink_DialogOverlay: n17,
  light_pink_ModalOverlay: n17,
  light_red_SheetOverlay: n17,
  light_red_DialogOverlay: n17,
  light_red_ModalOverlay: n17,
  light_alt1_SheetOverlay: n17,
  light_alt1_DialogOverlay: n17,
  light_alt1_ModalOverlay: n17,
  light_alt2_SheetOverlay: n17,
  light_alt2_DialogOverlay: n17,
  light_alt2_ModalOverlay: n17,
  light_active_SheetOverlay: n17,
  light_active_DialogOverlay: n17,
  light_active_ModalOverlay: n17,
  light_orange_alt1_SheetOverlay: n17,
  light_orange_alt1_DialogOverlay: n17,
  light_orange_alt1_ModalOverlay: n17,
  light_orange_alt2_SheetOverlay: n17,
  light_orange_alt2_DialogOverlay: n17,
  light_orange_alt2_ModalOverlay: n17,
  light_orange_active_SheetOverlay: n17,
  light_orange_active_DialogOverlay: n17,
  light_orange_active_ModalOverlay: n17,
  light_yellow_alt1_SheetOverlay: n17,
  light_yellow_alt1_DialogOverlay: n17,
  light_yellow_alt1_ModalOverlay: n17,
  light_yellow_alt2_SheetOverlay: n17,
  light_yellow_alt2_DialogOverlay: n17,
  light_yellow_alt2_ModalOverlay: n17,
  light_yellow_active_SheetOverlay: n17,
  light_yellow_active_DialogOverlay: n17,
  light_yellow_active_ModalOverlay: n17,
  light_green_alt1_SheetOverlay: n17,
  light_green_alt1_DialogOverlay: n17,
  light_green_alt1_ModalOverlay: n17,
  light_green_alt2_SheetOverlay: n17,
  light_green_alt2_DialogOverlay: n17,
  light_green_alt2_ModalOverlay: n17,
  light_green_active_SheetOverlay: n17,
  light_green_active_DialogOverlay: n17,
  light_green_active_ModalOverlay: n17,
  light_blue_alt1_SheetOverlay: n17,
  light_blue_alt1_DialogOverlay: n17,
  light_blue_alt1_ModalOverlay: n17,
  light_blue_alt2_SheetOverlay: n17,
  light_blue_alt2_DialogOverlay: n17,
  light_blue_alt2_ModalOverlay: n17,
  light_blue_active_SheetOverlay: n17,
  light_blue_active_DialogOverlay: n17,
  light_blue_active_ModalOverlay: n17,
  light_purple_alt1_SheetOverlay: n17,
  light_purple_alt1_DialogOverlay: n17,
  light_purple_alt1_ModalOverlay: n17,
  light_purple_alt2_SheetOverlay: n17,
  light_purple_alt2_DialogOverlay: n17,
  light_purple_alt2_ModalOverlay: n17,
  light_purple_active_SheetOverlay: n17,
  light_purple_active_DialogOverlay: n17,
  light_purple_active_ModalOverlay: n17,
  light_pink_alt1_SheetOverlay: n17,
  light_pink_alt1_DialogOverlay: n17,
  light_pink_alt1_ModalOverlay: n17,
  light_pink_alt2_SheetOverlay: n17,
  light_pink_alt2_DialogOverlay: n17,
  light_pink_alt2_ModalOverlay: n17,
  light_pink_active_SheetOverlay: n17,
  light_pink_active_DialogOverlay: n17,
  light_pink_active_ModalOverlay: n17,
  light_red_alt1_SheetOverlay: n17,
  light_red_alt1_DialogOverlay: n17,
  light_red_alt1_ModalOverlay: n17,
  light_red_alt2_SheetOverlay: n17,
  light_red_alt2_DialogOverlay: n17,
  light_red_alt2_ModalOverlay: n17,
  light_red_active_SheetOverlay: n17,
  light_red_active_DialogOverlay: n17,
  light_red_active_ModalOverlay: n17,
  dark_SheetOverlay: n18,
  dark_DialogOverlay: n18,
  dark_ModalOverlay: n18,
  dark_orange_SheetOverlay: n18,
  dark_orange_DialogOverlay: n18,
  dark_orange_ModalOverlay: n18,
  dark_yellow_SheetOverlay: n18,
  dark_yellow_DialogOverlay: n18,
  dark_yellow_ModalOverlay: n18,
  dark_green_SheetOverlay: n18,
  dark_green_DialogOverlay: n18,
  dark_green_ModalOverlay: n18,
  dark_blue_SheetOverlay: n18,
  dark_blue_DialogOverlay: n18,
  dark_blue_ModalOverlay: n18,
  dark_purple_SheetOverlay: n18,
  dark_purple_DialogOverlay: n18,
  dark_purple_ModalOverlay: n18,
  dark_pink_SheetOverlay: n18,
  dark_pink_DialogOverlay: n18,
  dark_pink_ModalOverlay: n18,
  dark_red_SheetOverlay: n18,
  dark_red_DialogOverlay: n18,
  dark_red_ModalOverlay: n18,
  dark_alt1_SheetOverlay: n18,
  dark_alt1_DialogOverlay: n18,
  dark_alt1_ModalOverlay: n18,
  dark_alt2_SheetOverlay: n18,
  dark_alt2_DialogOverlay: n18,
  dark_alt2_ModalOverlay: n18,
  dark_active_SheetOverlay: n18,
  dark_active_DialogOverlay: n18,
  dark_active_ModalOverlay: n18,
  dark_orange_alt1_SheetOverlay: n18,
  dark_orange_alt1_DialogOverlay: n18,
  dark_orange_alt1_ModalOverlay: n18,
  dark_orange_alt2_SheetOverlay: n18,
  dark_orange_alt2_DialogOverlay: n18,
  dark_orange_alt2_ModalOverlay: n18,
  dark_orange_active_SheetOverlay: n18,
  dark_orange_active_DialogOverlay: n18,
  dark_orange_active_ModalOverlay: n18,
  dark_yellow_alt1_SheetOverlay: n18,
  dark_yellow_alt1_DialogOverlay: n18,
  dark_yellow_alt1_ModalOverlay: n18,
  dark_yellow_alt2_SheetOverlay: n18,
  dark_yellow_alt2_DialogOverlay: n18,
  dark_yellow_alt2_ModalOverlay: n18,
  dark_yellow_active_SheetOverlay: n18,
  dark_yellow_active_DialogOverlay: n18,
  dark_yellow_active_ModalOverlay: n18,
  dark_green_alt1_SheetOverlay: n18,
  dark_green_alt1_DialogOverlay: n18,
  dark_green_alt1_ModalOverlay: n18,
  dark_green_alt2_SheetOverlay: n18,
  dark_green_alt2_DialogOverlay: n18,
  dark_green_alt2_ModalOverlay: n18,
  dark_green_active_SheetOverlay: n18,
  dark_green_active_DialogOverlay: n18,
  dark_green_active_ModalOverlay: n18,
  dark_blue_alt1_SheetOverlay: n18,
  dark_blue_alt1_DialogOverlay: n18,
  dark_blue_alt1_ModalOverlay: n18,
  dark_blue_alt2_SheetOverlay: n18,
  dark_blue_alt2_DialogOverlay: n18,
  dark_blue_alt2_ModalOverlay: n18,
  dark_blue_active_SheetOverlay: n18,
  dark_blue_active_DialogOverlay: n18,
  dark_blue_active_ModalOverlay: n18,
  dark_purple_alt1_SheetOverlay: n18,
  dark_purple_alt1_DialogOverlay: n18,
  dark_purple_alt1_ModalOverlay: n18,
  dark_purple_alt2_SheetOverlay: n18,
  dark_purple_alt2_DialogOverlay: n18,
  dark_purple_alt2_ModalOverlay: n18,
  dark_purple_active_SheetOverlay: n18,
  dark_purple_active_DialogOverlay: n18,
  dark_purple_active_ModalOverlay: n18,
  dark_pink_alt1_SheetOverlay: n18,
  dark_pink_alt1_DialogOverlay: n18,
  dark_pink_alt1_ModalOverlay: n18,
  dark_pink_alt2_SheetOverlay: n18,
  dark_pink_alt2_DialogOverlay: n18,
  dark_pink_alt2_ModalOverlay: n18,
  dark_pink_active_SheetOverlay: n18,
  dark_pink_active_DialogOverlay: n18,
  dark_pink_active_ModalOverlay: n18,
  dark_red_alt1_SheetOverlay: n18,
  dark_red_alt1_DialogOverlay: n18,
  dark_red_alt1_ModalOverlay: n18,
  dark_red_alt2_SheetOverlay: n18,
  dark_red_alt2_DialogOverlay: n18,
  dark_red_alt2_ModalOverlay: n18,
  dark_red_active_SheetOverlay: n18,
  dark_red_active_DialogOverlay: n18,
  dark_red_active_ModalOverlay: n18,
  light_alt1: n19,
  light_alt2: n20,
  light_active: n21,
  dark_alt1: n22,
  dark_alt2: n23,
  dark_active: n24,
  light_orange_alt1: n25,
  light_orange_alt2: n26,
  light_orange_active: n27,
  light_yellow_alt1: n28,
  light_yellow_alt2: n29,
  light_yellow_active: n30,
  light_green_alt1: n31,
  light_green_alt2: n32,
  light_green_active: n33,
  light_blue_alt1: n34,
  light_blue_alt2: n35,
  light_blue_active: n36,
  light_purple_alt1: n37,
  light_purple_alt2: n38,
  light_purple_active: n39,
  light_pink_alt1: n40,
  light_pink_alt2: n41,
  light_pink_active: n42,
  light_red_alt1: n43,
  light_red_alt2: n44,
  light_red_active: n45,
  dark_orange_alt1: n46,
  dark_orange_alt2: n47,
  dark_orange_active: n48,
  dark_yellow_alt1: n49,
  dark_yellow_alt2: n50,
  dark_yellow_active: n51,
  dark_green_alt1: n52,
  dark_green_alt2: n53,
  dark_green_active: n54,
  dark_blue_alt1: n55,
  dark_blue_alt2: n56,
  dark_blue_active: n57,
  dark_purple_alt1: n58,
  dark_purple_alt2: n59,
  dark_purple_active: n60,
  dark_pink_alt1: n61,
  dark_pink_alt2: n62,
  dark_pink_active: n63,
  dark_red_alt1: n64,
  dark_red_alt2: n65,
  dark_red_active: n66,
  light_ListItem: n67,
  light_Card: n68,
  light_DrawerFrame: n68,
  light_Progress: n68,
  light_TooltipArrow: n68,
  light_Button: n69,
  light_Checkbox: n70,
  light_RadioGroupItem: n70,
  light_Input: n70,
  light_TextArea: n70,
  light_Switch: n71,
  light_TooltipContent: n71,
  light_SliderTrack: n71,
  light_SwitchThumb: n72,
  light_SliderTrackActive: n73,
  light_SliderThumb: n74,
  light_Tooltip: n74,
  light_ProgressIndicator: n74,
  dark_ListItem: n75,
  dark_Card: n76,
  dark_DrawerFrame: n76,
  dark_Progress: n76,
  dark_TooltipArrow: n76,
  dark_Button: n77,
  dark_Checkbox: n78,
  dark_RadioGroupItem: n78,
  dark_Input: n78,
  dark_TextArea: n78,
  dark_Switch: n79,
  dark_TooltipContent: n79,
  dark_SliderTrack: n79,
  dark_SwitchThumb: n80,
  dark_SliderTrackActive: n81,
  dark_SliderThumb: n82,
  dark_Tooltip: n82,
  dark_ProgressIndicator: n82,
  light_orange_ListItem: n83,
  light_orange_Card: n84,
  light_orange_DrawerFrame: n84,
  light_orange_Progress: n84,
  light_orange_TooltipArrow: n84,
  light_orange_Button: n85,
  light_orange_Checkbox: n86,
  light_orange_RadioGroupItem: n86,
  light_orange_Input: n86,
  light_orange_TextArea: n86,
  light_orange_Switch: n87,
  light_orange_TooltipContent: n87,
  light_orange_SliderTrack: n87,
  light_orange_SwitchThumb: n88,
  light_orange_SliderTrackActive: n89,
  light_orange_SliderThumb: n90,
  light_orange_Tooltip: n90,
  light_orange_ProgressIndicator: n90,
  light_yellow_ListItem: n91,
  light_yellow_Card: n92,
  light_yellow_DrawerFrame: n92,
  light_yellow_Progress: n92,
  light_yellow_TooltipArrow: n92,
  light_yellow_Button: n93,
  light_yellow_Checkbox: n94,
  light_yellow_RadioGroupItem: n94,
  light_yellow_Input: n94,
  light_yellow_TextArea: n94,
  light_yellow_Switch: n95,
  light_yellow_TooltipContent: n95,
  light_yellow_SliderTrack: n95,
  light_yellow_SwitchThumb: n96,
  light_yellow_SliderTrackActive: n97,
  light_yellow_SliderThumb: n98,
  light_yellow_Tooltip: n98,
  light_yellow_ProgressIndicator: n98,
  light_green_ListItem: n99,
  light_green_Card: n100,
  light_green_DrawerFrame: n100,
  light_green_Progress: n100,
  light_green_TooltipArrow: n100,
  light_green_Button: n101,
  light_green_Checkbox: n102,
  light_green_RadioGroupItem: n102,
  light_green_Input: n102,
  light_green_TextArea: n102,
  light_green_Switch: n103,
  light_green_TooltipContent: n103,
  light_green_SliderTrack: n103,
  light_green_SwitchThumb: n104,
  light_green_SliderTrackActive: n105,
  light_green_SliderThumb: n106,
  light_green_Tooltip: n106,
  light_green_ProgressIndicator: n106,
  light_blue_ListItem: n107,
  light_blue_Card: n108,
  light_blue_DrawerFrame: n108,
  light_blue_Progress: n108,
  light_blue_TooltipArrow: n108,
  light_blue_Button: n109,
  light_blue_Checkbox: n110,
  light_blue_RadioGroupItem: n110,
  light_blue_Input: n110,
  light_blue_TextArea: n110,
  light_blue_Switch: n111,
  light_blue_TooltipContent: n111,
  light_blue_SliderTrack: n111,
  light_blue_SwitchThumb: n112,
  light_blue_SliderTrackActive: n113,
  light_blue_SliderThumb: n114,
  light_blue_Tooltip: n114,
  light_blue_ProgressIndicator: n114,
  light_purple_ListItem: n115,
  light_purple_Card: n116,
  light_purple_DrawerFrame: n116,
  light_purple_Progress: n116,
  light_purple_TooltipArrow: n116,
  light_purple_Button: n117,
  light_purple_Checkbox: n118,
  light_purple_RadioGroupItem: n118,
  light_purple_Input: n118,
  light_purple_TextArea: n118,
  light_purple_Switch: n119,
  light_purple_TooltipContent: n119,
  light_purple_SliderTrack: n119,
  light_purple_SwitchThumb: n120,
  light_purple_SliderTrackActive: n121,
  light_purple_SliderThumb: n122,
  light_purple_Tooltip: n122,
  light_purple_ProgressIndicator: n122,
  light_pink_ListItem: n123,
  light_pink_Card: n124,
  light_pink_DrawerFrame: n124,
  light_pink_Progress: n124,
  light_pink_TooltipArrow: n124,
  light_pink_Button: n125,
  light_pink_Checkbox: n126,
  light_pink_RadioGroupItem: n126,
  light_pink_Input: n126,
  light_pink_TextArea: n126,
  light_pink_Switch: n127,
  light_pink_TooltipContent: n127,
  light_pink_SliderTrack: n127,
  light_pink_SwitchThumb: n128,
  light_pink_SliderTrackActive: n129,
  light_pink_SliderThumb: n130,
  light_pink_Tooltip: n130,
  light_pink_ProgressIndicator: n130,
  light_red_ListItem: n131,
  light_red_Card: n132,
  light_red_DrawerFrame: n132,
  light_red_Progress: n132,
  light_red_TooltipArrow: n132,
  light_red_Button: n133,
  light_red_Checkbox: n134,
  light_red_RadioGroupItem: n134,
  light_red_Input: n134,
  light_red_TextArea: n134,
  light_red_Switch: n135,
  light_red_TooltipContent: n135,
  light_red_SliderTrack: n135,
  light_red_SwitchThumb: n136,
  light_red_SliderTrackActive: n137,
  light_red_SliderThumb: n138,
  light_red_Tooltip: n138,
  light_red_ProgressIndicator: n138,
  dark_orange_ListItem: n139,
  dark_orange_Card: n140,
  dark_orange_DrawerFrame: n140,
  dark_orange_Progress: n140,
  dark_orange_TooltipArrow: n140,
  dark_orange_Button: n141,
  dark_orange_Checkbox: n142,
  dark_orange_RadioGroupItem: n142,
  dark_orange_Input: n142,
  dark_orange_TextArea: n142,
  dark_orange_Switch: n143,
  dark_orange_TooltipContent: n143,
  dark_orange_SliderTrack: n143,
  dark_orange_SwitchThumb: n144,
  dark_orange_SliderTrackActive: n145,
  dark_orange_SliderThumb: n146,
  dark_orange_Tooltip: n146,
  dark_orange_ProgressIndicator: n146,
  dark_yellow_ListItem: n147,
  dark_yellow_Card: n148,
  dark_yellow_DrawerFrame: n148,
  dark_yellow_Progress: n148,
  dark_yellow_TooltipArrow: n148,
  dark_yellow_Button: n149,
  dark_yellow_Checkbox: n150,
  dark_yellow_RadioGroupItem: n150,
  dark_yellow_Input: n150,
  dark_yellow_TextArea: n150,
  dark_yellow_Switch: n151,
  dark_yellow_TooltipContent: n151,
  dark_yellow_SliderTrack: n151,
  dark_yellow_SwitchThumb: n152,
  dark_yellow_SliderTrackActive: n153,
  dark_yellow_SliderThumb: n154,
  dark_yellow_Tooltip: n154,
  dark_yellow_ProgressIndicator: n154,
  dark_green_ListItem: n155,
  dark_green_Card: n156,
  dark_green_DrawerFrame: n156,
  dark_green_Progress: n156,
  dark_green_TooltipArrow: n156,
  dark_green_Button: n157,
  dark_green_Checkbox: n158,
  dark_green_RadioGroupItem: n158,
  dark_green_Input: n158,
  dark_green_TextArea: n158,
  dark_green_Switch: n159,
  dark_green_TooltipContent: n159,
  dark_green_SliderTrack: n159,
  dark_green_SwitchThumb: n160,
  dark_green_SliderTrackActive: n161,
  dark_green_SliderThumb: n162,
  dark_green_Tooltip: n162,
  dark_green_ProgressIndicator: n162,
  dark_blue_ListItem: n163,
  dark_blue_Card: n164,
  dark_blue_DrawerFrame: n164,
  dark_blue_Progress: n164,
  dark_blue_TooltipArrow: n164,
  dark_blue_Button: n165,
  dark_blue_Checkbox: n166,
  dark_blue_RadioGroupItem: n166,
  dark_blue_Input: n166,
  dark_blue_TextArea: n166,
  dark_blue_Switch: n167,
  dark_blue_TooltipContent: n167,
  dark_blue_SliderTrack: n167,
  dark_blue_SwitchThumb: n168,
  dark_blue_SliderTrackActive: n169,
  dark_blue_SliderThumb: n170,
  dark_blue_Tooltip: n170,
  dark_blue_ProgressIndicator: n170,
  dark_purple_ListItem: n171,
  dark_purple_Card: n172,
  dark_purple_DrawerFrame: n172,
  dark_purple_Progress: n172,
  dark_purple_TooltipArrow: n172,
  dark_purple_Button: n173,
  dark_purple_Checkbox: n174,
  dark_purple_RadioGroupItem: n174,
  dark_purple_Input: n174,
  dark_purple_TextArea: n174,
  dark_purple_Switch: n175,
  dark_purple_TooltipContent: n175,
  dark_purple_SliderTrack: n175,
  dark_purple_SwitchThumb: n176,
  dark_purple_SliderTrackActive: n177,
  dark_purple_SliderThumb: n178,
  dark_purple_Tooltip: n178,
  dark_purple_ProgressIndicator: n178,
  dark_pink_ListItem: n179,
  dark_pink_Card: n180,
  dark_pink_DrawerFrame: n180,
  dark_pink_Progress: n180,
  dark_pink_TooltipArrow: n180,
  dark_pink_Button: n181,
  dark_pink_Checkbox: n182,
  dark_pink_RadioGroupItem: n182,
  dark_pink_Input: n182,
  dark_pink_TextArea: n182,
  dark_pink_Switch: n183,
  dark_pink_TooltipContent: n183,
  dark_pink_SliderTrack: n183,
  dark_pink_SwitchThumb: n184,
  dark_pink_SliderTrackActive: n185,
  dark_pink_SliderThumb: n186,
  dark_pink_Tooltip: n186,
  dark_pink_ProgressIndicator: n186,
  dark_red_ListItem: n187,
  dark_red_Card: n188,
  dark_red_DrawerFrame: n188,
  dark_red_Progress: n188,
  dark_red_TooltipArrow: n188,
  dark_red_Button: n189,
  dark_red_Checkbox: n190,
  dark_red_RadioGroupItem: n190,
  dark_red_Input: n190,
  dark_red_TextArea: n190,
  dark_red_Switch: n191,
  dark_red_TooltipContent: n191,
  dark_red_SliderTrack: n191,
  dark_red_SwitchThumb: n192,
  dark_red_SliderTrackActive: n193,
  dark_red_SliderThumb: n194,
  dark_red_Tooltip: n194,
  dark_red_ProgressIndicator: n194,
  light_alt1_ListItem: n195,
  light_alt1_Card: n196,
  light_alt1_DrawerFrame: n196,
  light_alt1_Progress: n196,
  light_alt1_TooltipArrow: n196,
  light_alt1_Button: n197,
  light_alt1_Checkbox: n198,
  light_alt1_RadioGroupItem: n198,
  light_alt1_Input: n198,
  light_alt1_TextArea: n198,
  light_alt1_Switch: n199,
  light_alt1_TooltipContent: n199,
  light_alt1_SliderTrack: n199,
  light_alt1_SwitchThumb: n200,
  light_alt1_SliderTrackActive: n201,
  light_alt1_SliderThumb: n202,
  light_alt1_Tooltip: n202,
  light_alt1_ProgressIndicator: n202,
  light_alt2_ListItem: n203,
  light_alt2_Card: n204,
  light_alt2_DrawerFrame: n204,
  light_alt2_Progress: n204,
  light_alt2_TooltipArrow: n204,
  light_alt2_Button: n205,
  light_alt2_Checkbox: n206,
  light_alt2_RadioGroupItem: n206,
  light_alt2_Input: n206,
  light_alt2_TextArea: n206,
  light_alt2_Switch: n207,
  light_alt2_TooltipContent: n207,
  light_alt2_SliderTrack: n207,
  light_alt2_SwitchThumb: n208,
  light_alt2_SliderTrackActive: n209,
  light_alt2_SliderThumb: n210,
  light_alt2_Tooltip: n210,
  light_alt2_ProgressIndicator: n210,
  light_active_ListItem: n211,
  light_active_Card: n212,
  light_active_DrawerFrame: n212,
  light_active_Progress: n212,
  light_active_TooltipArrow: n212,
  light_active_Button: n213,
  light_active_Checkbox: n214,
  light_active_RadioGroupItem: n214,
  light_active_Input: n214,
  light_active_TextArea: n214,
  light_active_Switch: n215,
  light_active_TooltipContent: n215,
  light_active_SliderTrack: n215,
  light_active_SwitchThumb: n216,
  light_active_SliderTrackActive: n217,
  light_active_SliderThumb: n218,
  light_active_Tooltip: n218,
  light_active_ProgressIndicator: n218,
  dark_alt1_ListItem: n219,
  dark_alt1_Card: n220,
  dark_alt1_DrawerFrame: n220,
  dark_alt1_Progress: n220,
  dark_alt1_TooltipArrow: n220,
  dark_alt1_Button: n221,
  dark_alt1_Checkbox: n222,
  dark_alt1_RadioGroupItem: n222,
  dark_alt1_Input: n222,
  dark_alt1_TextArea: n222,
  dark_alt1_Switch: n223,
  dark_alt1_TooltipContent: n223,
  dark_alt1_SliderTrack: n223,
  dark_alt1_SwitchThumb: n224,
  dark_alt1_SliderTrackActive: n225,
  dark_alt1_SliderThumb: n226,
  dark_alt1_Tooltip: n226,
  dark_alt1_ProgressIndicator: n226,
  dark_alt2_ListItem: n227,
  dark_alt2_Card: n228,
  dark_alt2_DrawerFrame: n228,
  dark_alt2_Progress: n228,
  dark_alt2_TooltipArrow: n228,
  dark_alt2_Button: n229,
  dark_alt2_Checkbox: n230,
  dark_alt2_RadioGroupItem: n230,
  dark_alt2_Input: n230,
  dark_alt2_TextArea: n230,
  dark_alt2_Switch: n231,
  dark_alt2_TooltipContent: n231,
  dark_alt2_SliderTrack: n231,
  dark_alt2_SwitchThumb: n232,
  dark_alt2_SliderTrackActive: n233,
  dark_alt2_SliderThumb: n234,
  dark_alt2_Tooltip: n234,
  dark_alt2_ProgressIndicator: n234,
  dark_active_ListItem: n235,
  dark_active_Card: n236,
  dark_active_DrawerFrame: n236,
  dark_active_Progress: n236,
  dark_active_TooltipArrow: n236,
  dark_active_Button: n237,
  dark_active_Checkbox: n238,
  dark_active_RadioGroupItem: n238,
  dark_active_Input: n238,
  dark_active_TextArea: n238,
  dark_active_Switch: n239,
  dark_active_TooltipContent: n239,
  dark_active_SliderTrack: n239,
  dark_active_SwitchThumb: n240,
  dark_active_SliderTrackActive: n241,
  dark_active_SliderThumb: n242,
  dark_active_Tooltip: n242,
  dark_active_ProgressIndicator: n242,
  light_orange_alt1_ListItem: n243,
  light_orange_alt1_Card: n244,
  light_orange_alt1_DrawerFrame: n244,
  light_orange_alt1_Progress: n244,
  light_orange_alt1_TooltipArrow: n244,
  light_orange_alt1_Button: n245,
  light_orange_alt1_Checkbox: n246,
  light_orange_alt1_RadioGroupItem: n246,
  light_orange_alt1_Input: n246,
  light_orange_alt1_TextArea: n246,
  light_orange_alt1_Switch: n247,
  light_orange_alt1_TooltipContent: n247,
  light_orange_alt1_SliderTrack: n247,
  light_orange_alt1_SwitchThumb: n248,
  light_orange_alt1_SliderTrackActive: n249,
  light_orange_alt1_SliderThumb: n250,
  light_orange_alt1_Tooltip: n250,
  light_orange_alt1_ProgressIndicator: n250,
  light_orange_alt2_ListItem: n251,
  light_orange_alt2_Card: n252,
  light_orange_alt2_DrawerFrame: n252,
  light_orange_alt2_Progress: n252,
  light_orange_alt2_TooltipArrow: n252,
  light_orange_alt2_Button: n253,
  light_orange_alt2_Checkbox: n254,
  light_orange_alt2_RadioGroupItem: n254,
  light_orange_alt2_Input: n254,
  light_orange_alt2_TextArea: n254,
  light_orange_alt2_Switch: n255,
  light_orange_alt2_TooltipContent: n255,
  light_orange_alt2_SliderTrack: n255,
  light_orange_alt2_SwitchThumb: n256,
  light_orange_alt2_SliderTrackActive: n257,
  light_orange_alt2_SliderThumb: n258,
  light_orange_alt2_Tooltip: n258,
  light_orange_alt2_ProgressIndicator: n258,
  light_orange_active_ListItem: n259,
  light_orange_active_Card: n260,
  light_orange_active_DrawerFrame: n260,
  light_orange_active_Progress: n260,
  light_orange_active_TooltipArrow: n260,
  light_orange_active_Button: n261,
  light_orange_active_Checkbox: n262,
  light_orange_active_RadioGroupItem: n262,
  light_orange_active_Input: n262,
  light_orange_active_TextArea: n262,
  light_orange_active_Switch: n263,
  light_orange_active_TooltipContent: n263,
  light_orange_active_SliderTrack: n263,
  light_orange_active_SwitchThumb: n264,
  light_orange_active_SliderTrackActive: n265,
  light_orange_active_SliderThumb: n266,
  light_orange_active_Tooltip: n266,
  light_orange_active_ProgressIndicator: n266,
  light_yellow_alt1_ListItem: n267,
  light_yellow_alt1_Card: n268,
  light_yellow_alt1_DrawerFrame: n268,
  light_yellow_alt1_Progress: n268,
  light_yellow_alt1_TooltipArrow: n268,
  light_yellow_alt1_Button: n269,
  light_yellow_alt1_Checkbox: n270,
  light_yellow_alt1_RadioGroupItem: n270,
  light_yellow_alt1_Input: n270,
  light_yellow_alt1_TextArea: n270,
  light_yellow_alt1_Switch: n271,
  light_yellow_alt1_TooltipContent: n271,
  light_yellow_alt1_SliderTrack: n271,
  light_yellow_alt1_SwitchThumb: n272,
  light_yellow_alt1_SliderTrackActive: n273,
  light_yellow_alt1_SliderThumb: n274,
  light_yellow_alt1_Tooltip: n274,
  light_yellow_alt1_ProgressIndicator: n274,
  light_yellow_alt2_ListItem: n275,
  light_yellow_alt2_Card: n276,
  light_yellow_alt2_DrawerFrame: n276,
  light_yellow_alt2_Progress: n276,
  light_yellow_alt2_TooltipArrow: n276,
  light_yellow_alt2_Button: n277,
  light_yellow_alt2_Checkbox: n278,
  light_yellow_alt2_RadioGroupItem: n278,
  light_yellow_alt2_Input: n278,
  light_yellow_alt2_TextArea: n278,
  light_yellow_alt2_Switch: n279,
  light_yellow_alt2_TooltipContent: n279,
  light_yellow_alt2_SliderTrack: n279,
  light_yellow_alt2_SwitchThumb: n280,
  light_yellow_alt2_SliderTrackActive: n281,
  light_yellow_alt2_SliderThumb: n282,
  light_yellow_alt2_Tooltip: n282,
  light_yellow_alt2_ProgressIndicator: n282,
  light_yellow_active_ListItem: n283,
  light_yellow_active_Card: n284,
  light_yellow_active_DrawerFrame: n284,
  light_yellow_active_Progress: n284,
  light_yellow_active_TooltipArrow: n284,
  light_yellow_active_Button: n285,
  light_yellow_active_Checkbox: n286,
  light_yellow_active_RadioGroupItem: n286,
  light_yellow_active_Input: n286,
  light_yellow_active_TextArea: n286,
  light_yellow_active_Switch: n287,
  light_yellow_active_TooltipContent: n287,
  light_yellow_active_SliderTrack: n287,
  light_yellow_active_SwitchThumb: n288,
  light_yellow_active_SliderTrackActive: n289,
  light_yellow_active_SliderThumb: n290,
  light_yellow_active_Tooltip: n290,
  light_yellow_active_ProgressIndicator: n290,
  light_green_alt1_ListItem: n291,
  light_green_alt1_Card: n292,
  light_green_alt1_DrawerFrame: n292,
  light_green_alt1_Progress: n292,
  light_green_alt1_TooltipArrow: n292,
  light_green_alt1_Button: n293,
  light_green_alt1_Checkbox: n294,
  light_green_alt1_RadioGroupItem: n294,
  light_green_alt1_Input: n294,
  light_green_alt1_TextArea: n294,
  light_green_alt1_Switch: n295,
  light_green_alt1_TooltipContent: n295,
  light_green_alt1_SliderTrack: n295,
  light_green_alt1_SwitchThumb: n296,
  light_green_alt1_SliderTrackActive: n297,
  light_green_alt1_SliderThumb: n298,
  light_green_alt1_Tooltip: n298,
  light_green_alt1_ProgressIndicator: n298,
  light_green_alt2_ListItem: n299,
  light_green_alt2_Card: n300,
  light_green_alt2_DrawerFrame: n300,
  light_green_alt2_Progress: n300,
  light_green_alt2_TooltipArrow: n300,
  light_green_alt2_Button: n301,
  light_green_alt2_Checkbox: n302,
  light_green_alt2_RadioGroupItem: n302,
  light_green_alt2_Input: n302,
  light_green_alt2_TextArea: n302,
  light_green_alt2_Switch: n303,
  light_green_alt2_TooltipContent: n303,
  light_green_alt2_SliderTrack: n303,
  light_green_alt2_SwitchThumb: n304,
  light_green_alt2_SliderTrackActive: n305,
  light_green_alt2_SliderThumb: n306,
  light_green_alt2_Tooltip: n306,
  light_green_alt2_ProgressIndicator: n306,
  light_green_active_ListItem: n307,
  light_green_active_Card: n308,
  light_green_active_DrawerFrame: n308,
  light_green_active_Progress: n308,
  light_green_active_TooltipArrow: n308,
  light_green_active_Button: n309,
  light_green_active_Checkbox: n310,
  light_green_active_RadioGroupItem: n310,
  light_green_active_Input: n310,
  light_green_active_TextArea: n310,
  light_green_active_Switch: n311,
  light_green_active_TooltipContent: n311,
  light_green_active_SliderTrack: n311,
  light_green_active_SwitchThumb: n312,
  light_green_active_SliderTrackActive: n313,
  light_green_active_SliderThumb: n314,
  light_green_active_Tooltip: n314,
  light_green_active_ProgressIndicator: n314,
  light_blue_alt1_ListItem: n315,
  light_blue_alt1_Card: n316,
  light_blue_alt1_DrawerFrame: n316,
  light_blue_alt1_Progress: n316,
  light_blue_alt1_TooltipArrow: n316,
  light_blue_alt1_Button: n317,
  light_blue_alt1_Checkbox: n318,
  light_blue_alt1_RadioGroupItem: n318,
  light_blue_alt1_Input: n318,
  light_blue_alt1_TextArea: n318,
  light_blue_alt1_Switch: n319,
  light_blue_alt1_TooltipContent: n319,
  light_blue_alt1_SliderTrack: n319,
  light_blue_alt1_SwitchThumb: n320,
  light_blue_alt1_SliderTrackActive: n321,
  light_blue_alt1_SliderThumb: n322,
  light_blue_alt1_Tooltip: n322,
  light_blue_alt1_ProgressIndicator: n322,
  light_blue_alt2_ListItem: n323,
  light_blue_alt2_Card: n324,
  light_blue_alt2_DrawerFrame: n324,
  light_blue_alt2_Progress: n324,
  light_blue_alt2_TooltipArrow: n324,
  light_blue_alt2_Button: n325,
  light_blue_alt2_Checkbox: n326,
  light_blue_alt2_RadioGroupItem: n326,
  light_blue_alt2_Input: n326,
  light_blue_alt2_TextArea: n326,
  light_blue_alt2_Switch: n327,
  light_blue_alt2_TooltipContent: n327,
  light_blue_alt2_SliderTrack: n327,
  light_blue_alt2_SwitchThumb: n328,
  light_blue_alt2_SliderTrackActive: n329,
  light_blue_alt2_SliderThumb: n330,
  light_blue_alt2_Tooltip: n330,
  light_blue_alt2_ProgressIndicator: n330,
  light_blue_active_ListItem: n331,
  light_blue_active_Card: n332,
  light_blue_active_DrawerFrame: n332,
  light_blue_active_Progress: n332,
  light_blue_active_TooltipArrow: n332,
  light_blue_active_Button: n333,
  light_blue_active_Checkbox: n334,
  light_blue_active_RadioGroupItem: n334,
  light_blue_active_Input: n334,
  light_blue_active_TextArea: n334,
  light_blue_active_Switch: n335,
  light_blue_active_TooltipContent: n335,
  light_blue_active_SliderTrack: n335,
  light_blue_active_SwitchThumb: n336,
  light_blue_active_SliderTrackActive: n337,
  light_blue_active_SliderThumb: n338,
  light_blue_active_Tooltip: n338,
  light_blue_active_ProgressIndicator: n338,
  light_purple_alt1_ListItem: n339,
  light_purple_alt1_Card: n340,
  light_purple_alt1_DrawerFrame: n340,
  light_purple_alt1_Progress: n340,
  light_purple_alt1_TooltipArrow: n340,
  light_purple_alt1_Button: n341,
  light_purple_alt1_Checkbox: n342,
  light_purple_alt1_RadioGroupItem: n342,
  light_purple_alt1_Input: n342,
  light_purple_alt1_TextArea: n342,
  light_purple_alt1_Switch: n343,
  light_purple_alt1_TooltipContent: n343,
  light_purple_alt1_SliderTrack: n343,
  light_purple_alt1_SwitchThumb: n344,
  light_purple_alt1_SliderTrackActive: n345,
  light_purple_alt1_SliderThumb: n346,
  light_purple_alt1_Tooltip: n346,
  light_purple_alt1_ProgressIndicator: n346,
  light_purple_alt2_ListItem: n347,
  light_purple_alt2_Card: n348,
  light_purple_alt2_DrawerFrame: n348,
  light_purple_alt2_Progress: n348,
  light_purple_alt2_TooltipArrow: n348,
  light_purple_alt2_Button: n349,
  light_purple_alt2_Checkbox: n350,
  light_purple_alt2_RadioGroupItem: n350,
  light_purple_alt2_Input: n350,
  light_purple_alt2_TextArea: n350,
  light_purple_alt2_Switch: n351,
  light_purple_alt2_TooltipContent: n351,
  light_purple_alt2_SliderTrack: n351,
  light_purple_alt2_SwitchThumb: n352,
  light_purple_alt2_SliderTrackActive: n353,
  light_purple_alt2_SliderThumb: n354,
  light_purple_alt2_Tooltip: n354,
  light_purple_alt2_ProgressIndicator: n354,
  light_purple_active_ListItem: n355,
  light_purple_active_Card: n356,
  light_purple_active_DrawerFrame: n356,
  light_purple_active_Progress: n356,
  light_purple_active_TooltipArrow: n356,
  light_purple_active_Button: n357,
  light_purple_active_Checkbox: n358,
  light_purple_active_RadioGroupItem: n358,
  light_purple_active_Input: n358,
  light_purple_active_TextArea: n358,
  light_purple_active_Switch: n359,
  light_purple_active_TooltipContent: n359,
  light_purple_active_SliderTrack: n359,
  light_purple_active_SwitchThumb: n360,
  light_purple_active_SliderTrackActive: n361,
  light_purple_active_SliderThumb: n362,
  light_purple_active_Tooltip: n362,
  light_purple_active_ProgressIndicator: n362,
  light_pink_alt1_ListItem: n363,
  light_pink_alt1_Card: n364,
  light_pink_alt1_DrawerFrame: n364,
  light_pink_alt1_Progress: n364,
  light_pink_alt1_TooltipArrow: n364,
  light_pink_alt1_Button: n365,
  light_pink_alt1_Checkbox: n366,
  light_pink_alt1_RadioGroupItem: n366,
  light_pink_alt1_Input: n366,
  light_pink_alt1_TextArea: n366,
  light_pink_alt1_Switch: n367,
  light_pink_alt1_TooltipContent: n367,
  light_pink_alt1_SliderTrack: n367,
  light_pink_alt1_SwitchThumb: n368,
  light_pink_alt1_SliderTrackActive: n369,
  light_pink_alt1_SliderThumb: n370,
  light_pink_alt1_Tooltip: n370,
  light_pink_alt1_ProgressIndicator: n370,
  light_pink_alt2_ListItem: n371,
  light_pink_alt2_Card: n372,
  light_pink_alt2_DrawerFrame: n372,
  light_pink_alt2_Progress: n372,
  light_pink_alt2_TooltipArrow: n372,
  light_pink_alt2_Button: n373,
  light_pink_alt2_Checkbox: n374,
  light_pink_alt2_RadioGroupItem: n374,
  light_pink_alt2_Input: n374,
  light_pink_alt2_TextArea: n374,
  light_pink_alt2_Switch: n375,
  light_pink_alt2_TooltipContent: n375,
  light_pink_alt2_SliderTrack: n375,
  light_pink_alt2_SwitchThumb: n376,
  light_pink_alt2_SliderTrackActive: n377,
  light_pink_alt2_SliderThumb: n378,
  light_pink_alt2_Tooltip: n378,
  light_pink_alt2_ProgressIndicator: n378,
  light_pink_active_ListItem: n379,
  light_pink_active_Card: n380,
  light_pink_active_DrawerFrame: n380,
  light_pink_active_Progress: n380,
  light_pink_active_TooltipArrow: n380,
  light_pink_active_Button: n381,
  light_pink_active_Checkbox: n382,
  light_pink_active_RadioGroupItem: n382,
  light_pink_active_Input: n382,
  light_pink_active_TextArea: n382,
  light_pink_active_Switch: n383,
  light_pink_active_TooltipContent: n383,
  light_pink_active_SliderTrack: n383,
  light_pink_active_SwitchThumb: n384,
  light_pink_active_SliderTrackActive: n385,
  light_pink_active_SliderThumb: n386,
  light_pink_active_Tooltip: n386,
  light_pink_active_ProgressIndicator: n386,
  light_red_alt1_ListItem: n387,
  light_red_alt1_Card: n388,
  light_red_alt1_DrawerFrame: n388,
  light_red_alt1_Progress: n388,
  light_red_alt1_TooltipArrow: n388,
  light_red_alt1_Button: n389,
  light_red_alt1_Checkbox: n390,
  light_red_alt1_RadioGroupItem: n390,
  light_red_alt1_Input: n390,
  light_red_alt1_TextArea: n390,
  light_red_alt1_Switch: n391,
  light_red_alt1_TooltipContent: n391,
  light_red_alt1_SliderTrack: n391,
  light_red_alt1_SwitchThumb: n392,
  light_red_alt1_SliderTrackActive: n393,
  light_red_alt1_SliderThumb: n394,
  light_red_alt1_Tooltip: n394,
  light_red_alt1_ProgressIndicator: n394,
  light_red_alt2_ListItem: n395,
  light_red_alt2_Card: n396,
  light_red_alt2_DrawerFrame: n396,
  light_red_alt2_Progress: n396,
  light_red_alt2_TooltipArrow: n396,
  light_red_alt2_Button: n397,
  light_red_alt2_Checkbox: n398,
  light_red_alt2_RadioGroupItem: n398,
  light_red_alt2_Input: n398,
  light_red_alt2_TextArea: n398,
  light_red_alt2_Switch: n399,
  light_red_alt2_TooltipContent: n399,
  light_red_alt2_SliderTrack: n399,
  light_red_alt2_SwitchThumb: n400,
  light_red_alt2_SliderTrackActive: n401,
  light_red_alt2_SliderThumb: n402,
  light_red_alt2_Tooltip: n402,
  light_red_alt2_ProgressIndicator: n402,
  light_red_active_ListItem: n403,
  light_red_active_Card: n404,
  light_red_active_DrawerFrame: n404,
  light_red_active_Progress: n404,
  light_red_active_TooltipArrow: n404,
  light_red_active_Button: n405,
  light_red_active_Checkbox: n406,
  light_red_active_RadioGroupItem: n406,
  light_red_active_Input: n406,
  light_red_active_TextArea: n406,
  light_red_active_Switch: n407,
  light_red_active_TooltipContent: n407,
  light_red_active_SliderTrack: n407,
  light_red_active_SwitchThumb: n408,
  light_red_active_SliderTrackActive: n409,
  light_red_active_SliderThumb: n410,
  light_red_active_Tooltip: n410,
  light_red_active_ProgressIndicator: n410,
  dark_orange_alt1_ListItem: n411,
  dark_orange_alt1_Card: n412,
  dark_orange_alt1_DrawerFrame: n412,
  dark_orange_alt1_Progress: n412,
  dark_orange_alt1_TooltipArrow: n412,
  dark_orange_alt1_Button: n413,
  dark_orange_alt1_Checkbox: n414,
  dark_orange_alt1_RadioGroupItem: n414,
  dark_orange_alt1_Input: n414,
  dark_orange_alt1_TextArea: n414,
  dark_orange_alt1_Switch: n415,
  dark_orange_alt1_TooltipContent: n415,
  dark_orange_alt1_SliderTrack: n415,
  dark_orange_alt1_SwitchThumb: n416,
  dark_orange_alt1_SliderTrackActive: n417,
  dark_orange_alt1_SliderThumb: n418,
  dark_orange_alt1_Tooltip: n418,
  dark_orange_alt1_ProgressIndicator: n418,
  dark_orange_alt2_ListItem: n419,
  dark_orange_alt2_Card: n420,
  dark_orange_alt2_DrawerFrame: n420,
  dark_orange_alt2_Progress: n420,
  dark_orange_alt2_TooltipArrow: n420,
  dark_orange_alt2_Button: n421,
  dark_orange_alt2_Checkbox: n422,
  dark_orange_alt2_RadioGroupItem: n422,
  dark_orange_alt2_Input: n422,
  dark_orange_alt2_TextArea: n422,
  dark_orange_alt2_Switch: n423,
  dark_orange_alt2_TooltipContent: n423,
  dark_orange_alt2_SliderTrack: n423,
  dark_orange_alt2_SwitchThumb: n424,
  dark_orange_alt2_SliderTrackActive: n425,
  dark_orange_alt2_SliderThumb: n426,
  dark_orange_alt2_Tooltip: n426,
  dark_orange_alt2_ProgressIndicator: n426,
  dark_orange_active_ListItem: n427,
  dark_orange_active_Card: n428,
  dark_orange_active_DrawerFrame: n428,
  dark_orange_active_Progress: n428,
  dark_orange_active_TooltipArrow: n428,
  dark_orange_active_Button: n429,
  dark_orange_active_Checkbox: n430,
  dark_orange_active_RadioGroupItem: n430,
  dark_orange_active_Input: n430,
  dark_orange_active_TextArea: n430,
  dark_orange_active_Switch: n431,
  dark_orange_active_TooltipContent: n431,
  dark_orange_active_SliderTrack: n431,
  dark_orange_active_SwitchThumb: n432,
  dark_orange_active_SliderTrackActive: n433,
  dark_orange_active_SliderThumb: n434,
  dark_orange_active_Tooltip: n434,
  dark_orange_active_ProgressIndicator: n434,
  dark_yellow_alt1_ListItem: n435,
  dark_yellow_alt1_Card: n436,
  dark_yellow_alt1_DrawerFrame: n436,
  dark_yellow_alt1_Progress: n436,
  dark_yellow_alt1_TooltipArrow: n436,
  dark_yellow_alt1_Button: n437,
  dark_yellow_alt1_Checkbox: n438,
  dark_yellow_alt1_RadioGroupItem: n438,
  dark_yellow_alt1_Input: n438,
  dark_yellow_alt1_TextArea: n438,
  dark_yellow_alt1_Switch: n439,
  dark_yellow_alt1_TooltipContent: n439,
  dark_yellow_alt1_SliderTrack: n439,
  dark_yellow_alt1_SwitchThumb: n440,
  dark_yellow_alt1_SliderTrackActive: n441,
  dark_yellow_alt1_SliderThumb: n442,
  dark_yellow_alt1_Tooltip: n442,
  dark_yellow_alt1_ProgressIndicator: n442,
  dark_yellow_alt2_ListItem: n443,
  dark_yellow_alt2_Card: n444,
  dark_yellow_alt2_DrawerFrame: n444,
  dark_yellow_alt2_Progress: n444,
  dark_yellow_alt2_TooltipArrow: n444,
  dark_yellow_alt2_Button: n445,
  dark_yellow_alt2_Checkbox: n446,
  dark_yellow_alt2_RadioGroupItem: n446,
  dark_yellow_alt2_Input: n446,
  dark_yellow_alt2_TextArea: n446,
  dark_yellow_alt2_Switch: n447,
  dark_yellow_alt2_TooltipContent: n447,
  dark_yellow_alt2_SliderTrack: n447,
  dark_yellow_alt2_SwitchThumb: n448,
  dark_yellow_alt2_SliderTrackActive: n449,
  dark_yellow_alt2_SliderThumb: n450,
  dark_yellow_alt2_Tooltip: n450,
  dark_yellow_alt2_ProgressIndicator: n450,
  dark_yellow_active_ListItem: n451,
  dark_yellow_active_Card: n452,
  dark_yellow_active_DrawerFrame: n452,
  dark_yellow_active_Progress: n452,
  dark_yellow_active_TooltipArrow: n452,
  dark_yellow_active_Button: n453,
  dark_yellow_active_Checkbox: n454,
  dark_yellow_active_RadioGroupItem: n454,
  dark_yellow_active_Input: n454,
  dark_yellow_active_TextArea: n454,
  dark_yellow_active_Switch: n455,
  dark_yellow_active_TooltipContent: n455,
  dark_yellow_active_SliderTrack: n455,
  dark_yellow_active_SwitchThumb: n456,
  dark_yellow_active_SliderTrackActive: n457,
  dark_yellow_active_SliderThumb: n458,
  dark_yellow_active_Tooltip: n458,
  dark_yellow_active_ProgressIndicator: n458,
  dark_green_alt1_ListItem: n459,
  dark_green_alt1_Card: n460,
  dark_green_alt1_DrawerFrame: n460,
  dark_green_alt1_Progress: n460,
  dark_green_alt1_TooltipArrow: n460,
  dark_green_alt1_Button: n461,
  dark_green_alt1_Checkbox: n462,
  dark_green_alt1_RadioGroupItem: n462,
  dark_green_alt1_Input: n462,
  dark_green_alt1_TextArea: n462,
  dark_green_alt1_Switch: n463,
  dark_green_alt1_TooltipContent: n463,
  dark_green_alt1_SliderTrack: n463,
  dark_green_alt1_SwitchThumb: n464,
  dark_green_alt1_SliderTrackActive: n465,
  dark_green_alt1_SliderThumb: n466,
  dark_green_alt1_Tooltip: n466,
  dark_green_alt1_ProgressIndicator: n466,
  dark_green_alt2_ListItem: n467,
  dark_green_alt2_Card: n468,
  dark_green_alt2_DrawerFrame: n468,
  dark_green_alt2_Progress: n468,
  dark_green_alt2_TooltipArrow: n468,
  dark_green_alt2_Button: n469,
  dark_green_alt2_Checkbox: n470,
  dark_green_alt2_RadioGroupItem: n470,
  dark_green_alt2_Input: n470,
  dark_green_alt2_TextArea: n470,
  dark_green_alt2_Switch: n471,
  dark_green_alt2_TooltipContent: n471,
  dark_green_alt2_SliderTrack: n471,
  dark_green_alt2_SwitchThumb: n472,
  dark_green_alt2_SliderTrackActive: n473,
  dark_green_alt2_SliderThumb: n474,
  dark_green_alt2_Tooltip: n474,
  dark_green_alt2_ProgressIndicator: n474,
  dark_green_active_ListItem: n475,
  dark_green_active_Card: n476,
  dark_green_active_DrawerFrame: n476,
  dark_green_active_Progress: n476,
  dark_green_active_TooltipArrow: n476,
  dark_green_active_Button: n477,
  dark_green_active_Checkbox: n478,
  dark_green_active_RadioGroupItem: n478,
  dark_green_active_Input: n478,
  dark_green_active_TextArea: n478,
  dark_green_active_Switch: n479,
  dark_green_active_TooltipContent: n479,
  dark_green_active_SliderTrack: n479,
  dark_green_active_SwitchThumb: n480,
  dark_green_active_SliderTrackActive: n481,
  dark_green_active_SliderThumb: n482,
  dark_green_active_Tooltip: n482,
  dark_green_active_ProgressIndicator: n482,
  dark_blue_alt1_ListItem: n483,
  dark_blue_alt1_Card: n484,
  dark_blue_alt1_DrawerFrame: n484,
  dark_blue_alt1_Progress: n484,
  dark_blue_alt1_TooltipArrow: n484,
  dark_blue_alt1_Button: n485,
  dark_blue_alt1_Checkbox: n486,
  dark_blue_alt1_RadioGroupItem: n486,
  dark_blue_alt1_Input: n486,
  dark_blue_alt1_TextArea: n486,
  dark_blue_alt1_Switch: n487,
  dark_blue_alt1_TooltipContent: n487,
  dark_blue_alt1_SliderTrack: n487,
  dark_blue_alt1_SwitchThumb: n488,
  dark_blue_alt1_SliderTrackActive: n489,
  dark_blue_alt1_SliderThumb: n490,
  dark_blue_alt1_Tooltip: n490,
  dark_blue_alt1_ProgressIndicator: n490,
  dark_blue_alt2_ListItem: n491,
  dark_blue_alt2_Card: n492,
  dark_blue_alt2_DrawerFrame: n492,
  dark_blue_alt2_Progress: n492,
  dark_blue_alt2_TooltipArrow: n492,
  dark_blue_alt2_Button: n493,
  dark_blue_alt2_Checkbox: n494,
  dark_blue_alt2_RadioGroupItem: n494,
  dark_blue_alt2_Input: n494,
  dark_blue_alt2_TextArea: n494,
  dark_blue_alt2_Switch: n495,
  dark_blue_alt2_TooltipContent: n495,
  dark_blue_alt2_SliderTrack: n495,
  dark_blue_alt2_SwitchThumb: n496,
  dark_blue_alt2_SliderTrackActive: n497,
  dark_blue_alt2_SliderThumb: n498,
  dark_blue_alt2_Tooltip: n498,
  dark_blue_alt2_ProgressIndicator: n498,
  dark_blue_active_ListItem: n499,
  dark_blue_active_Card: n500,
  dark_blue_active_DrawerFrame: n500,
  dark_blue_active_Progress: n500,
  dark_blue_active_TooltipArrow: n500,
  dark_blue_active_Button: n501,
  dark_blue_active_Checkbox: n502,
  dark_blue_active_RadioGroupItem: n502,
  dark_blue_active_Input: n502,
  dark_blue_active_TextArea: n502,
  dark_blue_active_Switch: n503,
  dark_blue_active_TooltipContent: n503,
  dark_blue_active_SliderTrack: n503,
  dark_blue_active_SwitchThumb: n504,
  dark_blue_active_SliderTrackActive: n505,
  dark_blue_active_SliderThumb: n506,
  dark_blue_active_Tooltip: n506,
  dark_blue_active_ProgressIndicator: n506,
  dark_purple_alt1_ListItem: n507,
  dark_purple_alt1_Card: n508,
  dark_purple_alt1_DrawerFrame: n508,
  dark_purple_alt1_Progress: n508,
  dark_purple_alt1_TooltipArrow: n508,
  dark_purple_alt1_Button: n509,
  dark_purple_alt1_Checkbox: n510,
  dark_purple_alt1_RadioGroupItem: n510,
  dark_purple_alt1_Input: n510,
  dark_purple_alt1_TextArea: n510,
  dark_purple_alt1_Switch: n511,
  dark_purple_alt1_TooltipContent: n511,
  dark_purple_alt1_SliderTrack: n511,
  dark_purple_alt1_SwitchThumb: n512,
  dark_purple_alt1_SliderTrackActive: n513,
  dark_purple_alt1_SliderThumb: n514,
  dark_purple_alt1_Tooltip: n514,
  dark_purple_alt1_ProgressIndicator: n514,
  dark_purple_alt2_ListItem: n515,
  dark_purple_alt2_Card: n516,
  dark_purple_alt2_DrawerFrame: n516,
  dark_purple_alt2_Progress: n516,
  dark_purple_alt2_TooltipArrow: n516,
  dark_purple_alt2_Button: n517,
  dark_purple_alt2_Checkbox: n518,
  dark_purple_alt2_RadioGroupItem: n518,
  dark_purple_alt2_Input: n518,
  dark_purple_alt2_TextArea: n518,
  dark_purple_alt2_Switch: n519,
  dark_purple_alt2_TooltipContent: n519,
  dark_purple_alt2_SliderTrack: n519,
  dark_purple_alt2_SwitchThumb: n520,
  dark_purple_alt2_SliderTrackActive: n521,
  dark_purple_alt2_SliderThumb: n522,
  dark_purple_alt2_Tooltip: n522,
  dark_purple_alt2_ProgressIndicator: n522,
  dark_purple_active_ListItem: n523,
  dark_purple_active_Card: n524,
  dark_purple_active_DrawerFrame: n524,
  dark_purple_active_Progress: n524,
  dark_purple_active_TooltipArrow: n524,
  dark_purple_active_Button: n525,
  dark_purple_active_Checkbox: n526,
  dark_purple_active_RadioGroupItem: n526,
  dark_purple_active_Input: n526,
  dark_purple_active_TextArea: n526,
  dark_purple_active_Switch: n527,
  dark_purple_active_TooltipContent: n527,
  dark_purple_active_SliderTrack: n527,
  dark_purple_active_SwitchThumb: n528,
  dark_purple_active_SliderTrackActive: n529,
  dark_purple_active_SliderThumb: n530,
  dark_purple_active_Tooltip: n530,
  dark_purple_active_ProgressIndicator: n530,
  dark_pink_alt1_ListItem: n531,
  dark_pink_alt1_Card: n532,
  dark_pink_alt1_DrawerFrame: n532,
  dark_pink_alt1_Progress: n532,
  dark_pink_alt1_TooltipArrow: n532,
  dark_pink_alt1_Button: n533,
  dark_pink_alt1_Checkbox: n534,
  dark_pink_alt1_RadioGroupItem: n534,
  dark_pink_alt1_Input: n534,
  dark_pink_alt1_TextArea: n534,
  dark_pink_alt1_Switch: n535,
  dark_pink_alt1_TooltipContent: n535,
  dark_pink_alt1_SliderTrack: n535,
  dark_pink_alt1_SwitchThumb: n536,
  dark_pink_alt1_SliderTrackActive: n537,
  dark_pink_alt1_SliderThumb: n538,
  dark_pink_alt1_Tooltip: n538,
  dark_pink_alt1_ProgressIndicator: n538,
  dark_pink_alt2_ListItem: n539,
  dark_pink_alt2_Card: n540,
  dark_pink_alt2_DrawerFrame: n540,
  dark_pink_alt2_Progress: n540,
  dark_pink_alt2_TooltipArrow: n540,
  dark_pink_alt2_Button: n541,
  dark_pink_alt2_Checkbox: n542,
  dark_pink_alt2_RadioGroupItem: n542,
  dark_pink_alt2_Input: n542,
  dark_pink_alt2_TextArea: n542,
  dark_pink_alt2_Switch: n543,
  dark_pink_alt2_TooltipContent: n543,
  dark_pink_alt2_SliderTrack: n543,
  dark_pink_alt2_SwitchThumb: n544,
  dark_pink_alt2_SliderTrackActive: n545,
  dark_pink_alt2_SliderThumb: n546,
  dark_pink_alt2_Tooltip: n546,
  dark_pink_alt2_ProgressIndicator: n546,
  dark_pink_active_ListItem: n547,
  dark_pink_active_Card: n548,
  dark_pink_active_DrawerFrame: n548,
  dark_pink_active_Progress: n548,
  dark_pink_active_TooltipArrow: n548,
  dark_pink_active_Button: n549,
  dark_pink_active_Checkbox: n550,
  dark_pink_active_RadioGroupItem: n550,
  dark_pink_active_Input: n550,
  dark_pink_active_TextArea: n550,
  dark_pink_active_Switch: n551,
  dark_pink_active_TooltipContent: n551,
  dark_pink_active_SliderTrack: n551,
  dark_pink_active_SwitchThumb: n552,
  dark_pink_active_SliderTrackActive: n553,
  dark_pink_active_SliderThumb: n554,
  dark_pink_active_Tooltip: n554,
  dark_pink_active_ProgressIndicator: n554,
  dark_red_alt1_ListItem: n555,
  dark_red_alt1_Card: n556,
  dark_red_alt1_DrawerFrame: n556,
  dark_red_alt1_Progress: n556,
  dark_red_alt1_TooltipArrow: n556,
  dark_red_alt1_Button: n557,
  dark_red_alt1_Checkbox: n558,
  dark_red_alt1_RadioGroupItem: n558,
  dark_red_alt1_Input: n558,
  dark_red_alt1_TextArea: n558,
  dark_red_alt1_Switch: n559,
  dark_red_alt1_TooltipContent: n559,
  dark_red_alt1_SliderTrack: n559,
  dark_red_alt1_SwitchThumb: n560,
  dark_red_alt1_SliderTrackActive: n561,
  dark_red_alt1_SliderThumb: n562,
  dark_red_alt1_Tooltip: n562,
  dark_red_alt1_ProgressIndicator: n562,
  dark_red_alt2_ListItem: n563,
  dark_red_alt2_Card: n564,
  dark_red_alt2_DrawerFrame: n564,
  dark_red_alt2_Progress: n564,
  dark_red_alt2_TooltipArrow: n564,
  dark_red_alt2_Button: n565,
  dark_red_alt2_Checkbox: n566,
  dark_red_alt2_RadioGroupItem: n566,
  dark_red_alt2_Input: n566,
  dark_red_alt2_TextArea: n566,
  dark_red_alt2_Switch: n567,
  dark_red_alt2_TooltipContent: n567,
  dark_red_alt2_SliderTrack: n567,
  dark_red_alt2_SwitchThumb: n568,
  dark_red_alt2_SliderTrackActive: n569,
  dark_red_alt2_SliderThumb: n570,
  dark_red_alt2_Tooltip: n570,
  dark_red_alt2_ProgressIndicator: n570,
  dark_red_active_ListItem: n571,
  dark_red_active_Card: n572,
  dark_red_active_DrawerFrame: n572,
  dark_red_active_Progress: n572,
  dark_red_active_TooltipArrow: n572,
  dark_red_active_Button: n573,
  dark_red_active_Checkbox: n574,
  dark_red_active_RadioGroupItem: n574,
  dark_red_active_Input: n574,
  dark_red_active_TextArea: n574,
  dark_red_active_Switch: n575,
  dark_red_active_TooltipContent: n575,
  dark_red_active_SliderTrack: n575,
  dark_red_active_SwitchThumb: n576,
  dark_red_active_SliderTrackActive: n577,
  dark_red_active_SliderThumb: n578,
  dark_red_active_Tooltip: n578,
  dark_red_active_ProgressIndicator: n578
};

// node_modules/@tamagui/colors/dist/esm/dark/amber.mjs
var amber = {
  amber1: "hsl(36, 100%, 6.1%)",
  amber2: "hsl(35, 100%, 7.6%)",
  amber3: "hsl(32, 100%, 10.2%)",
  amber4: "hsl(32, 100%, 12.4%)",
  amber5: "hsl(33, 100%, 14.6%)",
  amber6: "hsl(35, 100%, 17.1%)",
  amber7: "hsl(35, 91.0%, 21.6%)",
  amber8: "hsl(36, 100%, 25.5%)",
  amber9: "hsl(39, 100%, 57.0%)",
  amber10: "hsl(43, 100%, 64.0%)",
  amber11: "hsl(39, 90.0%, 49.8%)",
  amber12: "hsl(39, 97.0%, 93.2%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/blue.mjs
var blue = {
  blue1: "hsl(212, 35.0%, 9.2%)",
  blue2: "hsl(216, 50.0%, 11.8%)",
  blue3: "hsl(214, 59.4%, 15.3%)",
  blue4: "hsl(214, 65.8%, 17.9%)",
  blue5: "hsl(213, 71.2%, 20.2%)",
  blue6: "hsl(212, 77.4%, 23.1%)",
  blue7: "hsl(211, 85.1%, 27.4%)",
  blue8: "hsl(211, 89.7%, 34.1%)",
  blue9: "hsl(206, 100%, 50.0%)",
  blue10: "hsl(209, 100%, 60.6%)",
  blue11: "hsl(210, 100%, 66.1%)",
  blue12: "hsl(206, 98.0%, 95.8%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/bronze.mjs
var bronze = {
  bronze1: "hsl(17, 10.0%, 8.8%)",
  bronze2: "hsl(15, 14.8%, 10.6%)",
  bronze3: "hsl(15, 16.3%, 14.3%)",
  bronze4: "hsl(16, 17.1%, 17.2%)",
  bronze5: "hsl(16, 17.6%, 19.6%)",
  bronze6: "hsl(16, 18.1%, 22.9%)",
  bronze7: "hsl(17, 18.8%, 28.8%)",
  bronze8: "hsl(17, 19.6%, 38.0%)",
  bronze9: "hsl(17, 20.0%, 54.0%)",
  bronze10: "hsl(18, 24.0%, 59.0%)",
  bronze11: "hsl(18, 35.0%, 68.5%)",
  bronze12: "hsl(18, 57.0%, 94.1%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/brown.mjs
var brown = {
  brown1: "hsl(22, 15.0%, 8.7%)",
  brown2: "hsl(20, 28.3%, 10.4%)",
  brown3: "hsl(20, 28.0%, 14.0%)",
  brown4: "hsl(21, 28.4%, 16.5%)",
  brown5: "hsl(22, 28.7%, 18.9%)",
  brown6: "hsl(23, 29.0%, 22.3%)",
  brown7: "hsl(25, 29.5%, 27.8%)",
  brown8: "hsl(27, 30.1%, 35.9%)",
  brown9: "hsl(28, 34.0%, 51.0%)",
  brown10: "hsl(28, 41.4%, 55.8%)",
  brown11: "hsl(28, 60.0%, 64.5%)",
  brown12: "hsl(30, 67.0%, 94.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/crimson.mjs
var crimson = {
  crimson1: "hsl(335, 20.0%, 9.6%)",
  crimson2: "hsl(335, 32.2%, 11.6%)",
  crimson3: "hsl(335, 42.5%, 16.5%)",
  crimson4: "hsl(335, 47.2%, 19.3%)",
  crimson5: "hsl(335, 50.9%, 21.8%)",
  crimson6: "hsl(335, 55.7%, 25.3%)",
  crimson7: "hsl(336, 62.9%, 30.8%)",
  crimson8: "hsl(336, 74.9%, 39.0%)",
  crimson9: "hsl(336, 80.0%, 57.8%)",
  crimson10: "hsl(339, 84.1%, 62.6%)",
  crimson11: "hsl(341, 90.0%, 67.3%)",
  crimson12: "hsl(332, 87.0%, 96.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/cyan.mjs
var cyan = {
  cyan1: "hsl(192, 60.0%, 7.2%)",
  cyan2: "hsl(192, 71.4%, 8.2%)",
  cyan3: "hsl(192, 75.9%, 10.8%)",
  cyan4: "hsl(192, 79.3%, 12.8%)",
  cyan5: "hsl(192, 82.5%, 14.6%)",
  cyan6: "hsl(192, 86.6%, 16.9%)",
  cyan7: "hsl(192, 92.6%, 20.1%)",
  cyan8: "hsl(192, 100%, 24.5%)",
  cyan9: "hsl(190, 95.0%, 39.0%)",
  cyan10: "hsl(188, 100%, 40.0%)",
  cyan11: "hsl(186, 100%, 42.2%)",
  cyan12: "hsl(185, 73.0%, 93.2%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/gold.mjs
var gold = {
  gold1: "hsl(44, 9.0%, 8.3%)",
  gold2: "hsl(43, 14.3%, 9.6%)",
  gold3: "hsl(42, 15.5%, 13.0%)",
  gold4: "hsl(41, 16.4%, 15.6%)",
  gold5: "hsl(41, 16.9%, 17.8%)",
  gold6: "hsl(40, 17.6%, 20.8%)",
  gold7: "hsl(38, 18.5%, 26.4%)",
  gold8: "hsl(36, 19.6%, 35.1%)",
  gold9: "hsl(36, 20.0%, 49.5%)",
  gold10: "hsl(36, 22.3%, 54.5%)",
  gold11: "hsl(35, 30.0%, 64.0%)",
  gold12: "hsl(49, 52.0%, 93.8%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/grass.mjs
var grass = {
  grass1: "hsl(146, 30.0%, 7.4%)",
  grass2: "hsl(136, 33.3%, 8.8%)",
  grass3: "hsl(137, 36.0%, 11.4%)",
  grass4: "hsl(137, 37.6%, 13.7%)",
  grass5: "hsl(136, 38.7%, 16.0%)",
  grass6: "hsl(135, 39.6%, 19.1%)",
  grass7: "hsl(134, 40.3%, 23.8%)",
  grass8: "hsl(131, 40.1%, 30.8%)",
  grass9: "hsl(131, 41.0%, 46.5%)",
  grass10: "hsl(131, 39.0%, 52.1%)",
  grass11: "hsl(131, 43.0%, 57.2%)",
  grass12: "hsl(137, 72.0%, 94.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/gray.mjs
var gray = {
  gray1: "hsl(0, 0%, 8.5%)",
  gray2: "hsl(0, 0%, 11.0%)",
  gray3: "hsl(0, 0%, 13.6%)",
  gray4: "hsl(0, 0%, 15.8%)",
  gray5: "hsl(0, 0%, 17.9%)",
  gray6: "hsl(0, 0%, 20.5%)",
  gray7: "hsl(0, 0%, 24.3%)",
  gray8: "hsl(0, 0%, 31.2%)",
  gray9: "hsl(0, 0%, 43.9%)",
  gray10: "hsl(0, 0%, 49.4%)",
  gray11: "hsl(0, 0%, 62.8%)",
  gray12: "hsl(0, 0%, 93.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/green.mjs
var green = {
  green1: "hsl(146, 30.0%, 7.4%)",
  green2: "hsl(155, 44.2%, 8.4%)",
  green3: "hsl(155, 46.7%, 10.9%)",
  green4: "hsl(154, 48.4%, 12.9%)",
  green5: "hsl(154, 49.7%, 14.9%)",
  green6: "hsl(154, 50.9%, 17.6%)",
  green7: "hsl(153, 51.8%, 21.8%)",
  green8: "hsl(151, 51.7%, 28.4%)",
  green9: "hsl(151, 55.0%, 41.5%)",
  green10: "hsl(151, 49.3%, 46.5%)",
  green11: "hsl(151, 50.0%, 53.2%)",
  green12: "hsl(137, 72.0%, 94.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/indigo.mjs
var indigo = {
  indigo1: "hsl(229, 24.0%, 10.0%)",
  indigo2: "hsl(230, 36.4%, 12.9%)",
  indigo3: "hsl(228, 43.3%, 17.5%)",
  indigo4: "hsl(227, 47.2%, 21.0%)",
  indigo5: "hsl(227, 50.0%, 24.1%)",
  indigo6: "hsl(226, 52.9%, 28.2%)",
  indigo7: "hsl(226, 56.0%, 34.5%)",
  indigo8: "hsl(226, 58.2%, 44.1%)",
  indigo9: "hsl(226, 70.0%, 55.5%)",
  indigo10: "hsl(227, 75.2%, 61.6%)",
  indigo11: "hsl(228, 100%, 75.9%)",
  indigo12: "hsl(226, 83.0%, 96.3%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/lime.mjs
var lime = {
  lime1: "hsl(75, 55.0%, 6.0%)",
  lime2: "hsl(74, 56.8%, 7.3%)",
  lime3: "hsl(78, 50.2%, 9.9%)",
  lime4: "hsl(79, 50.3%, 12.1%)",
  lime5: "hsl(79, 52.6%, 14.2%)",
  lime6: "hsl(78, 55.7%, 16.7%)",
  lime7: "hsl(77, 59.7%, 20.1%)",
  lime8: "hsl(75, 64.8%, 24.5%)",
  lime9: "hsl(81, 67.0%, 50.0%)",
  lime10: "hsl(75, 85.0%, 60.0%)",
  lime11: "hsl(81, 70.0%, 43.8%)",
  lime12: "hsl(84, 79.0%, 92.6%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/mauve.mjs
var mauve = {
  mauve1: "hsl(246, 6.0%, 9.0%)",
  mauve2: "hsl(240, 5.1%, 11.6%)",
  mauve3: "hsl(241, 5.0%, 14.3%)",
  mauve4: "hsl(242, 4.9%, 16.5%)",
  mauve5: "hsl(243, 4.9%, 18.8%)",
  mauve6: "hsl(244, 4.9%, 21.5%)",
  mauve7: "hsl(245, 4.9%, 25.4%)",
  mauve8: "hsl(247, 4.8%, 32.5%)",
  mauve9: "hsl(252, 4.0%, 45.2%)",
  mauve10: "hsl(247, 3.4%, 50.7%)",
  mauve11: "hsl(253, 4.0%, 63.7%)",
  mauve12: "hsl(256, 6.0%, 93.2%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/mint.mjs
var mint = {
  mint1: "hsl(173, 50.0%, 6.6%)",
  mint2: "hsl(176, 73.0%, 7.3%)",
  mint3: "hsl(175, 79.3%, 8.9%)",
  mint4: "hsl(174, 84.8%, 10.3%)",
  mint5: "hsl(174, 90.2%, 11.9%)",
  mint6: "hsl(173, 96.0%, 13.8%)",
  mint7: "hsl(172, 100%, 16.8%)",
  mint8: "hsl(170, 100%, 21.4%)",
  mint9: "hsl(167, 65.0%, 66.0%)",
  mint10: "hsl(163, 80.0%, 77.0%)",
  mint11: "hsl(167, 70.0%, 48.0%)",
  mint12: "hsl(165, 80.0%, 94.8%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/olive.mjs
var olive = {
  olive1: "hsl(110, 5.0%, 8.6%)",
  olive2: "hsl(105, 7.4%, 10.6%)",
  olive3: "hsl(106, 6.4%, 13.1%)",
  olive4: "hsl(106, 5.8%, 15.3%)",
  olive5: "hsl(107, 5.3%, 17.4%)",
  olive6: "hsl(107, 4.9%, 19.9%)",
  olive7: "hsl(108, 4.4%, 23.6%)",
  olive8: "hsl(110, 3.8%, 30.6%)",
  olive9: "hsl(110, 6.0%, 42.5%)",
  olive10: "hsl(111, 4.8%, 48.2%)",
  olive11: "hsl(110, 5.0%, 61.8%)",
  olive12: "hsl(110, 6.0%, 93.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/orange.mjs
var orange = {
  orange1: "hsl(30, 70.0%, 7.2%)",
  orange2: "hsl(28, 100%, 8.4%)",
  orange3: "hsl(26, 91.1%, 11.6%)",
  orange4: "hsl(25, 88.3%, 14.1%)",
  orange5: "hsl(24, 87.6%, 16.6%)",
  orange6: "hsl(24, 88.6%, 19.8%)",
  orange7: "hsl(24, 92.4%, 24.0%)",
  orange8: "hsl(25, 100%, 29.0%)",
  orange9: "hsl(24, 94.0%, 50.0%)",
  orange10: "hsl(24, 100%, 58.5%)",
  orange11: "hsl(24, 100%, 62.2%)",
  orange12: "hsl(24, 97.0%, 93.2%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/pink.mjs
var pink = {
  pink1: "hsl(318, 25.0%, 9.6%)",
  pink2: "hsl(319, 32.2%, 11.6%)",
  pink3: "hsl(319, 41.0%, 16.0%)",
  pink4: "hsl(320, 45.4%, 18.7%)",
  pink5: "hsl(320, 49.0%, 21.1%)",
  pink6: "hsl(321, 53.6%, 24.4%)",
  pink7: "hsl(321, 61.1%, 29.7%)",
  pink8: "hsl(322, 74.9%, 37.5%)",
  pink9: "hsl(322, 65.0%, 54.5%)",
  pink10: "hsl(323, 72.8%, 59.2%)",
  pink11: "hsl(325, 90.0%, 66.4%)",
  pink12: "hsl(322, 90.0%, 95.8%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/plum.mjs
var plum = {
  plum1: "hsl(301, 20.0%, 9.4%)",
  plum2: "hsl(300, 29.8%, 11.2%)",
  plum3: "hsl(298, 34.4%, 15.3%)",
  plum4: "hsl(297, 36.8%, 18.3%)",
  plum5: "hsl(296, 38.5%, 21.1%)",
  plum6: "hsl(295, 40.4%, 24.7%)",
  plum7: "hsl(294, 42.7%, 30.6%)",
  plum8: "hsl(292, 45.1%, 40.0%)",
  plum9: "hsl(292, 45.0%, 51.0%)",
  plum10: "hsl(295, 50.0%, 55.4%)",
  plum11: "hsl(300, 60.0%, 62.0%)",
  plum12: "hsl(296, 74.0%, 95.7%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/purple.mjs
var purple = {
  purple1: "hsl(284, 20.0%, 9.6%)",
  purple2: "hsl(283, 30.0%, 11.8%)",
  purple3: "hsl(281, 37.5%, 16.5%)",
  purple4: "hsl(280, 41.2%, 20.0%)",
  purple5: "hsl(279, 43.8%, 23.3%)",
  purple6: "hsl(277, 46.4%, 27.5%)",
  purple7: "hsl(275, 49.3%, 34.6%)",
  purple8: "hsl(272, 52.1%, 45.9%)",
  purple9: "hsl(272, 51.0%, 54.0%)",
  purple10: "hsl(273, 57.3%, 59.1%)",
  purple11: "hsl(275, 80.0%, 71.0%)",
  purple12: "hsl(279, 75.0%, 95.7%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/red.mjs
var red = {
  red1: "hsl(353, 23.0%, 9.8%)",
  red2: "hsl(357, 34.4%, 12.0%)",
  red3: "hsl(356, 43.4%, 16.4%)",
  red4: "hsl(356, 47.6%, 19.2%)",
  red5: "hsl(356, 51.1%, 21.9%)",
  red6: "hsl(356, 55.2%, 25.9%)",
  red7: "hsl(357, 60.2%, 31.8%)",
  red8: "hsl(358, 65.0%, 40.4%)",
  red9: "hsl(358, 75.0%, 59.0%)",
  red10: "hsl(358, 85.3%, 64.0%)",
  red11: "hsl(358, 100%, 69.5%)",
  red12: "hsl(351, 89.0%, 96.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/sage.mjs
var sage = {
  sage1: "hsl(155, 7.0%, 8.4%)",
  sage2: "hsl(150, 7.4%, 10.6%)",
  sage3: "hsl(150, 6.7%, 13.1%)",
  sage4: "hsl(150, 6.4%, 15.3%)",
  sage5: "hsl(150, 6.1%, 17.4%)",
  sage6: "hsl(150, 5.8%, 19.9%)",
  sage7: "hsl(150, 5.5%, 23.6%)",
  sage8: "hsl(150, 5.1%, 30.6%)",
  sage9: "hsl(155, 6.0%, 42.5%)",
  sage10: "hsl(153, 4.8%, 48.2%)",
  sage11: "hsl(155, 5.0%, 61.8%)",
  sage12: "hsl(155, 6.0%, 93.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/sand.mjs
var sand = {
  sand1: "hsl(61, 2.0%, 8.3%)",
  sand2: "hsl(60, 3.7%, 10.6%)",
  sand3: "hsl(58, 3.7%, 13.1%)",
  sand4: "hsl(57, 3.6%, 15.3%)",
  sand5: "hsl(56, 3.7%, 17.4%)",
  sand6: "hsl(55, 3.7%, 19.9%)",
  sand7: "hsl(53, 3.7%, 23.6%)",
  sand8: "hsl(50, 3.8%, 30.6%)",
  sand9: "hsl(50, 4.0%, 42.7%)",
  sand10: "hsl(52, 3.1%, 48.3%)",
  sand11: "hsl(50, 4.0%, 61.8%)",
  sand12: "hsl(56, 4.0%, 92.8%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/sky.mjs
var sky = {
  sky1: "hsl(205, 45.0%, 8.6%)",
  sky2: "hsl(202, 71.4%, 9.6%)",
  sky3: "hsl(201, 74.6%, 12.2%)",
  sky4: "hsl(201, 77.4%, 14.4%)",
  sky5: "hsl(200, 80.3%, 16.5%)",
  sky6: "hsl(200, 84.1%, 18.9%)",
  sky7: "hsl(199, 90.2%, 22.1%)",
  sky8: "hsl(198, 100%, 26.1%)",
  sky9: "hsl(193, 98.0%, 70.0%)",
  sky10: "hsl(192, 100%, 77.0%)",
  sky11: "hsl(192, 85.0%, 55.8%)",
  sky12: "hsl(198, 98.0%, 95.8%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/slate.mjs
var slate = {
  slate1: "hsl(200, 7.0%, 8.8%)",
  slate2: "hsl(195, 7.1%, 11.0%)",
  slate3: "hsl(197, 6.8%, 13.6%)",
  slate4: "hsl(198, 6.6%, 15.8%)",
  slate5: "hsl(199, 6.4%, 17.9%)",
  slate6: "hsl(201, 6.2%, 20.5%)",
  slate7: "hsl(203, 6.0%, 24.3%)",
  slate8: "hsl(207, 5.6%, 31.6%)",
  slate9: "hsl(206, 6.0%, 43.9%)",
  slate10: "hsl(206, 5.2%, 49.5%)",
  slate11: "hsl(206, 6.0%, 63.0%)",
  slate12: "hsl(210, 6.0%, 93.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/teal.mjs
var teal = {
  teal1: "hsl(168, 48.0%, 6.5%)",
  teal2: "hsl(169, 77.8%, 7.1%)",
  teal3: "hsl(170, 76.1%, 9.2%)",
  teal4: "hsl(171, 75.8%, 11.0%)",
  teal5: "hsl(171, 75.7%, 12.8%)",
  teal6: "hsl(172, 75.8%, 15.1%)",
  teal7: "hsl(172, 76.7%, 18.6%)",
  teal8: "hsl(173, 80.2%, 23.7%)",
  teal9: "hsl(173, 80.0%, 36.0%)",
  teal10: "hsl(174, 83.9%, 38.2%)",
  teal11: "hsl(174, 90.0%, 40.7%)",
  teal12: "hsl(166, 73.0%, 93.1%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/tomato.mjs
var tomato = {
  tomato1: "hsl(10, 23.0%, 9.4%)",
  tomato2: "hsl(9, 44.8%, 11.4%)",
  tomato3: "hsl(8, 52.0%, 15.3%)",
  tomato4: "hsl(7, 56.3%, 18.0%)",
  tomato5: "hsl(7, 60.1%, 20.6%)",
  tomato6: "hsl(8, 64.8%, 24.0%)",
  tomato7: "hsl(8, 71.2%, 29.1%)",
  tomato8: "hsl(10, 80.2%, 35.7%)",
  tomato9: "hsl(10, 78.0%, 54.0%)",
  tomato10: "hsl(10, 81.7%, 59.0%)",
  tomato11: "hsl(10, 85.0%, 62.8%)",
  tomato12: "hsl(10, 89.0%, 96.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/violet.mjs
var violet = {
  violet1: "hsl(250, 20.0%, 10.2%)",
  violet2: "hsl(255, 30.3%, 12.9%)",
  violet3: "hsl(253, 37.0%, 18.4%)",
  violet4: "hsl(252, 40.1%, 22.5%)",
  violet5: "hsl(252, 42.2%, 26.2%)",
  violet6: "hsl(251, 44.3%, 31.1%)",
  violet7: "hsl(250, 46.8%, 38.9%)",
  violet8: "hsl(250, 51.8%, 51.2%)",
  violet9: "hsl(252, 56.0%, 57.5%)",
  violet10: "hsl(251, 63.2%, 63.2%)",
  violet11: "hsl(250, 95.0%, 76.8%)",
  violet12: "hsl(252, 87.0%, 96.4%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/yellow.mjs
var yellow = {
  yellow1: "hsl(45, 100%, 5.5%)",
  yellow2: "hsl(46, 100%, 6.7%)",
  yellow3: "hsl(45, 100%, 8.7%)",
  yellow4: "hsl(45, 100%, 10.4%)",
  yellow5: "hsl(47, 100%, 12.1%)",
  yellow6: "hsl(49, 100%, 14.3%)",
  yellow7: "hsl(49, 90.3%, 18.4%)",
  yellow8: "hsl(50, 100%, 22.0%)",
  yellow9: "hsl(53, 92.0%, 50.0%)",
  yellow10: "hsl(54, 100%, 68.0%)",
  yellow11: "hsl(48, 100%, 47.0%)",
  yellow12: "hsl(53, 100%, 91.0%)"
};

// node_modules/@tamagui/colors/dist/esm/dark/amberA.mjs
var amberA = {
  amberA1: "hsla(0, 0%, 0%, 0)",
  amberA2: "hsla(31, 100%, 49.7%, 0.036)",
  amberA3: "hsla(27, 100%, 49.9%, 0.094)",
  amberA4: "hsla(29, 100%, 50.0%, 0.143)",
  amberA5: "hsla(31, 100%, 50.0%, 0.192)",
  amberA6: "hsla(35, 100%, 50.0%, 0.250)",
  amberA7: "hsla(34, 99.6%, 52.9%, 0.331)",
  amberA8: "hsla(36, 100%, 50.0%, 0.442)",
  amberA9: "hsla(40, 100%, 57.2%, 0.980)",
  amberA10: "hsla(44, 100%, 64.2%, 0.980)",
  amberA11: "hsla(39, 99.9%, 52.7%, 0.938)",
  amberA12: "hsla(45, 100%, 94.2%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/blueA.mjs
var blueA = {
  blueA1: "hsla(0, 0%, 0%, 0)",
  blueA2: "hsla(221, 97.8%, 52.4%, 0.059)",
  blueA3: "hsla(215, 99.3%, 54.2%, 0.135)",
  blueA4: "hsla(215, 99.3%, 53.8%, 0.198)",
  blueA5: "hsla(213, 99.4%, 52.8%, 0.252)",
  blueA6: "hsla(212, 99.9%, 51.7%, 0.323)",
  blueA7: "hsla(211, 100%, 50.7%, 0.435)",
  blueA8: "hsla(211, 99.8%, 50.9%, 0.597)",
  blueA9: "hsla(205, 100%, 50.0%, 0.980)",
  blueA10: "hsla(208, 100%, 60.7%, 0.980)",
  blueA11: "hsla(209, 100%, 66.3%, 0.980)",
  blueA12: "hsla(196, 100%, 96.8%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/bronzeA.mjs
var bronzeA = {
  bronzeA1: "hsla(0, 0%, 0%, 0)",
  bronzeA2: "hsla(20, 88.2%, 74.2%, 0.027)",
  bronzeA3: "hsla(10, 99.4%, 83.0%, 0.074)",
  bronzeA4: "hsla(18, 96.0%, 81.1%, 0.114)",
  bronzeA5: "hsla(18, 99.4%, 81.7%, 0.148)",
  bronzeA6: "hsla(15, 98.1%, 82.4%, 0.192)",
  bronzeA7: "hsla(16, 99.2%, 82.9%, 0.270)",
  bronzeA8: "hsla(18, 99.5%, 82.6%, 0.396)",
  bronzeA9: "hsla(18, 99.3%, 85.0%, 0.592)",
  bronzeA10: "hsla(18, 99.6%, 85.2%, 0.657)",
  bronzeA11: "hsla(17, 99.9%, 86.1%, 0.774)",
  bronzeA12: "hsla(20, 99.8%, 96.4%, 0.974)"
};

// node_modules/@tamagui/colors/dist/esm/dark/brownA.mjs
var brownA = {
  brownA1: "hsla(0, 0%, 0%, 0)",
  brownA2: "hsla(22, 99.6%, 53.6%, 0.035)",
  brownA3: "hsla(18, 97.8%, 69.0%, 0.088)",
  brownA4: "hsla(21, 98.2%, 71.0%, 0.123)",
  brownA5: "hsla(25, 98.4%, 72.1%, 0.158)",
  brownA6: "hsla(25, 98.7%, 73.5%, 0.206)",
  brownA7: "hsla(25, 99.0%, 74.6%, 0.289)",
  brownA8: "hsla(28, 99.2%, 75.3%, 0.407)",
  brownA9: "hsla(28, 100%, 74.8%, 0.642)",
  brownA10: "hsla(28, 99.9%, 74.9%, 0.712)",
  brownA11: "hsla(28, 99.9%, 74.9%, 0.843)",
  brownA12: "hsla(32, 98.2%, 95.7%, 0.979)"
};

// node_modules/@tamagui/colors/dist/esm/dark/crimsonA.mjs
var crimsonA = {
  crimsonA1: "hsla(0, 0%, 0%, 0)",
  crimsonA2: "hsla(336, 96.8%, 53.2%, 0.045)",
  crimsonA3: "hsla(335, 98.7%, 59.3%, 0.138)",
  crimsonA4: "hsla(336, 99.1%, 59.9%, 0.191)",
  crimsonA5: "hsla(335, 99.4%, 59.4%, 0.244)",
  crimsonA6: "hsla(335, 99.4%, 59.4%, 0.315)",
  crimsonA7: "hsla(336, 99.5%, 57.8%, 0.439)",
  crimsonA8: "hsla(336, 99.9%, 55.4%, 0.642)",
  crimsonA9: "hsla(336, 99.9%, 62.8%, 0.903)",
  crimsonA10: "hsla(339, 99.9%, 66.3%, 0.934)",
  crimsonA11: "hsla(341, 99.9%, 69.5%, 0.965)",
  crimsonA12: "hsla(327, 100%, 97.1%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/cyanA.mjs
var cyanA = {
  cyanA1: "hsla(0, 0%, 0%, 0)",
  cyanA2: "hsla(196, 100%, 50.0%, 0.031)",
  cyanA3: "hsla(192, 98.0%, 50.9%, 0.085)",
  cyanA4: "hsla(194, 99.6%, 51.3%, 0.133)",
  cyanA5: "hsla(192, 99.5%, 51.3%, 0.173)",
  cyanA6: "hsla(193, 99.7%, 50.4%, 0.226)",
  cyanA7: "hsla(192, 100%, 50.0%, 0.310)",
  cyanA8: "hsla(193, 100%, 50.0%, 0.425)",
  cyanA9: "hsla(190, 99.8%, 50.8%, 0.731)",
  cyanA10: "hsla(188, 100%, 50.0%, 0.775)",
  cyanA11: "hsla(186, 100%, 49.9%, 0.824)",
  cyanA12: "hsla(185, 99.8%, 95.1%, 0.978)"
};

// node_modules/@tamagui/colors/dist/esm/dark/goldA.mjs
var goldA = {
  goldA1: "hsla(0, 0%, 0%, 0)",
  goldA2: "hsla(40, 93.7%, 70.6%, 0.022)",
  goldA3: "hsla(40, 97.5%, 80.6%, 0.065)",
  goldA4: "hsla(40, 95.9%, 80.8%, 0.100)",
  goldA5: "hsla(38, 97.3%, 82.1%, 0.130)",
  goldA6: "hsla(39, 97.2%, 82.5%, 0.169)",
  goldA7: "hsla(37, 99.3%, 82.4%, 0.246)",
  goldA8: "hsla(35, 98.7%, 82.2%, 0.363)",
  goldA9: "hsla(36, 99.7%, 82.8%, 0.552)",
  goldA10: "hsla(35, 99.2%, 83.7%, 0.613)",
  goldA11: "hsla(35, 99.3%, 85.3%, 0.725)",
  goldA12: "hsla(49, 98.6%, 96.7%, 0.966)"
};

// node_modules/@tamagui/colors/dist/esm/dark/grassA.mjs
var grassA = {
  grassA1: "hsla(0, 0%, 0%, 0)",
  grassA2: "hsla(107, 97.2%, 61.9%, 0.022)",
  grassA3: "hsla(128, 96.5%, 69.8%, 0.066)",
  grassA4: "hsla(130, 100%, 70.2%, 0.100)",
  grassA5: "hsla(130, 98.2%, 69.1%, 0.140)",
  grassA6: "hsla(132, 99.9%, 69.3%, 0.187)",
  grassA7: "hsla(132, 99.9%, 69.8%, 0.261)",
  grassA8: "hsla(130, 99.6%, 70.5%, 0.370)",
  grassA9: "hsla(130, 99.7%, 70.6%, 0.618)",
  grassA10: "hsla(131, 100%, 73.5%, 0.674)",
  grassA11: "hsla(130, 99.7%, 75.6%, 0.731)",
  grassA12: "hsla(137, 100%, 95.8%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/grayA.mjs
var grayA = {
  grayA1: "hsla(0, 0%, 100%, 0)",
  grayA2: "hsla(0, 0%, 100%, 0.026)",
  grayA3: "hsla(0, 0%, 100%, 0.056)",
  grayA4: "hsla(0, 0%, 100%, 0.077)",
  grayA5: "hsla(0, 0%, 100%, 0.103)",
  grayA6: "hsla(0, 0%, 100%, 0.129)",
  grayA7: "hsla(0, 0%, 100%, 0.172)",
  grayA8: "hsla(0, 0%, 100%, 0.249)",
  grayA9: "hsla(0, 0%, 100%, 0.386)",
  grayA10: "hsla(0, 0%, 100%, 0.446)",
  grayA11: "hsla(0, 0%, 100%, 0.592)",
  grayA12: "hsla(0, 0%, 100%, 0.923)"
};

// node_modules/@tamagui/colors/dist/esm/dark/greenA.mjs
var greenA = {
  greenA1: "hsla(0, 0%, 0%, 0)",
  greenA2: "hsla(169, 100%, 48.5%, 0.027)",
  greenA3: "hsla(162, 98.7%, 57.9%, 0.070)",
  greenA4: "hsla(158, 98.6%, 59.7%, 0.105)",
  greenA5: "hsla(158, 98.6%, 60.7%, 0.140)",
  greenA6: "hsla(156, 99.9%, 62.0%, 0.187)",
  greenA7: "hsla(154, 99.5%, 63.1%, 0.257)",
  greenA8: "hsla(152, 99.7%, 64.2%, 0.370)",
  greenA9: "hsla(151, 99.7%, 63.8%, 0.605)",
  greenA10: "hsla(152, 99.9%, 66.5%, 0.661)",
  greenA11: "hsla(151, 99.7%, 69.2%, 0.740)",
  greenA12: "hsla(137, 100%, 95.8%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/indigoA.mjs
var indigoA = {
  indigoA1: "hsla(0, 0%, 0%, 0)",
  indigoA2: "hsla(234, 97.4%, 59.9%, 0.059)",
  indigoA3: "hsla(228, 99.2%, 61.7%, 0.144)",
  indigoA4: "hsla(227, 99.7%, 62.0%, 0.211)",
  indigoA5: "hsla(227, 99.2%, 62.3%, 0.270)",
  indigoA6: "hsla(226, 99.9%, 62.1%, 0.350)",
  indigoA7: "hsla(226, 99.9%, 62.0%, 0.471)",
  indigoA8: "hsla(226, 99.9%, 62.1%, 0.655)",
  indigoA9: "hsla(226, 99.9%, 63.6%, 0.848)",
  indigoA10: "hsla(227, 99.8%, 67.7%, 0.893)",
  indigoA11: "hsla(227, 100%, 76.3%, 0.980)",
  indigoA12: "hsla(226, 100%, 97.5%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/limeA.mjs
var limeA = {
  limeA1: "hsla(0, 0%, 0%, 0)",
  limeA2: "hsla(75, 96.4%, 59.6%, 0.022)",
  limeA3: "hsla(88, 98.0%, 70.4%, 0.061)",
  limeA4: "hsla(81, 97.8%, 67.4%, 0.096)",
  limeA5: "hsla(82, 98.4%, 65.6%, 0.135)",
  limeA6: "hsla(79, 99.7%, 64.3%, 0.182)",
  limeA7: "hsla(77, 99.1%, 62.1%, 0.252)",
  limeA8: "hsla(75, 100%, 60.0%, 0.342)",
  limeA9: "hsla(81, 99.8%, 59.7%, 0.819)",
  limeA10: "hsla(75, 99.8%, 63.7%, 0.936)",
  limeA11: "hsla(81, 99.9%, 58.7%, 0.719)",
  limeA12: "hsla(83, 100%, 94.2%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/mauveA.mjs
var mauveA = {
  mauveA1: "hsla(0, 0%, 0%, 0)",
  mauveA2: "hsla(240, 76.7%, 91.2%, 0.031)",
  mauveA3: "hsla(240, 86.0%, 95.8%, 0.061)",
  mauveA4: "hsla(240, 91.8%, 94.7%, 0.087)",
  mauveA5: "hsla(240, 91.5%, 95.8%, 0.113)",
  mauveA6: "hsla(240, 92.0%, 93.8%, 0.148)",
  mauveA7: "hsla(240, 94.8%, 95.3%, 0.191)",
  mauveA8: "hsla(249, 98.1%, 95.2%, 0.273)",
  mauveA9: "hsla(248, 97.6%, 96.2%, 0.416)",
  mauveA10: "hsla(248, 95.5%, 96.6%, 0.477)",
  mauveA11: "hsla(250, 98.0%, 98.0%, 0.615)",
  mauveA12: "hsla(240, 93.9%, 99.6%, 0.931)"
};

// node_modules/@tamagui/colors/dist/esm/dark/mintA.mjs
var mintA = {
  mintA1: "hsla(0, 0%, 0%, 0)",
  mintA2: "hsla(180, 100%, 49.2%, 0.031)",
  mintA3: "hsla(176, 100%, 49.7%, 0.070)",
  mintA4: "hsla(173, 100%, 49.7%, 0.105)",
  mintA5: "hsla(173, 100%, 49.8%, 0.144)",
  mintA6: "hsla(172, 100%, 49.8%, 0.192)",
  mintA7: "hsla(171, 100%, 49.9%, 0.266)",
  mintA8: "hsla(169, 100%, 49.9%, 0.366)",
  mintA9: "hsla(167, 99.8%, 75.0%, 0.870)",
  mintA10: "hsla(163, 99.9%, 80.7%, 0.948)",
  mintA11: "hsla(167, 99.9%, 58.7%, 0.796)",
  mintA12: "hsla(169, 100%, 96.2%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/oliveA.mjs
var oliveA = {
  oliveA1: "hsla(0, 0%, 0%, 0)",
  oliveA2: "hsla(91, 97.0%, 84.0%, 0.026)",
  oliveA3: "hsla(101, 87.4%, 87.7%, 0.057)",
  oliveA4: "hsla(92, 91.8%, 94.1%, 0.078)",
  oliveA5: "hsla(101, 92.6%, 93.5%, 0.104)",
  oliveA6: "hsla(102, 91.1%, 94.6%, 0.130)",
  oliveA7: "hsla(102, 92.5%, 95.9%, 0.173)",
  oliveA8: "hsla(107, 100%, 96.5%, 0.250)",
  oliveA9: "hsla(110, 98.3%, 94.1%, 0.397)",
  oliveA10: "hsla(109, 99.6%, 95.3%, 0.457)",
  oliveA11: "hsla(113, 95.3%, 97.2%, 0.600)",
  oliveA12: "hsla(120, 93.5%, 99.6%, 0.927)"
};

// node_modules/@tamagui/colors/dist/esm/dark/orangeA.mjs
var orangeA = {
  orangeA1: "hsla(0, 0%, 0%, 0)",
  orangeA2: "hsla(13, 100%, 49.7%, 0.054)",
  orangeA3: "hsla(20, 100%, 49.7%, 0.117)",
  orangeA4: "hsla(23, 100%, 49.8%, 0.166)",
  orangeA5: "hsla(23, 99.4%, 50.1%, 0.215)",
  orangeA6: "hsla(23, 99.8%, 51.1%, 0.286)",
  orangeA7: "hsla(23, 99.7%, 50.6%, 0.389)",
  orangeA8: "hsla(24, 100%, 49.9%, 0.523)",
  orangeA9: "hsla(24, 99.9%, 51.6%, 0.965)",
  orangeA10: "hsla(25, 100%, 58.6%, 0.980)",
  orangeA11: "hsla(24, 100%, 62.4%, 0.980)",
  orangeA12: "hsla(26, 100%, 94.2%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/pinkA.mjs
var pinkA = {
  pinkA1: "hsla(0, 0%, 0%, 0)",
  pinkA2: "hsla(320, 98.1%, 64.1%, 0.036)",
  pinkA3: "hsla(320, 99.1%, 63.1%, 0.121)",
  pinkA4: "hsla(320, 99.5%, 62.7%, 0.170)",
  pinkA5: "hsla(319, 99.7%, 61.5%, 0.219)",
  pinkA6: "hsla(322, 99.4%, 60.8%, 0.291)",
  pinkA7: "hsla(321, 99.6%, 58.7%, 0.407)",
  pinkA8: "hsla(322, 99.7%, 55.4%, 0.608)",
  pinkA9: "hsla(322, 100%, 64.6%, 0.817)",
  pinkA10: "hsla(323, 100%, 66.3%, 0.875)",
  pinkA11: "hsla(325, 99.9%, 68.6%, 0.960)",
  pinkA12: "hsla(314, 100%, 96.9%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/plumA.mjs
var plumA = {
  plumA1: "hsla(0, 0%, 0%, 0)",
  plumA2: "hsla(300, 96.4%, 58.4%, 0.036)",
  plumA3: "hsla(300, 99.4%, 67.1%, 0.102)",
  plumA4: "hsla(295, 99.8%, 66.3%, 0.155)",
  plumA5: "hsla(295, 99.4%, 67.1%, 0.204)",
  plumA6: "hsla(294, 99.0%, 67.8%, 0.262)",
  plumA7: "hsla(294, 99.9%, 67.7%, 0.363)",
  plumA8: "hsla(292, 99.8%, 67.5%, 0.527)",
  plumA9: "hsla(292, 99.9%, 69.2%, 0.695)",
  plumA10: "hsla(295, 99.9%, 70.8%, 0.748)",
  plumA11: "hsla(300, 99.8%, 72.9%, 0.828)",
  plumA12: "hsla(300, 100%, 97.1%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/purpleA.mjs
var purpleA = {
  purpleA1: "hsla(0, 0%, 0%, 0)",
  purpleA2: "hsla(280, 96.5%, 57.5%, 0.045)",
  purpleA3: "hsla(279, 98.7%, 62.8%, 0.129)",
  purpleA4: "hsla(279, 99.1%, 64.0%, 0.191)",
  purpleA5: "hsla(278, 99.8%, 64.2%, 0.248)",
  purpleA6: "hsla(276, 99.6%, 64.6%, 0.328)",
  purpleA7: "hsla(274, 99.9%, 64.6%, 0.456)",
  purpleA8: "hsla(272, 99.7%, 64.6%, 0.660)",
  purpleA9: "hsla(272, 99.9%, 69.1%, 0.748)",
  purpleA10: "hsla(273, 100%, 71.3%, 0.801)",
  purpleA11: "hsla(275, 99.9%, 75.3%, 0.934)",
  purpleA12: "hsla(286, 100%, 97.1%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/redA.mjs
var redA = {
  redA1: "hsla(0, 0%, 0%, 0)",
  redA2: "hsla(5, 98.5%, 53.8%, 0.045)",
  redA3: "hsla(359, 99.1%, 61.1%, 0.130)",
  redA4: "hsla(358, 98.8%, 61.0%, 0.184)",
  redA5: "hsla(357, 99.6%, 60.3%, 0.237)",
  redA6: "hsla(358, 99.6%, 60.3%, 0.322)",
  redA7: "hsla(357, 100%, 59.5%, 0.442)",
  redA8: "hsla(358, 99.8%, 59.1%, 0.621)",
  redA9: "hsla(358, 100%, 65.5%, 0.884)",
  redA10: "hsla(358, 100%, 67.5%, 0.942)",
  redA11: "hsla(358, 100%, 69.7%, 0.980)",
  redA12: "hsla(352, 100%, 97.1%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/sageA.mjs
var sageA = {
  sageA1: "hsla(0, 0%, 0%, 0)",
  sageA2: "hsla(123, 94.4%, 91.4%, 0.026)",
  sageA3: "hsla(123, 82.9%, 91.0%, 0.057)",
  sageA4: "hsla(124, 97.9%, 94.5%, 0.082)",
  sageA5: "hsla(125, 90.0%, 95.2%, 0.104)",
  sageA6: "hsla(142, 95.1%, 94.8%, 0.134)",
  sageA7: "hsla(143, 92.8%, 95.7%, 0.173)",
  sageA8: "hsla(146, 94.7%, 95.3%, 0.255)",
  sageA9: "hsla(151, 98.2%, 94.4%, 0.397)",
  sageA10: "hsla(148, 99.5%, 95.5%, 0.457)",
  sageA11: "hsla(152, 95.1%, 97.3%, 0.600)",
  sageA12: "hsla(149, 93.3%, 99.6%, 0.927)"
};

// node_modules/@tamagui/colors/dist/esm/dark/sandA.mjs
var sandA = {
  sandA1: "hsla(0, 0%, 0%, 0)",
  sandA2: "hsla(60, 89.8%, 91.4%, 0.026)",
  sandA3: "hsla(60, 95.5%, 92.5%, 0.056)",
  sandA4: "hsla(60, 75.6%, 96.4%, 0.078)",
  sandA5: "hsla(60, 81.9%, 95.2%, 0.104)",
  sandA6: "hsla(41, 87.6%, 94.8%, 0.134)",
  sandA7: "hsla(60, 95.4%, 96.2%, 0.172)",
  sandA8: "hsla(49, 93.5%, 95.7%, 0.254)",
  sandA9: "hsla(52, 97.3%, 96.2%, 0.391)",
  sandA10: "hsla(52, 97.8%, 96.7%, 0.451)",
  sandA11: "hsla(51, 97.0%, 97.8%, 0.597)",
  sandA12: "hsla(60, 88.7%, 99.8%, 0.923)"
};

// node_modules/@tamagui/colors/dist/esm/dark/skyA.mjs
var skyA = {
  skyA1: "hsla(0, 0%, 0%, 0)",
  skyA2: "hsla(208, 100%, 49.8%, 0.045)",
  skyA3: "hsla(201, 100%, 49.8%, 0.099)",
  skyA4: "hsla(201, 100%, 50.0%, 0.148)",
  skyA5: "hsla(200, 100%, 49.8%, 0.198)",
  skyA6: "hsla(199, 100%, 49.9%, 0.256)",
  skyA7: "hsla(199, 100%, 49.9%, 0.337)",
  skyA8: "hsla(199, 100%, 50.0%, 0.453)",
  skyA9: "hsla(192, 100%, 70.8%, 0.980)",
  skyA10: "hsla(190, 100%, 77.6%, 0.980)",
  skyA11: "hsla(192, 99.9%, 59.6%, 0.924)",
  skyA12: "hsla(189, 100%, 96.8%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/slateA.mjs
var slateA = {
  slateA1: "hsla(0, 0%, 0%, 0)",
  slateA2: "hsla(181, 98.9%, 91.8%, 0.026)",
  slateA3: "hsla(182, 86.7%, 91.4%, 0.057)",
  slateA4: "hsla(209, 86.7%, 93.9%, 0.083)",
  slateA5: "hsla(200, 90.3%, 93.4%, 0.109)",
  slateA6: "hsla(209, 95.3%, 93.5%, 0.139)",
  slateA7: "hsla(204, 98.5%, 93.9%, 0.182)",
  slateA8: "hsla(209, 94.0%, 94.7%, 0.265)",
  slateA9: "hsla(207, 97.3%, 94.0%, 0.412)",
  slateA10: "hsla(209, 99.4%, 95.2%, 0.472)",
  slateA11: "hsla(208, 98.7%, 96.8%, 0.615)",
  slateA12: "hsla(211, 86.7%, 99.6%, 0.927)"
};

// node_modules/@tamagui/colors/dist/esm/dark/tealA.mjs
var tealA = {
  tealA1: "hsla(0, 0%, 0%, 0)",
  tealA2: "hsla(171, 100%, 49.2%, 0.031)",
  tealA3: "hsla(172, 100%, 49.7%, 0.070)",
  tealA4: "hsla(175, 100%, 49.7%, 0.105)",
  tealA5: "hsla(174, 98.9%, 50.1%, 0.140)",
  tealA6: "hsla(174, 100%, 51.8%, 0.187)",
  tealA7: "hsla(173, 99.6%, 53.2%, 0.257)",
  tealA8: "hsla(174, 99.6%, 53.3%, 0.366)",
  tealA9: "hsla(173, 99.9%, 54.6%, 0.609)",
  tealA10: "hsla(174, 99.9%, 53.8%, 0.670)",
  tealA11: "hsla(174, 100%, 52.0%, 0.748)",
  tealA12: "hsla(166, 98.6%, 95.0%, 0.979)"
};

// node_modules/@tamagui/colors/dist/esm/dark/tomatoA.mjs
var tomatoA = {
  tomatoA1: "hsla(0, 0%, 0%, 0)",
  tomatoA2: "hsla(5, 100%, 49.6%, 0.058)",
  tomatoA3: "hsla(6, 99.6%, 54.9%, 0.133)",
  tomatoA4: "hsla(6, 99.2%, 55.4%, 0.191)",
  tomatoA5: "hsla(6, 99.5%, 55.8%, 0.244)",
  tomatoA6: "hsla(7, 99.7%, 55.9%, 0.319)",
  tomatoA7: "hsla(8, 99.8%, 54.8%, 0.434)",
  tomatoA8: "hsla(10, 99.8%, 53.5%, 0.598)",
  tomatoA9: "hsla(10, 100%, 59.7%, 0.885)",
  tomatoA10: "hsla(10, 100%, 63.6%, 0.916)",
  tomatoA11: "hsla(10, 99.7%, 66.4%, 0.939)",
  tomatoA12: "hsla(12, 100%, 97.1%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/violetA.mjs
var violetA = {
  violetA1: "hsla(0, 0%, 0%, 0)",
  violetA2: "hsla(258, 98.2%, 61.0%, 0.054)",
  violetA3: "hsla(252, 98.8%, 65.8%, 0.148)",
  violetA4: "hsla(253, 99.7%, 65.7%, 0.219)",
  violetA5: "hsla(252, 99.7%, 66.4%, 0.286)",
  violetA6: "hsla(251, 99.7%, 66.2%, 0.371)",
  violetA7: "hsla(250, 99.7%, 66.3%, 0.514)",
  violetA8: "hsla(250, 99.7%, 66.1%, 0.733)",
  violetA9: "hsla(252, 99.9%, 70.3%, 0.786)",
  violetA10: "hsla(251, 99.9%, 72.9%, 0.844)",
  violetA11: "hsla(250, 100%, 77.9%, 0.980)",
  violetA12: "hsla(254, 100%, 97.5%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/dark/yellowA.mjs
var yellowA = {
  yellowA1: "hsla(0, 0%, 0%, 0)",
  yellowA2: "hsla(49, 100%, 49.1%, 0.027)",
  yellowA3: "hsla(45, 100%, 49.7%, 0.071)",
  yellowA4: "hsla(46, 100%, 49.7%, 0.111)",
  yellowA5: "hsla(47, 100%, 49.9%, 0.150)",
  yellowA6: "hsla(51, 100%, 49.8%, 0.199)",
  yellowA7: "hsla(51, 99.8%, 53.6%, 0.269)",
  yellowA8: "hsla(51, 100%, 49.9%, 0.371)",
  yellowA9: "hsla(53, 100%, 52.0%, 0.956)",
  yellowA10: "hsla(56, 100%, 68.4%, 0.980)",
  yellowA11: "hsla(48, 100%, 50.0%, 0.934)",
  yellowA12: "hsla(60, 100%, 91.8%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/light/amber.mjs
var amber2 = {
  amber1: "hsl(39, 70.0%, 99.0%)",
  amber2: "hsl(40, 100%, 96.5%)",
  amber3: "hsl(44, 100%, 91.7%)",
  amber4: "hsl(43, 100%, 86.8%)",
  amber5: "hsl(42, 100%, 81.8%)",
  amber6: "hsl(38, 99.7%, 76.3%)",
  amber7: "hsl(36, 86.1%, 67.1%)",
  amber8: "hsl(35, 85.2%, 55.1%)",
  amber9: "hsl(39, 100%, 57.0%)",
  amber10: "hsl(35, 100%, 55.5%)",
  amber11: "hsl(30, 100%, 34.0%)",
  amber12: "hsl(20, 80.0%, 17.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/blue.mjs
var blue2 = {
  blue1: "hsl(206, 100%, 99.2%)",
  blue2: "hsl(210, 100%, 98.0%)",
  blue3: "hsl(209, 100%, 96.5%)",
  blue4: "hsl(210, 98.8%, 94.0%)",
  blue5: "hsl(209, 95.0%, 90.1%)",
  blue6: "hsl(209, 81.2%, 84.5%)",
  blue7: "hsl(208, 77.5%, 76.9%)",
  blue8: "hsl(206, 81.9%, 65.3%)",
  blue9: "hsl(206, 100%, 50.0%)",
  blue10: "hsl(208, 100%, 47.3%)",
  blue11: "hsl(211, 100%, 43.2%)",
  blue12: "hsl(211, 100%, 15.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/bronze.mjs
var bronze2 = {
  bronze1: "hsl(15, 30.0%, 99.1%)",
  bronze2: "hsl(17, 63.6%, 97.8%)",
  bronze3: "hsl(17, 42.1%, 95.2%)",
  bronze4: "hsl(17, 35.2%, 92.1%)",
  bronze5: "hsl(17, 31.5%, 88.2%)",
  bronze6: "hsl(17, 29.0%, 83.0%)",
  bronze7: "hsl(17, 26.9%, 75.6%)",
  bronze8: "hsl(17, 25.1%, 66.5%)",
  bronze9: "hsl(17, 20.0%, 54.0%)",
  bronze10: "hsl(17, 18.1%, 50.1%)",
  bronze11: "hsl(15, 20.0%, 43.1%)",
  bronze12: "hsl(12, 22.0%, 21.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/brown.mjs
var brown2 = {
  brown1: "hsl(30, 40.0%, 99.1%)",
  brown2: "hsl(30, 50.0%, 97.6%)",
  brown3: "hsl(30, 52.5%, 94.6%)",
  brown4: "hsl(30, 53.0%, 91.2%)",
  brown5: "hsl(29, 52.9%, 86.8%)",
  brown6: "hsl(29, 52.5%, 80.9%)",
  brown7: "hsl(29, 51.5%, 72.8%)",
  brown8: "hsl(28, 50.0%, 63.1%)",
  brown9: "hsl(28, 34.0%, 51.0%)",
  brown10: "hsl(27, 31.8%, 47.6%)",
  brown11: "hsl(25, 30.0%, 41.0%)",
  brown12: "hsl(20, 30.0%, 19.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/crimson.mjs
var crimson2 = {
  crimson1: "hsl(332, 100%, 99.4%)",
  crimson2: "hsl(330, 100%, 98.4%)",
  crimson3: "hsl(331, 85.6%, 96.6%)",
  crimson4: "hsl(331, 78.1%, 94.2%)",
  crimson5: "hsl(332, 72.1%, 91.1%)",
  crimson6: "hsl(333, 67.0%, 86.7%)",
  crimson7: "hsl(335, 63.5%, 80.4%)",
  crimson8: "hsl(336, 62.3%, 72.9%)",
  crimson9: "hsl(336, 80.0%, 57.8%)",
  crimson10: "hsl(336, 73.7%, 53.5%)",
  crimson11: "hsl(336, 75.0%, 47.2%)",
  crimson12: "hsl(340, 65.0%, 14.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/cyan.mjs
var cyan2 = {
  cyan1: "hsl(185, 60.0%, 98.7%)",
  cyan2: "hsl(185, 73.3%, 97.1%)",
  cyan3: "hsl(186, 70.2%, 94.4%)",
  cyan4: "hsl(186, 63.8%, 90.6%)",
  cyan5: "hsl(187, 58.3%, 85.4%)",
  cyan6: "hsl(188, 54.6%, 78.4%)",
  cyan7: "hsl(189, 53.7%, 68.7%)",
  cyan8: "hsl(189, 60.3%, 52.5%)",
  cyan9: "hsl(190, 95.0%, 39.0%)",
  cyan10: "hsl(191, 91.2%, 36.8%)",
  cyan11: "hsl(192, 85.0%, 31.0%)",
  cyan12: "hsl(192, 88.0%, 12.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/gold.mjs
var gold2 = {
  gold1: "hsl(50, 20.0%, 99.1%)",
  gold2: "hsl(47, 52.9%, 96.7%)",
  gold3: "hsl(46, 38.2%, 93.7%)",
  gold4: "hsl(44, 32.7%, 90.1%)",
  gold5: "hsl(43, 29.9%, 85.7%)",
  gold6: "hsl(41, 28.3%, 79.8%)",
  gold7: "hsl(39, 27.6%, 71.9%)",
  gold8: "hsl(36, 27.2%, 61.8%)",
  gold9: "hsl(36, 20.0%, 49.5%)",
  gold10: "hsl(36, 19.8%, 45.7%)",
  gold11: "hsl(36, 20.0%, 39.0%)",
  gold12: "hsl(36, 16.0%, 20.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/grass.mjs
var grass2 = {
  grass1: "hsl(116, 50.0%, 98.9%)",
  grass2: "hsl(120, 60.0%, 97.1%)",
  grass3: "hsl(120, 53.6%, 94.8%)",
  grass4: "hsl(121, 47.5%, 91.4%)",
  grass5: "hsl(122, 42.6%, 86.5%)",
  grass6: "hsl(124, 39.0%, 79.7%)",
  grass7: "hsl(126, 37.1%, 70.2%)",
  grass8: "hsl(131, 38.1%, 56.3%)",
  grass9: "hsl(131, 41.0%, 46.5%)",
  grass10: "hsl(132, 43.1%, 42.2%)",
  grass11: "hsl(133, 50.0%, 32.5%)",
  grass12: "hsl(130, 30.0%, 14.9%)"
};

// node_modules/@tamagui/colors/dist/esm/light/gray.mjs
var gray2 = {
  gray1: "hsl(0, 0%, 99.0%)",
  gray2: "hsl(0, 0%, 97.3%)",
  gray3: "hsl(0, 0%, 95.1%)",
  gray4: "hsl(0, 0%, 93.0%)",
  gray5: "hsl(0, 0%, 90.9%)",
  gray6: "hsl(0, 0%, 88.7%)",
  gray7: "hsl(0, 0%, 85.8%)",
  gray8: "hsl(0, 0%, 78.0%)",
  gray9: "hsl(0, 0%, 56.1%)",
  gray10: "hsl(0, 0%, 52.3%)",
  gray11: "hsl(0, 0%, 43.5%)",
  gray12: "hsl(0, 0%, 9.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/green.mjs
var green2 = {
  green1: "hsl(136, 50.0%, 98.9%)",
  green2: "hsl(138, 62.5%, 96.9%)",
  green3: "hsl(139, 55.2%, 94.5%)",
  green4: "hsl(140, 48.7%, 91.0%)",
  green5: "hsl(141, 43.7%, 86.0%)",
  green6: "hsl(143, 40.3%, 79.0%)",
  green7: "hsl(146, 38.5%, 69.0%)",
  green8: "hsl(151, 40.2%, 54.1%)",
  green9: "hsl(151, 55.0%, 41.5%)",
  green10: "hsl(152, 57.5%, 37.6%)",
  green11: "hsl(153, 67.0%, 28.5%)",
  green12: "hsl(155, 40.0%, 14.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/indigo.mjs
var indigo2 = {
  indigo1: "hsl(225, 60.0%, 99.4%)",
  indigo2: "hsl(223, 100%, 98.6%)",
  indigo3: "hsl(223, 98.4%, 97.1%)",
  indigo4: "hsl(223, 92.9%, 95.0%)",
  indigo5: "hsl(224, 87.1%, 92.0%)",
  indigo6: "hsl(224, 81.9%, 87.8%)",
  indigo7: "hsl(225, 77.4%, 82.1%)",
  indigo8: "hsl(226, 75.4%, 74.5%)",
  indigo9: "hsl(226, 70.0%, 55.5%)",
  indigo10: "hsl(226, 58.6%, 51.3%)",
  indigo11: "hsl(226, 55.0%, 45.0%)",
  indigo12: "hsl(226, 62.0%, 17.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/lime.mjs
var lime2 = {
  lime1: "hsl(85, 50.0%, 98.7%)",
  lime2: "hsl(85, 66.7%, 96.5%)",
  lime3: "hsl(85, 76.0%, 92.3%)",
  lime4: "hsl(84, 75.3%, 87.5%)",
  lime5: "hsl(84, 71.5%, 81.9%)",
  lime6: "hsl(82, 65.0%, 74.6%)",
  lime7: "hsl(79, 53.2%, 61.8%)",
  lime8: "hsl(76, 61.7%, 45.1%)",
  lime9: "hsl(81, 67.0%, 50.0%)",
  lime10: "hsl(80, 68.3%, 46.9%)",
  lime11: "hsl(75, 80.0%, 26.0%)",
  lime12: "hsl(78, 70.0%, 11.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/mauve.mjs
var mauve2 = {
  mauve1: "hsl(300, 20.0%, 99.0%)",
  mauve2: "hsl(300, 7.7%, 97.5%)",
  mauve3: "hsl(294, 5.5%, 95.3%)",
  mauve4: "hsl(289, 4.7%, 93.3%)",
  mauve5: "hsl(283, 4.4%, 91.3%)",
  mauve6: "hsl(278, 4.1%, 89.1%)",
  mauve7: "hsl(271, 3.9%, 86.3%)",
  mauve8: "hsl(255, 3.7%, 78.8%)",
  mauve9: "hsl(252, 4.0%, 57.3%)",
  mauve10: "hsl(253, 3.5%, 53.5%)",
  mauve11: "hsl(252, 4.0%, 44.8%)",
  mauve12: "hsl(260, 25.0%, 11.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/mint.mjs
var mint2 = {
  mint1: "hsl(165, 80.0%, 98.8%)",
  mint2: "hsl(164, 88.2%, 96.7%)",
  mint3: "hsl(164, 76.6%, 93.3%)",
  mint4: "hsl(165, 68.8%, 89.5%)",
  mint5: "hsl(165, 60.6%, 84.5%)",
  mint6: "hsl(165, 53.5%, 76.9%)",
  mint7: "hsl(166, 50.7%, 66.1%)",
  mint8: "hsl(168, 52.8%, 51.0%)",
  mint9: "hsl(167, 65.0%, 66.0%)",
  mint10: "hsl(167, 59.3%, 63.1%)",
  mint11: "hsl(172, 72.0%, 28.5%)",
  mint12: "hsl(172, 70.0%, 12.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/olive.mjs
var olive2 = {
  olive1: "hsl(110, 20.0%, 99.0%)",
  olive2: "hsl(120, 16.7%, 97.6%)",
  olive3: "hsl(119, 10.1%, 95.2%)",
  olive4: "hsl(118, 8.1%, 93.0%)",
  olive5: "hsl(117, 7.1%, 90.8%)",
  olive6: "hsl(115, 6.4%, 88.5%)",
  olive7: "hsl(114, 5.9%, 85.4%)",
  olive8: "hsl(110, 5.2%, 77.3%)",
  olive9: "hsl(110, 3.5%, 55.5%)",
  olive10: "hsl(111, 2.8%, 51.7%)",
  olive11: "hsl(110, 3.0%, 43.0%)",
  olive12: "hsl(110, 25.0%, 9.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/orange.mjs
var orange2 = {
  orange1: "hsl(24, 70.0%, 99.0%)",
  orange2: "hsl(24, 83.3%, 97.6%)",
  orange3: "hsl(24, 100%, 95.3%)",
  orange4: "hsl(25, 100%, 92.2%)",
  orange5: "hsl(25, 100%, 88.2%)",
  orange6: "hsl(25, 100%, 82.8%)",
  orange7: "hsl(24, 100%, 75.3%)",
  orange8: "hsl(24, 94.5%, 64.3%)",
  orange9: "hsl(24, 94.0%, 50.0%)",
  orange10: "hsl(24, 100%, 46.5%)",
  orange11: "hsl(24, 100%, 37.0%)",
  orange12: "hsl(15, 60.0%, 17.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/pink.mjs
var pink2 = {
  pink1: "hsl(322, 100%, 99.4%)",
  pink2: "hsl(323, 100%, 98.4%)",
  pink3: "hsl(323, 86.3%, 96.5%)",
  pink4: "hsl(323, 78.7%, 94.2%)",
  pink5: "hsl(323, 72.2%, 91.1%)",
  pink6: "hsl(323, 66.3%, 86.6%)",
  pink7: "hsl(323, 62.0%, 80.1%)",
  pink8: "hsl(323, 60.3%, 72.4%)",
  pink9: "hsl(322, 65.0%, 54.5%)",
  pink10: "hsl(322, 63.9%, 50.7%)",
  pink11: "hsl(322, 75.0%, 46.0%)",
  pink12: "hsl(320, 70.0%, 13.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/plum.mjs
var plum2 = {
  plum1: "hsl(292, 90.0%, 99.4%)",
  plum2: "hsl(300, 100%, 98.6%)",
  plum3: "hsl(299, 71.2%, 96.4%)",
  plum4: "hsl(299, 62.0%, 93.8%)",
  plum5: "hsl(298, 56.1%, 90.5%)",
  plum6: "hsl(296, 51.3%, 85.8%)",
  plum7: "hsl(295, 48.2%, 78.9%)",
  plum8: "hsl(292, 47.7%, 70.8%)",
  plum9: "hsl(292, 45.0%, 51.0%)",
  plum10: "hsl(292, 50.2%, 46.9%)",
  plum11: "hsl(292, 60.0%, 42.5%)",
  plum12: "hsl(291, 66.0%, 14.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/purple.mjs
var purple2 = {
  purple1: "hsl(280, 65.0%, 99.4%)",
  purple2: "hsl(276, 100%, 99.0%)",
  purple3: "hsl(276, 83.1%, 97.0%)",
  purple4: "hsl(275, 76.4%, 94.7%)",
  purple5: "hsl(275, 70.8%, 91.8%)",
  purple6: "hsl(274, 65.4%, 87.8%)",
  purple7: "hsl(273, 61.0%, 81.7%)",
  purple8: "hsl(272, 60.0%, 73.5%)",
  purple9: "hsl(272, 51.0%, 54.0%)",
  purple10: "hsl(272, 46.8%, 50.3%)",
  purple11: "hsl(272, 50.0%, 45.8%)",
  purple12: "hsl(272, 66.0%, 16.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/red.mjs
var red2 = {
  red1: "hsl(359, 100%, 99.4%)",
  red2: "hsl(359, 100%, 98.6%)",
  red3: "hsl(360, 100%, 96.8%)",
  red4: "hsl(360, 97.9%, 94.8%)",
  red5: "hsl(360, 90.2%, 91.9%)",
  red6: "hsl(360, 81.7%, 87.8%)",
  red7: "hsl(359, 74.2%, 81.7%)",
  red8: "hsl(359, 69.5%, 74.3%)",
  red9: "hsl(358, 75.0%, 59.0%)",
  red10: "hsl(358, 69.4%, 55.2%)",
  red11: "hsl(358, 65.0%, 48.7%)",
  red12: "hsl(354, 50.0%, 14.6%)"
};

// node_modules/@tamagui/colors/dist/esm/light/sage.mjs
var sage2 = {
  sage1: "hsl(155, 30.0%, 98.8%)",
  sage2: "hsl(150, 16.7%, 97.6%)",
  sage3: "hsl(151, 10.6%, 95.2%)",
  sage4: "hsl(151, 8.8%, 93.0%)",
  sage5: "hsl(151, 7.8%, 90.8%)",
  sage6: "hsl(152, 7.2%, 88.4%)",
  sage7: "hsl(153, 6.7%, 85.3%)",
  sage8: "hsl(154, 6.1%, 77.5%)",
  sage9: "hsl(155, 3.5%, 55.5%)",
  sage10: "hsl(154, 2.8%, 51.7%)",
  sage11: "hsl(155, 3.0%, 43.0%)",
  sage12: "hsl(155, 24.0%, 9.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/sand.mjs
var sand2 = {
  sand1: "hsl(50, 20.0%, 99.0%)",
  sand2: "hsl(60, 7.7%, 97.5%)",
  sand3: "hsl(59, 6.5%, 95.1%)",
  sand4: "hsl(58, 6.1%, 92.9%)",
  sand5: "hsl(57, 6.0%, 90.7%)",
  sand6: "hsl(56, 5.9%, 88.4%)",
  sand7: "hsl(55, 5.9%, 85.2%)",
  sand8: "hsl(51, 6.0%, 77.1%)",
  sand9: "hsl(50, 2.0%, 55.7%)",
  sand10: "hsl(55, 1.7%, 51.9%)",
  sand11: "hsl(50, 2.0%, 43.1%)",
  sand12: "hsl(50, 6.0%, 10.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/sky.mjs
var sky2 = {
  sky1: "hsl(193, 100%, 98.8%)",
  sky2: "hsl(193, 100%, 97.3%)",
  sky3: "hsl(193, 99.0%, 94.7%)",
  sky4: "hsl(193, 91.4%, 91.4%)",
  sky5: "hsl(194, 82.0%, 86.6%)",
  sky6: "hsl(194, 74.1%, 79.5%)",
  sky7: "hsl(194, 72.3%, 69.6%)",
  sky8: "hsl(193, 77.9%, 53.9%)",
  sky9: "hsl(193, 98.0%, 70.0%)",
  sky10: "hsl(193, 87.0%, 66.5%)",
  sky11: "hsl(195, 100%, 31.5%)",
  sky12: "hsl(195, 100%, 13.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/slate.mjs
var slate2 = {
  slate1: "hsl(206, 30.0%, 98.8%)",
  slate2: "hsl(210, 16.7%, 97.6%)",
  slate3: "hsl(209, 13.3%, 95.3%)",
  slate4: "hsl(209, 12.2%, 93.2%)",
  slate5: "hsl(208, 11.7%, 91.1%)",
  slate6: "hsl(208, 11.3%, 88.9%)",
  slate7: "hsl(207, 11.1%, 85.9%)",
  slate8: "hsl(205, 10.7%, 78.0%)",
  slate9: "hsl(206, 6.0%, 56.1%)",
  slate10: "hsl(206, 5.8%, 52.3%)",
  slate11: "hsl(206, 6.0%, 43.5%)",
  slate12: "hsl(206, 24.0%, 9.0%)"
};

// node_modules/@tamagui/colors/dist/esm/light/teal.mjs
var teal2 = {
  teal1: "hsl(165, 60.0%, 98.8%)",
  teal2: "hsl(169, 64.7%, 96.7%)",
  teal3: "hsl(169, 59.8%, 94.0%)",
  teal4: "hsl(169, 53.1%, 90.2%)",
  teal5: "hsl(170, 47.1%, 85.0%)",
  teal6: "hsl(170, 42.6%, 77.9%)",
  teal7: "hsl(170, 39.9%, 68.1%)",
  teal8: "hsl(172, 42.1%, 52.5%)",
  teal9: "hsl(173, 80.0%, 36.0%)",
  teal10: "hsl(173, 83.4%, 32.5%)",
  teal11: "hsl(174, 90.0%, 25.2%)",
  teal12: "hsl(170, 50.0%, 12.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/tomato.mjs
var tomato2 = {
  tomato1: "hsl(10, 100%, 99.4%)",
  tomato2: "hsl(8, 100%, 98.4%)",
  tomato3: "hsl(8, 100%, 96.6%)",
  tomato4: "hsl(8, 100%, 94.3%)",
  tomato5: "hsl(8, 92.8%, 91.0%)",
  tomato6: "hsl(9, 84.7%, 86.3%)",
  tomato7: "hsl(10, 77.3%, 79.5%)",
  tomato8: "hsl(10, 71.6%, 71.0%)",
  tomato9: "hsl(10, 78.0%, 54.0%)",
  tomato10: "hsl(10, 71.5%, 50.0%)",
  tomato11: "hsl(10, 82.0%, 43.5%)",
  tomato12: "hsl(10, 50.0%, 13.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/violet.mjs
var violet2 = {
  violet1: "hsl(255, 65.0%, 99.4%)",
  violet2: "hsl(252, 100%, 99.0%)",
  violet3: "hsl(252, 96.9%, 97.4%)",
  violet4: "hsl(252, 91.5%, 95.5%)",
  violet5: "hsl(252, 85.1%, 93.0%)",
  violet6: "hsl(252, 77.8%, 89.4%)",
  violet7: "hsl(252, 71.0%, 83.7%)",
  violet8: "hsl(252, 68.6%, 76.3%)",
  violet9: "hsl(252, 56.0%, 57.5%)",
  violet10: "hsl(251, 48.1%, 53.5%)",
  violet11: "hsl(250, 43.0%, 48.0%)",
  violet12: "hsl(254, 60.0%, 18.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/yellow.mjs
var yellow2 = {
  yellow1: "hsl(60, 54.0%, 98.5%)",
  yellow2: "hsl(52, 100%, 95.5%)",
  yellow3: "hsl(55, 100%, 90.9%)",
  yellow4: "hsl(54, 100%, 86.6%)",
  yellow5: "hsl(52, 97.9%, 82.0%)",
  yellow6: "hsl(50, 89.4%, 76.1%)",
  yellow7: "hsl(47, 80.4%, 68.0%)",
  yellow8: "hsl(48, 100%, 46.1%)",
  yellow9: "hsl(53, 92.0%, 50.0%)",
  yellow10: "hsl(50, 100%, 48.5%)",
  yellow11: "hsl(42, 100%, 29.0%)",
  yellow12: "hsl(40, 55.0%, 13.5%)"
};

// node_modules/@tamagui/colors/dist/esm/light/amberA.mjs
var amberA2 = {
  amberA1: "hsla(40, 94.9%, 38.7%, 0.016)",
  amberA2: "hsla(40, 100%, 50.3%, 0.071)",
  amberA3: "hsla(44, 100%, 50.1%, 0.165)",
  amberA4: "hsla(43, 100%, 50.0%, 0.263)",
  amberA5: "hsla(42, 100%, 50.0%, 0.365)",
  amberA6: "hsla(38, 100%, 50.1%, 0.475)",
  amberA7: "hsla(36, 99.9%, 46.2%, 0.612)",
  amberA8: "hsla(35, 99.8%, 46.0%, 0.832)",
  amberA9: "hsla(39, 100%, 50.0%, 0.859)",
  amberA10: "hsla(35, 100%, 50.0%, 0.891)",
  amberA11: "hsla(29, 100%, 33.6%, 0.980)",
  amberA12: "hsla(20, 99.8%, 14.1%, 0.965)"
};

// node_modules/@tamagui/colors/dist/esm/light/blueA.mjs
var blueA2 = {
  blueA1: "hsla(210, 100%, 51.0%, 0.016)",
  blueA2: "hsla(210, 100%, 51.0%, 0.040)",
  blueA3: "hsla(210, 100%, 50.3%, 0.071)",
  blueA4: "hsla(210, 100%, 50.1%, 0.118)",
  blueA5: "hsla(208, 99.1%, 47.1%, 0.189)",
  blueA6: "hsla(209, 99.5%, 45.3%, 0.283)",
  blueA7: "hsla(208, 99.9%, 43.8%, 0.412)",
  blueA8: "hsla(206, 99.8%, 45.1%, 0.632)",
  blueA9: "hsla(206, 100%, 50.0%, 0.980)",
  blueA10: "hsla(208, 100%, 47.2%, 0.980)",
  blueA11: "hsla(212, 100%, 43.0%, 0.980)",
  blueA12: "hsla(213, 100%, 14.4%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/light/bronzeA.mjs
var bronzeA2 = {
  bronzeA1: "hsla(0, 89.3%, 18.3%, 0.012)",
  bronzeA2: "hsla(17, 95.1%, 40.1%, 0.036)",
  bronzeA3: "hsla(18, 98.3%, 29.8%, 0.067)",
  bronzeA4: "hsla(17, 99.6%, 26.0%, 0.106)",
  bronzeA5: "hsla(19, 99.6%, 23.8%, 0.157)",
  bronzeA6: "hsla(17, 99.2%, 22.5%, 0.220)",
  bronzeA7: "hsla(18, 99.7%, 21.6%, 0.310)",
  bronzeA8: "hsla(17, 99.5%, 20.2%, 0.420)",
  bronzeA9: "hsla(18, 99.9%, 16.7%, 0.553)",
  bronzeA10: "hsla(17, 99.2%, 15.4%, 0.589)",
  bronzeA11: "hsla(15, 99.9%, 13.2%, 0.655)",
  bronzeA12: "hsla(12, 98.7%, 5.7%, 0.832)"
};

// node_modules/@tamagui/colors/dist/esm/light/brownA.mjs
var brownA2 = {
  brownA1: "hsla(30, 94.3%, 34.6%, 0.012)",
  brownA2: "hsla(30, 94.3%, 34.6%, 0.036)",
  brownA3: "hsla(30, 97.7%, 33.9%, 0.083)",
  brownA4: "hsla(31, 98.5%, 34.2%, 0.134)",
  brownA5: "hsla(29, 100%, 34.3%, 0.200)",
  brownA6: "hsla(28, 99.2%, 34.6%, 0.291)",
  brownA7: "hsla(29, 99.8%, 33.8%, 0.412)",
  brownA8: "hsla(28, 100%, 33.3%, 0.553)",
  brownA9: "hsla(28, 99.9%, 25.5%, 0.655)",
  brownA10: "hsla(27, 99.7%, 22.4%, 0.675)",
  brownA11: "hsla(25, 99.8%, 17.3%, 0.714)",
  brownA12: "hsla(21, 99.4%, 6.6%, 0.867)"
};

// node_modules/@tamagui/colors/dist/esm/light/crimsonA.mjs
var crimsonA2 = {
  crimsonA1: "hsla(340, 100%, 51.0%, 0.012)",
  crimsonA2: "hsla(330, 100%, 51.0%, 0.032)",
  crimsonA3: "hsla(332, 99.1%, 47.1%, 0.063)",
  crimsonA4: "hsla(331, 99.9%, 44.3%, 0.102)",
  crimsonA5: "hsla(333, 99.9%, 42.3%, 0.153)",
  crimsonA6: "hsla(333, 99.5%, 40.5%, 0.224)",
  crimsonA7: "hsla(335, 99.7%, 39.1%, 0.322)",
  crimsonA8: "hsla(336, 99.5%, 38.5%, 0.440)",
  crimsonA9: "hsla(336, 99.9%, 44.3%, 0.761)",
  crimsonA10: "hsla(336, 100%, 42.5%, 0.808)",
  crimsonA11: "hsla(336, 99.8%, 40.3%, 0.883)",
  crimsonA12: "hsla(340, 99.0%, 10.0%, 0.950)"
};

// node_modules/@tamagui/colors/dist/esm/light/cyanA.mjs
var cyanA2 = {
  cyanA1: "hsla(195, 95.2%, 41.2%, 0.020)",
  cyanA2: "hsla(185, 99.9%, 42.3%, 0.051)",
  cyanA3: "hsla(186, 97.8%, 42.2%, 0.095)",
  cyanA4: "hsla(186, 99.9%, 38.5%, 0.153)",
  cyanA5: "hsla(187, 99.3%, 36.6%, 0.232)",
  cyanA6: "hsla(188, 99.4%, 35.4%, 0.334)",
  cyanA7: "hsla(189, 99.6%, 35.0%, 0.483)",
  cyanA8: "hsla(189, 99.9%, 37.6%, 0.761)",
  cyanA9: "hsla(190, 100%, 37.8%, 0.980)",
  cyanA10: "hsla(191, 99.9%, 34.6%, 0.969)",
  cyanA11: "hsla(192, 100%, 27.6%, 0.953)",
  cyanA12: "hsla(192, 100%, 11.0%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/light/goldA.mjs
var goldA2 = {
  goldA1: "hsla(60, 89.3%, 18.3%, 0.012)",
  goldA2: "hsla(47, 99.9%, 34.6%, 0.051)",
  goldA3: "hsla(45, 97.0%, 27.9%, 0.087)",
  goldA4: "hsla(46, 98.0%, 25.4%, 0.134)",
  goldA5: "hsla(43, 98.4%, 22.6%, 0.185)",
  goldA6: "hsla(41, 99.7%, 22.0%, 0.259)",
  goldA7: "hsla(38, 99.8%, 21.5%, 0.357)",
  goldA8: "hsla(36, 99.3%, 21.5%, 0.487)",
  goldA9: "hsla(36, 99.9%, 16.2%, 0.604)",
  goldA10: "hsla(36, 99.2%, 14.6%, 0.636)",
  goldA11: "hsla(35, 99.1%, 11.2%, 0.687)",
  goldA12: "hsla(38, 98.0%, 3.8%, 0.832)"
};

// node_modules/@tamagui/colors/dist/esm/light/grassA.mjs
var grassA2 = {
  grassA1: "hsla(120, 94.9%, 38.7%, 0.016)",
  grassA2: "hsla(120, 94.9%, 38.7%, 0.048)",
  grassA3: "hsla(120, 98.0%, 35.5%, 0.079)",
  grassA4: "hsla(120, 98.7%, 31.5%, 0.126)",
  grassA5: "hsla(122, 98.5%, 29.9%, 0.193)",
  grassA6: "hsla(125, 99.2%, 27.9%, 0.283)",
  grassA7: "hsla(125, 99.9%, 27.0%, 0.408)",
  grassA8: "hsla(131, 100%, 27.6%, 0.604)",
  grassA9: "hsla(131, 99.7%, 26.3%, 0.726)",
  grassA10: "hsla(132, 99.9%, 24.0%, 0.761)",
  grassA11: "hsla(133, 99.5%, 19.5%, 0.840)",
  grassA12: "hsla(128, 98.0%, 4.9%, 0.895)"
};

// node_modules/@tamagui/colors/dist/esm/light/grayA.mjs
var grayA2 = {
  grayA1: "hsla(0, 0%, 0%, 0.012)",
  grayA2: "hsla(0, 0%, 0%, 0.027)",
  grayA3: "hsla(0, 0%, 0%, 0.047)",
  grayA4: "hsla(0, 0%, 0%, 0.071)",
  grayA5: "hsla(0, 0%, 0%, 0.090)",
  grayA6: "hsla(0, 0%, 0%, 0.114)",
  grayA7: "hsla(0, 0%, 0%, 0.141)",
  grayA8: "hsla(0, 0%, 0%, 0.220)",
  grayA9: "hsla(0, 0%, 0%, 0.439)",
  grayA10: "hsla(0, 0%, 0%, 0.478)",
  grayA11: "hsla(0, 0%, 0%, 0.565)",
  grayA12: "hsla(0, 0%, 0%, 0.910)"
};

// node_modules/@tamagui/colors/dist/esm/light/greenA.mjs
var greenA2 = {
  greenA1: "hsla(140, 94.9%, 38.7%, 0.016)",
  greenA2: "hsla(138, 99.9%, 38.5%, 0.051)",
  greenA3: "hsla(139, 97.7%, 36.9%, 0.087)",
  greenA4: "hsla(139, 98.5%, 32.7%, 0.134)",
  greenA5: "hsla(141, 100%, 30.4%, 0.200)",
  greenA6: "hsla(142, 99.0%, 28.9%, 0.295)",
  greenA7: "hsla(146, 99.5%, 27.6%, 0.428)",
  greenA8: "hsla(151, 99.5%, 28.8%, 0.644)",
  greenA9: "hsla(151, 99.9%, 28.0%, 0.812)",
  greenA10: "hsla(152, 99.6%, 25.8%, 0.840)",
  greenA11: "hsla(153, 99.9%, 21.0%, 0.906)",
  greenA12: "hsla(155, 99.4%, 6.2%, 0.918)"
};

// node_modules/@tamagui/colors/dist/esm/light/indigoA.mjs
var indigoA2 = {
  indigoA1: "hsla(240, 92.6%, 26.5%, 0.008)",
  indigoA2: "hsla(223, 100%, 51.0%, 0.028)",
  indigoA3: "hsla(224, 100%, 50.1%, 0.059)",
  indigoA4: "hsla(223, 98.0%, 48.5%, 0.099)",
  indigoA5: "hsla(225, 98.6%, 46.4%, 0.150)",
  indigoA6: "hsla(224, 99.5%, 44.9%, 0.224)",
  indigoA7: "hsla(225, 99.7%, 43.9%, 0.318)",
  indigoA8: "hsla(226, 99.5%, 43.1%, 0.448)",
  indigoA9: "hsla(226, 100%, 41.2%, 0.757)",
  indigoA10: "hsla(226, 99.8%, 37.1%, 0.773)",
  indigoA11: "hsla(226, 99.6%, 31.1%, 0.797)",
  indigoA12: "hsla(226, 99.3%, 11.4%, 0.938)"
};

// node_modules/@tamagui/colors/dist/esm/light/limeA.mjs
var limeA2 = {
  limeA1: "hsla(80, 93.8%, 31.4%, 0.020)",
  limeA2: "hsla(85, 99.3%, 40.2%, 0.059)",
  limeA3: "hsla(84, 98.7%, 43.2%, 0.138)",
  limeA4: "hsla(84, 99.6%, 43.0%, 0.220)",
  limeA5: "hsla(85, 99.8%, 41.8%, 0.310)",
  limeA6: "hsla(82, 99.8%, 39.3%, 0.420)",
  limeA7: "hsla(79, 99.7%, 34.6%, 0.585)",
  limeA8: "hsla(76, 99.8%, 33.7%, 0.828)",
  limeA9: "hsla(81, 99.8%, 40.2%, 0.836)",
  limeA10: "hsla(80, 100%, 37.6%, 0.851)",
  limeA11: "hsla(75, 99.5%, 22.0%, 0.950)",
  limeA12: "hsla(78, 99.6%, 8.4%, 0.965)"
};

// node_modules/@tamagui/colors/dist/esm/light/mauveA.mjs
var mauveA2 = {
  mauveA1: "hsla(300, 89.3%, 18.3%, 0.012)",
  mauveA2: "hsla(300, 78.1%, 9.0%, 0.028)",
  mauveA3: "hsla(300, 99.5%, 7.7%, 0.051)",
  mauveA4: "hsla(270, 90.5%, 6.1%, 0.071)",
  mauveA5: "hsla(270, 83.0%, 5.2%, 0.091)",
  mauveA6: "hsla(300, 93.5%, 3.7%, 0.114)",
  mauveA7: "hsla(270, 82.6%, 3.3%, 0.142)",
  mauveA8: "hsla(255, 95.2%, 3.7%, 0.220)",
  mauveA9: "hsla(255, 94.8%, 3.7%, 0.444)",
  mauveA10: "hsla(253, 96.5%, 3.8%, 0.483)",
  mauveA11: "hsla(247, 97.9%, 3.2%, 0.569)",
  mauveA12: "hsla(261, 98.7%, 3.0%, 0.918)"
};

// node_modules/@tamagui/colors/dist/esm/light/mintA.mjs
var mintA2 = {
  mintA1: "hsla(168, 95.4%, 42.8%, 0.024)",
  mintA2: "hsla(164, 99.1%, 47.1%, 0.063)",
  mintA3: "hsla(164, 99.3%, 43.5%, 0.118)",
  mintA4: "hsla(164, 99.3%, 41.3%, 0.177)",
  mintA5: "hsla(165, 99.0%, 37.5%, 0.248)",
  mintA6: "hsla(165, 100%, 35.0%, 0.353)",
  mintA7: "hsla(166, 99.9%, 33.5%, 0.510)",
  mintA8: "hsla(168, 99.6%, 34.6%, 0.750)",
  mintA9: "hsla(167, 99.9%, 39.5%, 0.561)",
  mintA10: "hsla(167, 99.7%, 37.4%, 0.589)",
  mintA11: "hsla(172, 99.8%, 22.4%, 0.922)",
  mintA12: "hsla(172, 99.7%, 8.8%, 0.965)"
};

// node_modules/@tamagui/colors/dist/esm/light/oliveA.mjs
var oliveA2 = {
  oliveA1: "hsla(120, 89.3%, 18.3%, 0.012)",
  oliveA2: "hsla(120, 87.7%, 16.0%, 0.028)",
  oliveA3: "hsla(120, 99.5%, 7.7%, 0.051)",
  oliveA4: "hsla(120, 92.3%, 8.5%, 0.075)",
  oliveA5: "hsla(120, 86.0%, 6.9%, 0.099)",
  oliveA6: "hsla(120, 94.8%, 6.8%, 0.122)",
  oliveA7: "hsla(120, 99.3%, 5.2%, 0.153)",
  oliveA8: "hsla(110, 93.8%, 5.2%, 0.240)",
  oliveA9: "hsla(111, 98.7%, 3.0%, 0.459)",
  oliveA10: "hsla(111, 93.5%, 2.9%, 0.499)",
  oliveA11: "hsla(111, 95.2%, 2.5%, 0.585)",
  oliveA12: "hsla(110, 97.6%, 2.6%, 0.930)"
};

// node_modules/@tamagui/colors/dist/esm/light/orangeA.mjs
var orangeA2 = {
  orangeA1: "hsla(20, 94.9%, 38.7%, 0.016)",
  orangeA2: "hsla(24, 95.8%, 46.5%, 0.044)",
  orangeA3: "hsla(25, 100%, 50.5%, 0.095)",
  orangeA4: "hsla(26, 100%, 50.0%, 0.157)",
  orangeA5: "hsla(25, 100%, 50.1%, 0.236)",
  orangeA6: "hsla(25, 100%, 50.1%, 0.346)",
  orangeA7: "hsla(24, 100%, 50.1%, 0.495)",
  orangeA8: "hsla(24, 99.7%, 48.7%, 0.695)",
  orangeA9: "hsla(24, 99.9%, 48.4%, 0.969)",
  orangeA10: "hsla(23, 100%, 46.4%, 0.980)",
  orangeA11: "hsla(23, 100%, 36.8%, 0.980)",
  orangeA12: "hsla(15, 99.4%, 11.0%, 0.934)"
};

// node_modules/@tamagui/colors/dist/esm/light/pinkA.mjs
var pinkA2 = {
  pinkA1: "hsla(320, 100%, 51.0%, 0.012)",
  pinkA2: "hsla(323, 100%, 51.0%, 0.032)",
  pinkA3: "hsla(323, 98.9%, 47.3%, 0.067)",
  pinkA4: "hsla(323, 99.9%, 44.3%, 0.102)",
  pinkA5: "hsla(324, 99.9%, 42.3%, 0.153)",
  pinkA6: "hsla(323, 99.5%, 39.6%, 0.224)",
  pinkA7: "hsla(323, 99.7%, 38.5%, 0.322)",
  pinkA8: "hsla(323, 99.5%, 37.7%, 0.444)",
  pinkA9: "hsla(322, 99.7%, 39.3%, 0.750)",
  pinkA10: "hsla(322, 100%, 39.1%, 0.808)",
  pinkA11: "hsla(322, 99.8%, 39.0%, 0.887)",
  pinkA12: "hsla(321, 99.8%, 10.0%, 0.961)"
};

// node_modules/@tamagui/colors/dist/esm/light/plumA.mjs
var plumA2 = {
  plumA1: "hsla(280, 100%, 51.0%, 0.012)",
  plumA2: "hsla(300, 100%, 51.0%, 0.028)",
  plumA3: "hsla(300, 99.0%, 40.9%, 0.063)",
  plumA4: "hsla(300, 99.9%, 38.5%, 0.102)",
  plumA5: "hsla(298, 98.2%, 35.9%, 0.150)",
  plumA6: "hsla(297, 99.6%, 33.7%, 0.216)",
  plumA7: "hsla(295, 99.7%, 32.6%, 0.314)",
  plumA8: "hsla(292, 99.6%, 32.4%, 0.432)",
  plumA9: "hsla(292, 99.9%, 31.0%, 0.710)",
  plumA10: "hsla(292, 99.9%, 30.8%, 0.765)",
  plumA11: "hsla(292, 99.8%, 30.7%, 0.832)",
  plumA12: "hsla(291, 99.9%, 9.7%, 0.953)"
};

// node_modules/@tamagui/colors/dist/esm/light/purpleA.mjs
var purpleA2 = {
  purpleA1: "hsla(300, 94.3%, 34.6%, 0.012)",
  purpleA2: "hsla(276, 100%, 51.0%, 0.020)",
  purpleA3: "hsla(277, 99.6%, 46.5%, 0.055)",
  purpleA4: "hsla(274, 97.9%, 44.3%, 0.095)",
  purpleA5: "hsla(276, 98.6%, 42.0%, 0.142)",
  purpleA6: "hsla(275, 100%, 39.2%, 0.200)",
  purpleA7: "hsla(273, 99.2%, 38.2%, 0.295)",
  purpleA8: "hsla(272, 99.7%, 37.6%, 0.424)",
  purpleA9: "hsla(272, 99.6%, 34.0%, 0.695)",
  purpleA10: "hsla(272, 99.7%, 32.0%, 0.730)",
  purpleA11: "hsla(272, 99.8%, 29.7%, 0.773)",
  purpleA12: "hsla(272, 99.2%, 11.3%, 0.946)"
};

// node_modules/@tamagui/colors/dist/esm/light/redA.mjs
var redA2 = {
  redA1: "hsla(0, 100%, 51.0%, 0.012)",
  redA2: "hsla(0, 100%, 51.0%, 0.032)",
  redA3: "hsla(0, 100%, 50.2%, 0.063)",
  redA4: "hsla(0, 100%, 50.0%, 0.102)",
  redA5: "hsla(0, 99.9%, 47.5%, 0.153)",
  redA6: "hsla(0, 99.5%, 44.9%, 0.224)",
  redA7: "hsla(359, 99.7%, 42.7%, 0.318)",
  redA8: "hsla(359, 99.6%, 41.1%, 0.436)",
  redA9: "hsla(358, 99.9%, 42.9%, 0.718)",
  redA10: "hsla(358, 99.9%, 41.0%, 0.761)",
  redA11: "hsla(358, 99.8%, 38.3%, 0.832)",
  redA12: "hsla(355, 99.3%, 7.9%, 0.926)"
};

// node_modules/@tamagui/colors/dist/esm/light/sageA.mjs
var sageA2 = {
  sageA1: "hsla(150, 92.6%, 26.5%, 0.016)",
  sageA2: "hsla(150, 87.7%, 16.0%, 0.028)",
  sageA3: "hsla(160, 98.4%, 10.9%, 0.055)",
  sageA4: "hsla(140, 92.3%, 8.5%, 0.075)",
  sageA5: "hsla(160, 86.0%, 6.9%, 0.099)",
  sageA6: "hsla(156, 95.1%, 8.2%, 0.126)",
  sageA7: "hsla(156, 98.6%, 6.3%, 0.157)",
  sageA8: "hsla(154, 94.6%, 6.0%, 0.240)",
  sageA9: "hsla(154, 98.7%, 3.0%, 0.459)",
  sageA10: "hsla(154, 93.5%, 2.9%, 0.499)",
  sageA11: "hsla(154, 95.2%, 2.5%, 0.585)",
  sageA12: "hsla(158, 97.0%, 2.4%, 0.934)"
};

// node_modules/@tamagui/colors/dist/esm/light/sandA.mjs
var sandA2 = {
  sandA1: "hsla(60, 89.3%, 18.3%, 0.012)",
  sandA2: "hsla(60, 78.1%, 9.0%, 0.028)",
  sandA3: "hsla(60, 99.0%, 3.9%, 0.051)",
  sandA4: "hsla(60, 88.9%, 5.9%, 0.075)",
  sandA5: "hsla(60, 86.0%, 6.9%, 0.099)",
  sandA6: "hsla(60, 93.2%, 5.2%, 0.122)",
  sandA7: "hsla(60, 98.3%, 5.1%, 0.157)",
  sandA8: "hsla(51, 94.1%, 6.0%, 0.244)",
  sandA9: "hsla(60, 99.8%, 1.7%, 0.451)",
  sandA10: "hsla(60, 90.7%, 1.8%, 0.491)",
  sandA11: "hsla(45, 93.7%, 1.5%, 0.577)",
  sandA12: "hsla(60, 98.0%, 0.7%, 0.906)"
};

// node_modules/@tamagui/colors/dist/esm/light/skyA.mjs
var skyA2 = {
  skyA1: "hsla(190, 100%, 51.0%, 0.024)",
  skyA2: "hsla(193, 100%, 50.1%, 0.055)",
  skyA3: "hsla(193, 100%, 50.1%, 0.106)",
  skyA4: "hsla(194, 99.6%, 47.7%, 0.165)",
  skyA5: "hsla(194, 99.2%, 45.4%, 0.244)",
  skyA6: "hsla(194, 99.9%, 42.3%, 0.357)",
  skyA7: "hsla(194, 99.8%, 42.2%, 0.526)",
  skyA8: "hsla(193, 99.9%, 43.8%, 0.820)",
  skyA9: "hsla(193, 99.7%, 49.4%, 0.593)",
  skyA10: "hsla(193, 99.8%, 46.6%, 0.628)",
  skyA11: "hsla(196, 100%, 31.2%, 0.980)",
  skyA12: "hsla(196, 100%, 12.2%, 0.980)"
};

// node_modules/@tamagui/colors/dist/esm/light/slateA.mjs
var slateA2 = {
  slateA1: "hsla(210, 92.6%, 26.5%, 0.016)",
  slateA2: "hsla(210, 87.7%, 16.0%, 0.028)",
  slateA3: "hsla(210, 98.8%, 14.4%, 0.055)",
  slateA4: "hsla(210, 94.1%, 11.1%, 0.075)",
  slateA5: "hsla(216, 91.1%, 10.9%, 0.099)",
  slateA6: "hsla(206, 96.4%, 11.3%, 0.126)",
  slateA7: "hsla(210, 99.1%, 10.1%, 0.157)",
  slateA8: "hsla(205, 96.5%, 10.0%, 0.244)",
  slateA9: "hsla(206, 98.8%, 5.9%, 0.467)",
  slateA10: "hsla(206, 99.6%, 5.4%, 0.506)",
  slateA11: "hsla(206, 97.0%, 4.8%, 0.593)",
  slateA12: "hsla(202, 97.0%, 2.4%, 0.934)"
};

// node_modules/@tamagui/colors/dist/esm/light/tealA.mjs
var tealA2 = {
  tealA1: "hsla(165, 95.2%, 41.2%, 0.020)",
  tealA2: "hsla(169, 99.5%, 39.4%, 0.055)",
  tealA3: "hsla(167, 97.6%, 38.1%, 0.095)",
  tealA4: "hsla(168, 98.1%, 34.6%, 0.150)",
  tealA5: "hsla(170, 99.4%, 32.3%, 0.220)",
  tealA6: "hsla(170, 99.7%, 30.1%, 0.314)",
  tealA7: "hsla(170, 99.3%, 28.7%, 0.448)",
  tealA8: "hsla(172, 99.8%, 29.7%, 0.675)",
  tealA9: "hsla(173, 99.8%, 31.1%, 0.930)",
  tealA10: "hsla(173, 99.7%, 28.7%, 0.946)",
  tealA11: "hsla(174, 99.8%, 23.3%, 0.977)",
  tealA12: "hsla(171, 98.8%, 6.8%, 0.938)"
};

// node_modules/@tamagui/colors/dist/esm/light/tomatoA.mjs
var tomatoA2 = {
  tomatoA1: "hsla(0, 100%, 51.0%, 0.012)",
  tomatoA2: "hsla(8, 100%, 51.0%, 0.032)",
  tomatoA3: "hsla(7, 100%, 50.2%, 0.067)",
  tomatoA4: "hsla(8, 100%, 50.1%, 0.114)",
  tomatoA5: "hsla(7, 99.5%, 47.9%, 0.173)",
  tomatoA6: "hsla(9, 99.9%, 46.2%, 0.255)",
  tomatoA7: "hsla(10, 99.8%, 43.6%, 0.365)",
  tomatoA8: "hsla(10, 99.5%, 41.8%, 0.499)",
  tomatoA9: "hsla(10, 99.9%, 43.8%, 0.820)",
  tomatoA10: "hsla(10, 100%, 41.8%, 0.859)",
  tomatoA11: "hsla(10, 99.9%, 38.8%, 0.922)",
  tomatoA12: "hsla(10, 99.0%, 7.4%, 0.934)"
};

// node_modules/@tamagui/colors/dist/esm/light/violetA.mjs
var violetA2 = {
  violetA1: "hsla(270, 94.3%, 34.6%, 0.012)",
  violetA2: "hsla(252, 100%, 51.0%, 0.020)",
  violetA3: "hsla(254, 100%, 50.0%, 0.051)",
  violetA4: "hsla(251, 98.3%, 48.2%, 0.087)",
  violetA5: "hsla(252, 99.0%, 45.7%, 0.130)",
  violetA6: "hsla(251, 99.1%, 44.0%, 0.189)",
  violetA7: "hsla(252, 99.5%, 41.7%, 0.279)",
  violetA8: "hsla(252, 100%, 40.7%, 0.400)",
  violetA9: "hsla(252, 99.9%, 35.8%, 0.663)",
  violetA10: "hsla(251, 99.6%, 32.5%, 0.691)",
  violetA11: "hsla(250, 99.8%, 28.4%, 0.726)",
  violetA12: "hsla(254, 99.5%, 11.9%, 0.926)"
};

// node_modules/@tamagui/colors/dist/esm/light/yellowA.mjs
var yellowA2 = {
  yellowA1: "hsla(60, 94.3%, 34.6%, 0.024)",
  yellowA2: "hsla(52, 100%, 50.4%, 0.091)",
  yellowA3: "hsla(55, 100%, 50.2%, 0.181)",
  yellowA4: "hsla(54, 100%, 50.1%, 0.267)",
  yellowA5: "hsla(52, 99.9%, 49.5%, 0.357)",
  yellowA6: "hsla(50, 100%, 47.4%, 0.451)",
  yellowA7: "hsla(47, 99.8%, 44.6%, 0.577)",
  yellowA8: "hsla(48, 100%, 46.0%, 0.980)",
  yellowA9: "hsla(53, 100%, 48.0%, 0.961)",
  yellowA10: "hsla(50, 100%, 48.4%, 0.980)",
  yellowA11: "hsla(42, 100%, 28.6%, 0.980)",
  yellowA12: "hsla(41, 98.9%, 8.0%, 0.942)"
};

// node_modules/@tamagui/colors/dist/esm/blackA.mjs
var blackA = {
  blackA1: "hsla(0, 0%, 0%, 0.012)",
  blackA2: "hsla(0, 0%, 0%, 0.027)",
  blackA3: "hsla(0, 0%, 0%, 0.047)",
  blackA4: "hsla(0, 0%, 0%, 0.071)",
  blackA5: "hsla(0, 0%, 0%, 0.090)",
  blackA6: "hsla(0, 0%, 0%, 0.114)",
  blackA7: "hsla(0, 0%, 0%, 0.141)",
  blackA8: "hsla(0, 0%, 0%, 0.220)",
  blackA9: "hsla(0, 0%, 0%, 0.439)",
  blackA10: "hsla(0, 0%, 0%, 0.478)",
  blackA11: "hsla(0, 0%, 0%, 0.565)",
  blackA12: "hsla(0, 0%, 0%, 0.910)"
};

// node_modules/@tamagui/colors/dist/esm/whiteA.mjs
var whiteA = {
  whiteA1: "hsla(0, 0%, 100%, 0)",
  whiteA2: "hsla(0, 0%, 100%, 0.013)",
  whiteA3: "hsla(0, 0%, 100%, 0.034)",
  whiteA4: "hsla(0, 0%, 100%, 0.056)",
  whiteA5: "hsla(0, 0%, 100%, 0.086)",
  whiteA6: "hsla(0, 0%, 100%, 0.124)",
  whiteA7: "hsla(0, 0%, 100%, 0.176)",
  whiteA8: "hsla(0, 0%, 100%, 0.249)",
  whiteA9: "hsla(0, 0%, 100%, 0.386)",
  whiteA10: "hsla(0, 0%, 100%, 0.446)",
  whiteA11: "hsla(0, 0%, 100%, 0.592)",
  whiteA12: "hsla(0, 0%, 100%, 0.923)"
};

// node_modules/@tamagui/themes/dist/esm/tokens.mjs
var import_web = require("@tamagui/core");
var size = {
  $0: 0,
  "$0.25": 2,
  "$0.5": 4,
  "$0.75": 8,
  $1: 20,
  "$1.5": 24,
  $2: 28,
  "$2.5": 32,
  $3: 36,
  "$3.5": 40,
  $4: 44,
  $true: 44,
  "$4.5": 48,
  $5: 52,
  $6: 64,
  $7: 74,
  $8: 84,
  $9: 94,
  $10: 104,
  $11: 124,
  $12: 144,
  $13: 164,
  $14: 184,
  $15: 204,
  $16: 224,
  $17: 224,
  $18: 244,
  $19: 264,
  $20: 284
};
var spaces = Object.entries(size).map(([k, v]) => [k, sizeToSpace(v)]);
function sizeToSpace(v) {
  return v === 0 ? 0 : v === 2 ? 0.5 : v === 4 ? 1 : v === 8 ? 1.5 : v <= 16 ? Math.round(v * 0.333) : Math.floor(v * 0.7 - 12);
}
__name(sizeToSpace, "sizeToSpace");
var spacesNegative = spaces.slice(1).map(([k, v]) => [`-${k.slice(1)}`, -v]);
var space = {
  ...Object.fromEntries(spaces),
  ...Object.fromEntries(spacesNegative)
};
var zIndex = {
  0: 0,
  1: 100,
  2: 200,
  3: 300,
  4: 400,
  5: 500
};
var colorTokens = {
  light: {
    blue: blue2,
    gray: gray2,
    green: green2,
    orange: orange2,
    pink: pink2,
    purple: purple2,
    red: red2,
    yellow: yellow2
  },
  dark: {
    blue,
    gray,
    green,
    orange,
    pink,
    purple,
    red,
    yellow
  }
};
var darkColors = {
  ...colorTokens.dark.blue,
  ...colorTokens.dark.gray,
  ...colorTokens.dark.green,
  ...colorTokens.dark.orange,
  ...colorTokens.dark.pink,
  ...colorTokens.dark.purple,
  ...colorTokens.dark.red,
  ...colorTokens.dark.yellow
};
var lightColors = {
  ...colorTokens.light.blue,
  ...colorTokens.light.gray,
  ...colorTokens.light.green,
  ...colorTokens.light.orange,
  ...colorTokens.light.pink,
  ...colorTokens.light.purple,
  ...colorTokens.light.red,
  ...colorTokens.light.yellow
};
var color = {
  ...postfixObjKeys(lightColors, "Light"),
  ...postfixObjKeys(darkColors, "Dark")
};
function postfixObjKeys(obj, postfix) {
  return Object.fromEntries(Object.entries(obj).map(([k, v]) => [`${k}${postfix}`, v]));
}
__name(postfixObjKeys, "postfixObjKeys");
var radius = {
  0: 0,
  1: 3,
  2: 5,
  3: 7,
  4: 9,
  true: 9,
  5: 10,
  6: 16,
  7: 19,
  8: 22,
  9: 26,
  10: 34,
  11: 42,
  12: 50
};
var tokens = (0, import_web.createTokens)({
  color,
  radius,
  zIndex,
  space,
  size
});

// node_modules/@tamagui/themes/dist/esm/helpers.mjs
var objectKeys = /* @__PURE__ */ __name((obj) => Object.keys(obj), "objectKeys");
function objectFromEntries(arr) {
  return Object.fromEntries(arr);
}
__name(objectFromEntries, "objectFromEntries");

// node_modules/@tamagui/themes/dist/esm/palettes.mjs
var palettes = (() => {
  const lightTransparent = "rgba(255,255,255,0)", darkTransparent = "rgba(10,10,10,0)", transparent = /* @__PURE__ */ __name((hsl, opacity = 0) => hsl.replace("%)", `%, ${opacity})`).replace("hsl(", "hsla("), "transparent"), getColorPalette = /* @__PURE__ */ __name((colors3, color2 = colors3[0]) => {
    const colorPalette = Object.values(colors3), [head, tail] = [colorPalette.slice(0, 6), colorPalette.slice(colorPalette.length - 5)];
    return [transparent(colorPalette[0]), ...head, ...tail, color2, transparent(colorPalette[colorPalette.length - 1])];
  }, "getColorPalette"), lightColor = "hsl(0, 0%, 9.0%)", lightPalette = [lightTransparent, "#fff", "#f8f8f8", "hsl(0, 0%, 96.3%)", "hsl(0, 0%, 94.1%)", "hsl(0, 0%, 92.0%)", "hsl(0, 0%, 90.0%)", "hsl(0, 0%, 88.5%)", "hsl(0, 0%, 81.0%)", "hsl(0, 0%, 56.1%)", "hsl(0, 0%, 50.3%)", "hsl(0, 0%, 42.5%)", lightColor, darkTransparent], darkColor = "#fff", darkPalette = [darkTransparent, "#050505", "#151515", "#191919", "#232323", "#282828", "#323232", "#424242", "#494949", "#545454", "#626262", "#a5a5a5", darkColor, lightTransparent], lightPalettes = objectFromEntries(objectKeys(colorTokens.light).map((key) => [`light_${key}`, getColorPalette(colorTokens.light[key], lightColor)])), darkPalettes = objectFromEntries(objectKeys(colorTokens.dark).map((key) => [`dark_${key}`, getColorPalette(colorTokens.dark[key], darkColor)])), colorPalettes = {
    ...lightPalettes,
    ...darkPalettes
  };
  return {
    light: lightPalette,
    dark: darkPalette,
    ...colorPalettes
  };
})();

// node_modules/@tamagui/themes/dist/esm/templates.mjs
var templateColorsSpecific = {
  color1: 1,
  color2: 2,
  color3: 3,
  color4: 4,
  color5: 5,
  color6: 6,
  color7: 7,
  color8: 8,
  color9: 9,
  color10: 10,
  color11: 11,
  color12: 12
};
var template = {
  ...templateColorsSpecific,
  // the background, color, etc keys here work like generics - they make it so you
  // can publish components for others to use without mandating a specific color scale
  // the @tamagui/button Button component looks for `$background`, so you set the
  // dark_red_Button theme to have a stronger background than the dark_red theme.
  background: 2,
  backgroundHover: 3,
  backgroundPress: 4,
  backgroundFocus: 5,
  backgroundStrong: 1,
  backgroundTransparent: 0,
  color: -1,
  colorHover: -2,
  colorPress: -1,
  colorFocus: -2,
  colorTransparent: -0,
  borderColor: 5,
  borderColorHover: 6,
  borderColorFocus: 4,
  borderColorPress: 5,
  placeholderColor: -4
};
var templates = {
  base: template,
  colorLight: {
    ...template,
    // light color themes are a bit less sensitive
    borderColor: 4,
    borderColorHover: 5,
    borderColorFocus: 4,
    borderColorPress: 4
  }
};
var shadows = {
  shadowColor: 0,
  shadowColorHover: 0,
  shadowColorPress: 0,
  shadowColorFocus: 0
};
var colors2 = {
  ...shadows,
  color: 0,
  colorHover: 0,
  colorFocus: 0,
  colorPress: 0
};
var baseMaskOptions = {
  override: shadows,
  skip: shadows,
  // avoids the transparent ends
  max: palettes.light.length - 2,
  min: 1
};
var skipShadowsAndSpecificColors = {
  ...shadows,
  ...templateColorsSpecific
};
var maskOptions = {
  component: {
    ...baseMaskOptions,
    override: colors2,
    skip: skipShadowsAndSpecificColors
  },
  alt: {
    ...baseMaskOptions
  },
  button: {
    ...baseMaskOptions,
    override: {
      ...colors2,
      borderColor: "transparent",
      borderColorHover: "transparent"
    },
    skip: skipShadowsAndSpecificColors
  }
};

// node_modules/@tamagui/themes/dist/esm/componentThemeDefinitions.mjs
var overlayThemes = {
  light: {
    background: "rgba(0,0,0,0.5)"
  },
  dark: {
    background: "rgba(0,0,0,0.9)"
  }
};
var overlayThemeDefinitions = [{
  parent: "light",
  theme: overlayThemes.light
}, {
  parent: "dark",
  theme: overlayThemes.dark
}];
var componentThemeDefinitions = {
  ListItem: [{
    parent: "light",
    mask: "strengthen",
    ...maskOptions.component
  }, {
    parent: "dark",
    mask: "identity",
    ...maskOptions.component
  }],
  Card: {
    mask: "soften",
    ...maskOptions.component
  },
  Button: {
    mask: "soften2",
    ...maskOptions.button
  },
  Checkbox: {
    mask: "softenBorder2",
    ...maskOptions.component
  },
  Switch: {
    mask: "soften2",
    ...maskOptions.component
  },
  SwitchThumb: {
    mask: "inverseStrengthen2",
    ...maskOptions.component
  },
  TooltipContent: {
    mask: "soften2",
    ...maskOptions.component
  },
  DrawerFrame: {
    mask: "soften",
    ...maskOptions.component
  },
  Progress: {
    mask: "soften",
    ...maskOptions.component
  },
  RadioGroupItem: {
    mask: "softenBorder2",
    ...maskOptions.component
  },
  TooltipArrow: {
    mask: "soften",
    ...maskOptions.component
  },
  SliderTrackActive: {
    mask: "inverseSoften",
    ...maskOptions.component
  },
  SliderTrack: {
    mask: "soften2",
    ...maskOptions.component
  },
  SliderThumb: {
    mask: "inverse",
    ...maskOptions.component
  },
  Tooltip: {
    mask: "inverse",
    ...maskOptions.component
  },
  ProgressIndicator: {
    mask: "inverse",
    ...maskOptions.component
  },
  SheetOverlay: overlayThemeDefinitions,
  DialogOverlay: overlayThemeDefinitions,
  ModalOverlay: overlayThemeDefinitions,
  Input: {
    mask: "softenBorder2",
    ...maskOptions.component
  },
  TextArea: {
    mask: "softenBorder2",
    ...maskOptions.component
  }
};

// node_modules/@tamagui/themes/dist/esm/shadows.mjs
var lightShadowColor = "rgba(0,0,0,0.04)";
var lightShadowColorStrong = "rgba(0,0,0,0.085)";
var darkShadowColor = "rgba(0,0,0,0.2)";
var darkShadowColorStrong = "rgba(0,0,0,0.3)";
var shadows2 = {
  light: {
    shadowColor: lightShadowColorStrong,
    shadowColorHover: lightShadowColorStrong,
    shadowColorPress: lightShadowColor,
    shadowColorFocus: lightShadowColor
  },
  dark: {
    shadowColor: darkShadowColorStrong,
    shadowColorHover: darkShadowColorStrong,
    shadowColorPress: darkShadowColor,
    shadowColorFocus: darkShadowColor
  }
};

// node_modules/@tamagui/create-theme/dist/esm/isMinusZero.mjs
function isMinusZero(value) {
  return 1 / value === Number.NEGATIVE_INFINITY;
}
__name(isMinusZero, "isMinusZero");

// node_modules/@tamagui/create-theme/dist/esm/themeInfo.mjs
var THEME_INFO = /* @__PURE__ */ new Map();
var getThemeInfo = /* @__PURE__ */ __name((theme, name) => THEME_INFO.get(name || JSON.stringify(theme)), "getThemeInfo");
var setThemeInfo = /* @__PURE__ */ __name((theme, info) => {
  const next = {
    ...info,
    cache: /* @__PURE__ */ new Map()
  };
  THEME_INFO.set(info.name || JSON.stringify(theme), next), THEME_INFO.set(JSON.stringify(info.definition), next);
}, "setThemeInfo");

// node_modules/@tamagui/create-theme/dist/esm/createTheme.mjs
var identityCache = /* @__PURE__ */ new Map();
function createThemeWithPalettes(palettes2, defaultPalette, definition, options, name, skipCache = false) {
  if (!palettes2[defaultPalette]) throw new Error(`No pallete: ${defaultPalette}`);
  const newDef = {
    ...definition
  };
  for (const key in definition) {
    let val = definition[key];
    if (typeof val == "string" && val[0] === "$") {
      const [altPaletteName$, altPaletteIndex] = val.split("."), altPaletteName = altPaletteName$.slice(1), parentName = defaultPalette.split("_")[0], altPalette = palettes2[altPaletteName] || palettes2[`${parentName}_${altPaletteName}`];
      if (altPalette) {
        const next = getValue(altPalette, +altPaletteIndex);
        typeof next < "u" && (newDef[key] = next);
      }
    }
  }
  return createTheme(palettes2[defaultPalette], newDef, options, name, skipCache);
}
__name(createThemeWithPalettes, "createThemeWithPalettes");
function createTheme(palette, definition, options, name, skipCache = false) {
  const cacheKey = skipCache ? "" : JSON.stringify([name, palette, definition, options]);
  if (!skipCache && identityCache.has(cacheKey)) return identityCache.get(cacheKey);
  const theme = {
    ...Object.fromEntries(Object.entries(definition).map(([key, offset]) => [key, getValue(palette, offset)])),
    ...options?.nonInheritedValues
  };
  return setThemeInfo(theme, {
    palette,
    definition,
    options,
    name
  }), cacheKey && identityCache.set(cacheKey, theme), theme;
}
__name(createTheme, "createTheme");
var getValue = /* @__PURE__ */ __name((palette, value) => {
  if (!palette) throw new Error("No palette!");
  if (typeof value == "string") return value;
  const max = palette.length - 1, next = (value === 0 ? !isMinusZero(value) : value >= 0) ? value : max + value, index = Math.min(Math.max(0, next), max);
  return palette[index];
}, "getValue");
function addChildren(themes2, getChildren) {
  const out = {
    ...themes2
  };
  for (const key in themes2) {
    const subThemes = getChildren(key, themes2[key]);
    for (const sKey in subThemes) out[`${key}_${sKey}`] = subThemes[sKey];
  }
  return out;
}
__name(addChildren, "addChildren");

// node_modules/@tamagui/create-theme/dist/esm/helpers.mjs
var objectKeys2 = /* @__PURE__ */ __name((obj) => Object.keys(obj), "objectKeys");
function objectEntries(obj) {
  return Object.entries(obj);
}
__name(objectEntries, "objectEntries");
function objectFromEntries2(arr) {
  return Object.fromEntries(arr);
}
__name(objectFromEntries2, "objectFromEntries");

// node_modules/@tamagui/create-theme/dist/esm/masks.mjs
var createMask = /* @__PURE__ */ __name((createMask2) => typeof createMask2 == "function" ? {
  name: createMask2.name || "unnamed",
  mask: createMask2
} : createMask2, "createMask");
var skipMask = {
  name: "skip-mask",
  mask: /* @__PURE__ */ __name((template2, opts) => {
    const {
      skip
    } = opts;
    return Object.fromEntries(Object.entries(template2).filter(([k]) => !skip || !(k in skip)).map(([k, v]) => [k, applyOverrides(k, v, opts)]));
  }, "mask")
};
function applyOverrides(key, value, opts) {
  let override, strategy = opts.overrideStrategy;
  const overrideSwap = opts.overrideSwap?.[key];
  if (typeof overrideSwap < "u") override = overrideSwap, strategy = "swap";
  else {
    const overrideShift = opts.overrideShift?.[key];
    if (typeof overrideShift < "u") override = overrideShift, strategy = "shift";
    else {
      const overrideDefault = opts.override?.[key];
      typeof overrideDefault < "u" && (override = overrideDefault, strategy = opts.overrideStrategy);
    }
  }
  return typeof override > "u" || typeof override == "string" ? value : strategy === "swap" ? override : value;
}
__name(applyOverrides, "applyOverrides");
var createIdentityMask = /* @__PURE__ */ __name(() => ({
  name: "identity-mask",
  mask: /* @__PURE__ */ __name((template2, opts) => skipMask.mask(template2, opts), "mask")
}), "createIdentityMask");
var createInverseMask = /* @__PURE__ */ __name(() => ({
  name: "inverse-mask",
  mask: /* @__PURE__ */ __name((template2, opts) => {
    const inversed = objectFromEntries2(objectEntries(template2).map(([k, v]) => [k, -v]));
    return skipMask.mask(inversed, opts);
  }, "mask")
}), "createInverseMask");
var createShiftMask = /* @__PURE__ */ __name(({
  inverse
} = {}, defaultOptions) => ({
  name: "shift-mask",
  mask: /* @__PURE__ */ __name((template2, opts) => {
    const {
      override,
      overrideStrategy = "shift",
      max: maxIn,
      palette,
      min = 0,
      strength = 1
    } = {
      ...defaultOptions,
      ...opts
    }, values = Object.entries(template2), max = maxIn ?? (palette ? Object.values(palette).length - 1 : Number.POSITIVE_INFINITY), out = {};
    for (const [key, value] of values) {
      if (typeof value == "string") continue;
      if (typeof override?.[key] == "number") {
        const overrideVal = override[key];
        out[key] = overrideStrategy === "shift" ? value + overrideVal : overrideVal;
        continue;
      }
      if (typeof override?.[key] == "string") {
        out[key] = override[key];
        continue;
      }
      const isPositive = value === 0 ? !isMinusZero(value) : value >= 0, direction = isPositive ? 1 : -1, invert = inverse ? -1 : 1, next = value + strength * direction * invert, clamped = isPositive ? Math.max(min, Math.min(max, next)) : Math.min(-min, Math.max(-max, next));
      out[key] = clamped;
    }
    return skipMask.mask(out, opts);
  }, "mask")
}), "createShiftMask");
var createWeakenMask = /* @__PURE__ */ __name((defaultOptions) => ({
  name: "soften-mask",
  mask: createShiftMask({}, defaultOptions).mask
}), "createWeakenMask");
var createSoftenMask = createWeakenMask;
var createStrengthenMask = /* @__PURE__ */ __name((defaultOptions) => ({
  name: "strengthen-mask",
  mask: createShiftMask({
    inverse: true
  }, defaultOptions).mask
}), "createStrengthenMask");

// node_modules/@tamagui/create-theme/dist/esm/applyMask.mjs
function applyMask(theme, mask, options = {}, parentName, nextName) {
  const info = getThemeInfo(theme, parentName);
  if (!info) throw new Error(process.env.NODE_ENV !== "production" ? "No info found for theme, you must pass the theme created by createThemeFromPalette directly to extendTheme" : "\u274C Err2");
  const next = applyMaskStateless(info, mask, options, parentName);
  return setThemeInfo(next.theme, {
    definition: next.definition,
    palette: info.palette,
    name: nextName
  }), next.theme;
}
__name(applyMask, "applyMask");
function applyMaskStateless(info, mask, options = {}, parentName) {
  const skip = {
    ...options.skip
  };
  if (info.options?.nonInheritedValues) for (const key in info.options.nonInheritedValues) skip[key] = 1;
  const maskOptions2 = {
    parentName,
    palette: info.palette,
    ...options,
    skip
  }, template2 = mask.mask(info.definition, maskOptions2), theme = createTheme(info.palette, template2);
  return {
    ...info,
    cache: /* @__PURE__ */ new Map(),
    definition: template2,
    theme
  };
}
__name(applyMaskStateless, "applyMaskStateless");

// node_modules/@tamagui/create-theme/dist/esm/combineMasks.mjs
var combineMasks = /* @__PURE__ */ __name((...masks2) => ({
  name: "combine-mask",
  mask: /* @__PURE__ */ __name((template2, opts) => {
    let current = getThemeInfo(template2, opts.parentName), theme;
    for (const mask2 of masks2) {
      if (!current) throw new Error(`Nothing returned from mask: ${current}, for template: ${template2} and mask: ${mask2.toString()}, given opts ${JSON.stringify(opts, null, 2)}`);
      const next = applyMaskStateless(current, mask2, opts);
      current = next, theme = next.theme;
    }
    return theme;
  }, "mask")
}), "combineMasks");

// node_modules/@tamagui/theme-builder/dist/esm/ThemeBuilder.mjs
var ThemeBuilder = class {
  static {
    __name(this, "ThemeBuilder");
  }
  constructor(state) {
    this.state = state;
  }
  addPalettes(palettes2) {
    return this.state.palettes = {
      // as {} prevents generic string key merge messing up types
      ...this.state.palettes,
      ...palettes2
    }, this;
  }
  addTemplates(templates2) {
    return this.state.templates = {
      // as {} prevents generic string key merge messing up types
      ...this.state.templates,
      ...templates2
    }, this;
  }
  addMasks(masks2) {
    return this.state.masks = {
      // as {} prevents generic string key merge messing up types
      ...this.state.masks,
      ...objectFromEntries2(objectEntries(masks2).map(([key, val]) => [key, createMask(val)]))
    }, this;
  }
  // for dev mode only really
  _addedThemes = [];
  addThemes(themes2) {
    return this._addedThemes.push({
      type: "themes",
      args: [themes2]
    }), this.state.themes = {
      // as {} prevents generic string key merge messing up types
      ...this.state.themes,
      ...themes2
    }, this;
  }
  // these wont be typed to save some complexity and because they don't need to be typed!
  addComponentThemes(childThemeDefinition, options) {
    return this.addChildThemes(childThemeDefinition, options), this;
  }
  addChildThemes(childThemeDefinition, options) {
    const currentThemes = this.state.themes;
    if (!currentThemes) throw new Error("No themes defined yet, use addThemes first to set your base themes");
    this._addedThemes.push({
      type: "childThemes",
      args: [childThemeDefinition, options]
    });
    const currentThemeNames = Object.keys(currentThemes), incomingThemeNames = Object.keys(childThemeDefinition), namesWithDefinitions = currentThemeNames.flatMap((prefix) => {
      const avoidNestingWithin = options?.avoidNestingWithin;
      return avoidNestingWithin && avoidNestingWithin.some((avoidName) => prefix.startsWith(avoidName) || prefix.endsWith(avoidName)) ? [] : incomingThemeNames.map((subName) => {
        const fullName = `${prefix}_${subName}`, definition = childThemeDefinition[subName];
        return "avoidNestingWithin" in definition && definition.avoidNestingWithin.some((name) => prefix.startsWith(name) || prefix.endsWith(name)) ? null : [fullName, definition];
      }).filter(Boolean);
    }), childThemes = Object.fromEntries(namesWithDefinitions), next = {
      // as {} prevents generic string key merge messing up types
      ...this.state.themes,
      ...childThemes
    };
    return this.state.themes = next, this;
  }
  build() {
    if (!this.state.themes) return {};
    const out = {}, maskedThemes = [];
    for (const themeName in this.state.themes) {
      const nameParts = themeName.split("_"), parentName = nameParts.slice(0, nameParts.length - 1).join("_"), definitions = this.state.themes[themeName], themeDefinition = Array.isArray(definitions) ? (() => {
        const found = definitions.find(
          // endWith match stronger than startsWith
          (d) => d.parent ? parentName.endsWith(d.parent) || parentName.startsWith(d.parent) : true
        );
        return found || null;
      })() : definitions;
      if (themeDefinition) if ("theme" in themeDefinition) out[themeName] = themeDefinition.theme;
      else if ("mask" in themeDefinition) maskedThemes.push({
        parentName,
        themeName,
        mask: themeDefinition
      });
      else {
        let {
          palette: paletteName = "",
          template: templateName,
          ...options
        } = themeDefinition;
        const parentDefinition = this.state.themes[parentName];
        if (!this.state.palettes) throw new Error(`No palettes defined for theme with palette expected: ${themeName}`);
        let palette = this.state.palettes[paletteName || ""], attemptParentName = `${parentName}_${paletteName}`;
        for (; !palette && attemptParentName; ) attemptParentName in this.state.palettes ? (palette = this.state.palettes[attemptParentName], paletteName = attemptParentName) : attemptParentName = attemptParentName.split("_").slice(0, -1).join("_");
        if (!palette) {
          const msg = process.env.NODE_ENV !== "production" ? `: ${themeName}: ${paletteName}
          Definition: ${JSON.stringify(themeDefinition)}
          Parent: ${JSON.stringify(parentDefinition)}
          Potential: (${Object.keys(this.state.palettes).join(", ")})` : "";
          throw new Error(`No palette for theme${msg}`);
        }
        const template2 = this.state.templates?.[templateName] ?? // fall back to finding the scheme specific on if it exists
        this.state.templates?.[`${nameParts[0]}_${templateName}`];
        if (!template2) throw new Error(`No template for theme ${themeName}: ${templateName} in templates:
- ${Object.keys(this.state.templates || {}).join(`
 - `)}`);
        out[themeName] = createThemeWithPalettes(this.state.palettes, paletteName, template2, options, themeName, true);
      }
    }
    for (const {
      mask,
      themeName,
      parentName
    } of maskedThemes) {
      const parent = out[parentName];
      if (!parent) continue;
      const {
        mask: maskName,
        ...options
      } = mask;
      let maskFunction = this.state.masks?.[maskName];
      if (!maskFunction) throw new Error(`No mask ${maskName}`);
      const parentTheme = this.state.themes[parentName];
      if (parentTheme && "childOptions" in parentTheme) {
        const {
          mask: mask2,
          ...childOpts
        } = parentTheme.childOptions;
        mask2 && (maskFunction = this.state.masks?.[mask2]), Object.assign(options, childOpts);
      }
      out[themeName] = applyMask(parent, maskFunction, options, parentName, themeName);
    }
    return out;
  }
};
function createThemeBuilder() {
  return new ThemeBuilder({});
}
__name(createThemeBuilder, "createThemeBuilder");

// node_modules/color2k/dist/index.exports.import.es.mjs
function guard(low, high, value) {
  return Math.min(Math.max(low, value), high);
}
__name(guard, "guard");
var ColorError = class extends Error {
  static {
    __name(this, "ColorError");
  }
  constructor(color2) {
    super(`Failed to parse color: "${color2}"`);
  }
};
var ColorError$1 = ColorError;
function parseToRgba(color2) {
  if (typeof color2 !== "string") throw new ColorError$1(color2);
  if (color2.trim().toLowerCase() === "transparent") return [0, 0, 0, 0];
  let normalizedColor = color2.trim();
  normalizedColor = namedColorRegex.test(color2) ? nameToHex(color2) : color2;
  const reducedHexMatch = reducedHexRegex.exec(normalizedColor);
  if (reducedHexMatch) {
    const arr = Array.from(reducedHexMatch).slice(1);
    return [...arr.slice(0, 3).map((x) => parseInt(r(x, 2), 16)), parseInt(r(arr[3] || "f", 2), 16) / 255];
  }
  const hexMatch = hexRegex.exec(normalizedColor);
  if (hexMatch) {
    const arr = Array.from(hexMatch).slice(1);
    return [...arr.slice(0, 3).map((x) => parseInt(x, 16)), parseInt(arr[3] || "ff", 16) / 255];
  }
  const rgbaMatch = rgbaRegex.exec(normalizedColor);
  if (rgbaMatch) {
    const arr = Array.from(rgbaMatch).slice(1);
    return [...arr.slice(0, 3).map((x) => parseInt(x, 10)), parseFloat(arr[3] || "1")];
  }
  const hslaMatch = hslaRegex.exec(normalizedColor);
  if (hslaMatch) {
    const [h, s, l, a] = Array.from(hslaMatch).slice(1).map(parseFloat);
    if (guard(0, 100, s) !== s) throw new ColorError$1(color2);
    if (guard(0, 100, l) !== l) throw new ColorError$1(color2);
    return [...hslToRgb(h, s, l), Number.isNaN(a) ? 1 : a];
  }
  throw new ColorError$1(color2);
}
__name(parseToRgba, "parseToRgba");
function hash(str) {
  let hash2 = 5381;
  let i = str.length;
  while (i) {
    hash2 = hash2 * 33 ^ str.charCodeAt(--i);
  }
  return (hash2 >>> 0) % 2341;
}
__name(hash, "hash");
var colorToInt = /* @__PURE__ */ __name((x) => parseInt(x.replace(/_/g, ""), 36), "colorToInt");
var compressedColorMap = "1q29ehhb 1n09sgk7 1kl1ekf_ _yl4zsno 16z9eiv3 1p29lhp8 _bd9zg04 17u0____ _iw9zhe5 _to73___ _r45e31e _7l6g016 _jh8ouiv _zn3qba8 1jy4zshs 11u87k0u 1ro9yvyo 1aj3xael 1gz9zjz0 _3w8l4xo 1bf1ekf_ _ke3v___ _4rrkb__ 13j776yz _646mbhl _nrjr4__ _le6mbhl 1n37ehkb _m75f91n _qj3bzfz 1939yygw 11i5z6x8 _1k5f8xs 1509441m 15t5lwgf _ae2th1n _tg1ugcv 1lp1ugcv 16e14up_ _h55rw7n _ny9yavn _7a11xb_ 1ih442g9 _pv442g9 1mv16xof 14e6y7tu 1oo9zkds 17d1cisi _4v9y70f _y98m8kc 1019pq0v 12o9zda8 _348j4f4 1et50i2o _8epa8__ _ts6senj 1o350i2o 1mi9eiuo 1259yrp0 1ln80gnw _632xcoy 1cn9zldc _f29edu4 1n490c8q _9f9ziet 1b94vk74 _m49zkct 1kz6s73a 1eu9dtog _q58s1rz 1dy9sjiq __u89jo3 _aj5nkwg _ld89jo3 13h9z6wx _qa9z2ii _l119xgq _bs5arju 1hj4nwk9 1qt4nwk9 1ge6wau6 14j9zlcw 11p1edc_ _ms1zcxe _439shk6 _jt9y70f _754zsow 1la40eju _oq5p___ _x279qkz 1fa5r3rv _yd2d9ip _424tcku _8y1di2_ _zi2uabw _yy7rn9h 12yz980_ __39ljp6 1b59zg0x _n39zfzp 1fy9zest _b33k___ _hp9wq92 1il50hz4 _io472ub _lj9z3eo 19z9ykg0 _8t8iu3a 12b9bl4a 1ak5yw0o _896v4ku _tb8k8lv _s59zi6t _c09ze0p 1lg80oqn 1id9z8wb _238nba5 1kq6wgdi _154zssg _tn3zk49 _da9y6tc 1sg7cv4f _r12jvtt 1gq5fmkz 1cs9rvci _lp9jn1c _xw1tdnb 13f9zje6 16f6973h _vo7ir40 _bt5arjf _rc45e4t _hr4e100 10v4e100 _hc9zke2 _w91egv_ _sj2r1kk 13c87yx8 _vqpds__ _ni8ggk8 _tj9yqfb 1ia2j4r4 _7x9b10u 1fc9ld4j 1eq9zldr _5j9lhpx _ez9zl6o _md61fzm".split(" ").reduce((acc, next) => {
  const key = colorToInt(next.substring(0, 3));
  const hex = colorToInt(next.substring(3)).toString(16);
  let prefix = "";
  for (let i = 0; i < 6 - hex.length; i++) {
    prefix += "0";
  }
  acc[key] = `${prefix}${hex}`;
  return acc;
}, {});
function nameToHex(color2) {
  const normalizedColorName = color2.toLowerCase().trim();
  const result = compressedColorMap[hash(normalizedColorName)];
  if (!result) throw new ColorError$1(color2);
  return `#${result}`;
}
__name(nameToHex, "nameToHex");
var r = /* @__PURE__ */ __name((str, amount) => Array.from(Array(amount)).map(() => str).join(""), "r");
var reducedHexRegex = new RegExp(`^#${r("([a-f0-9])", 3)}([a-f0-9])?$`, "i");
var hexRegex = new RegExp(`^#${r("([a-f0-9]{2})", 3)}([a-f0-9]{2})?$`, "i");
var rgbaRegex = new RegExp(`^rgba?\\(\\s*(\\d+)\\s*${r(",\\s*(\\d+)\\s*", 2)}(?:,\\s*([\\d.]+))?\\s*\\)$`, "i");
var hslaRegex = /^hsla?\(\s*([\d.]+)\s*,\s*([\d.]+)%\s*,\s*([\d.]+)%(?:\s*,\s*([\d.]+))?\s*\)$/i;
var namedColorRegex = /^[a-z]+$/i;
var roundColor = /* @__PURE__ */ __name((color2) => {
  return Math.round(color2 * 255);
}, "roundColor");
var hslToRgb = /* @__PURE__ */ __name((hue, saturation, lightness) => {
  let l = lightness / 100;
  if (saturation === 0) {
    return [l, l, l].map(roundColor);
  }
  const huePrime = (hue % 360 + 360) % 360 / 60;
  const chroma = (1 - Math.abs(2 * l - 1)) * (saturation / 100);
  const secondComponent = chroma * (1 - Math.abs(huePrime % 2 - 1));
  let red3 = 0;
  let green3 = 0;
  let blue3 = 0;
  if (huePrime >= 0 && huePrime < 1) {
    red3 = chroma;
    green3 = secondComponent;
  } else if (huePrime >= 1 && huePrime < 2) {
    red3 = secondComponent;
    green3 = chroma;
  } else if (huePrime >= 2 && huePrime < 3) {
    green3 = chroma;
    blue3 = secondComponent;
  } else if (huePrime >= 3 && huePrime < 4) {
    green3 = secondComponent;
    blue3 = chroma;
  } else if (huePrime >= 4 && huePrime < 5) {
    red3 = secondComponent;
    blue3 = chroma;
  } else if (huePrime >= 5 && huePrime < 6) {
    red3 = chroma;
    blue3 = secondComponent;
  }
  const lightnessModification = l - chroma / 2;
  const finalRed = red3 + lightnessModification;
  const finalGreen = green3 + lightnessModification;
  const finalBlue = blue3 + lightnessModification;
  return [finalRed, finalGreen, finalBlue].map(roundColor);
}, "hslToRgb");
function parseToHsla(color2) {
  const [red3, green3, blue3, alpha] = parseToRgba(color2).map((value, index) => (
    // 3rd index is alpha channel which is already normalized
    index === 3 ? value : value / 255
  ));
  const max = Math.max(red3, green3, blue3);
  const min = Math.min(red3, green3, blue3);
  const lightness = (max + min) / 2;
  if (max === min) return [0, 0, lightness, alpha];
  const delta = max - min;
  const saturation = lightness > 0.5 ? delta / (2 - max - min) : delta / (max + min);
  const hue = 60 * (red3 === max ? (green3 - blue3) / delta + (green3 < blue3 ? 6 : 0) : green3 === max ? (blue3 - red3) / delta + 2 : (red3 - green3) / delta + 4);
  return [hue, saturation, lightness, alpha];
}
__name(parseToHsla, "parseToHsla");
function hsla(hue, saturation, lightness, alpha) {
  return `hsla(${(hue % 360).toFixed()}, ${guard(0, 100, saturation * 100).toFixed()}%, ${guard(0, 100, lightness * 100).toFixed()}%, ${parseFloat(guard(0, 1, alpha).toFixed(3))})`;
}
__name(hsla, "hsla");

// node_modules/@tamagui/theme-builder/dist/esm/defaultComponentThemes.mjs
var defaultComponentThemes = {
  ListItem: {
    template: "surface1"
  },
  SelectTrigger: {
    template: "surface1"
  },
  Card: {
    template: "surface1"
  },
  Button: {
    template: "surface3"
  },
  Checkbox: {
    template: "surface2"
  },
  Switch: {
    template: "surface2"
  },
  SwitchThumb: {
    template: "inverse"
  },
  TooltipContent: {
    template: "surface2"
  },
  Progress: {
    template: "surface1"
  },
  RadioGroupItem: {
    template: "surface2"
  },
  TooltipArrow: {
    template: "surface1"
  },
  SliderTrackActive: {
    template: "surface3"
  },
  SliderTrack: {
    template: "surface1"
  },
  SliderThumb: {
    template: "inverse"
  },
  Tooltip: {
    template: "inverse"
  },
  ProgressIndicator: {
    template: "inverse"
  },
  Input: {
    template: "surface1"
  },
  TextArea: {
    template: "surface1"
  }
};

// node_modules/@tamagui/theme-builder/dist/esm/helpers.mjs
var objectKeys3 = /* @__PURE__ */ __name((obj) => Object.keys(obj), "objectKeys");
function objectFromEntries3(arr) {
  return Object.fromEntries(arr);
}
__name(objectFromEntries3, "objectFromEntries");

// node_modules/@tamagui/theme-builder/dist/esm/defaultTemplates.mjs
var getTemplates = /* @__PURE__ */ __name(() => {
  const lightTemplates = getBaseTemplates("light"), darkTemplates = getBaseTemplates("dark");
  return {
    ...objectFromEntries3(objectKeys3(lightTemplates).map((name) => [`light_${name}`, lightTemplates[name]])),
    ...objectFromEntries3(objectKeys3(darkTemplates).map((name) => [`dark_${name}`, darkTemplates[name]]))
  };
}, "getTemplates");
var getBaseTemplates = /* @__PURE__ */ __name((scheme) => {
  const isLight = scheme === "light", bgIndex = 6, lighten = isLight ? -1 : 1, darken = -lighten, borderColor = bgIndex + 3, baseColors = {
    color: -bgIndex,
    colorHover: -bgIndex - 1,
    colorPress: -bgIndex,
    colorFocus: -bgIndex - 1,
    placeholderColor: -bgIndex - 3,
    outlineColor: -2
  }, base = {
    accentBackground: 0,
    accentColor: -0,
    background0: 1,
    background02: 2,
    background04: 3,
    background06: 4,
    background08: 5,
    color1: bgIndex,
    color2: bgIndex + 1,
    color3: bgIndex + 2,
    color4: bgIndex + 3,
    color5: bgIndex + 4,
    color6: bgIndex + 5,
    color7: bgIndex + 6,
    color8: bgIndex + 7,
    color9: bgIndex + 8,
    color10: bgIndex + 9,
    color11: bgIndex + 10,
    color12: bgIndex + 11,
    color0: -1,
    color02: -2,
    color04: -3,
    color06: -4,
    color08: -5,
    // the background, color, etc keys here work like generics - they make it so you
    // can publish components for others to use without mandating a specific color scale
    // the @tamagui/button Button component looks for `$background`, so you set the
    // dark_red_Button theme to have a stronger background than the dark_red theme.
    background: bgIndex,
    backgroundHover: bgIndex + lighten,
    // always lighten on hover no matter the scheme
    backgroundPress: bgIndex + darken,
    // always darken on press no matter the theme
    backgroundFocus: bgIndex + darken,
    borderColor,
    borderColorHover: borderColor + lighten,
    borderColorPress: borderColor + darken,
    borderColorFocus: borderColor,
    ...baseColors,
    colorTransparent: -1
  }, surface1 = {
    ...baseColors,
    background: base.background + 1,
    backgroundHover: base.backgroundHover + 1,
    backgroundPress: base.backgroundPress + 1,
    backgroundFocus: base.backgroundFocus + 1,
    borderColor: base.borderColor + 1,
    borderColorHover: base.borderColorHover + 1,
    borderColorFocus: base.borderColorFocus + 1,
    borderColorPress: base.borderColorPress + 1
  }, surface2 = {
    ...baseColors,
    background: base.background + 2,
    backgroundHover: base.backgroundHover + 2,
    backgroundPress: base.backgroundPress + 2,
    backgroundFocus: base.backgroundFocus + 2,
    borderColor: base.borderColor + 2,
    borderColorHover: base.borderColorHover + 2,
    borderColorFocus: base.borderColorFocus + 2,
    borderColorPress: base.borderColorPress + 2
  }, surface3 = {
    ...baseColors,
    background: base.background + 3,
    backgroundHover: base.backgroundHover + 3,
    backgroundPress: base.backgroundPress + 3,
    backgroundFocus: base.backgroundFocus + 3,
    borderColor: base.borderColor + 3,
    borderColorHover: base.borderColorHover + 3,
    borderColorFocus: base.borderColorFocus + 3,
    borderColorPress: base.borderColorPress + 3
  }, alt1 = {
    color: base.color - 1,
    colorHover: base.colorHover - 1,
    colorPress: base.colorPress - 1,
    colorFocus: base.colorFocus - 1
  }, alt2 = {
    color: base.color - 2,
    colorHover: base.colorHover - 2,
    colorPress: base.colorPress - 2,
    colorFocus: base.colorFocus - 2
  }, inverse = Object.fromEntries(Object.entries(base).map(([key, index]) => [key, -index]));
  return {
    base,
    surface1,
    surface2,
    surface3,
    alt1,
    alt2,
    inverse
  };
}, "getBaseTemplates");
var defaultTemplates = getTemplates();

// node_modules/@tamagui/theme-builder/dist/esm/getThemeSuitePalettes.mjs
var paletteSize = 12;
var PALETTE_BACKGROUND_OFFSET = 6;
var generateColorPalette = /* @__PURE__ */ __name(({
  palette: buildPalette,
  scheme
}) => {
  if (!buildPalette) return [];
  const {
    anchors
  } = buildPalette;
  let palette = [];
  const add = /* @__PURE__ */ __name((h, s, l) => {
    palette.push(hsla(h, s, l, 1));
  }, "add"), numAnchors = Object.keys(anchors).length;
  for (const [anchorIndex, anchor] of anchors.entries()) {
    const [h, s, l] = [anchor.hue[scheme], anchor.sat[scheme], anchor.lum[scheme]];
    if (anchorIndex !== 0) {
      const lastAnchor = anchors[anchorIndex - 1], steps = anchor.index - lastAnchor.index, lastHue = lastAnchor.hue[scheme], lastSat = lastAnchor.sat[scheme], lastLum = lastAnchor.lum[scheme], stepHue = (lastHue - h) / steps, stepSat = (lastSat - s) / steps, stepLum = (lastLum - l) / steps;
      for (let step = lastAnchor.index + 1; step < anchor.index; step++) {
        const str = anchor.index - step;
        add(h + stepHue * str, s + stepSat * str, l + stepLum * str);
      }
    }
    if (add(h, s, l), anchorIndex === numAnchors - 1 && palette.length < paletteSize) for (let step = anchor.index + 1; step < paletteSize; step++) add(h, s, l);
  }
  const background = palette[0], foreground = palette[palette.length - 1], transparentValues = [background, foreground].map((color2) => {
    const [h, s, l] = parseToHsla(color2);
    return [hsla(h, s, l, 0), hsla(h, s, l, 0.2), hsla(h, s, l, 0.4), hsla(h, s, l, 0.6), hsla(h, s, l, 0.8)];
  }), reverseForeground = [...transparentValues[1]].reverse();
  return palette = [...transparentValues[0], ...palette, ...reverseForeground], palette;
}, "generateColorPalette");
function getThemeSuitePalettes(palette) {
  return {
    light: generateColorPalette({
      palette,
      scheme: "light"
    }),
    dark: generateColorPalette({
      palette,
      scheme: "dark"
    })
  };
}
__name(getThemeSuitePalettes, "getThemeSuitePalettes");

// node_modules/@tamagui/theme-builder/dist/esm/createThemes.mjs
function createThemes(props) {
  const {
    accent,
    childrenThemes,
    grandChildrenThemes,
    templates: templates2 = defaultTemplates,
    componentThemes
  } = props, builder = createSimpleThemeBuilder({
    extra: props.base.extra,
    componentThemes,
    palettes: createPalettes(getThemesPalettes(props)),
    templates: templates2,
    accentTheme: !!accent,
    childrenThemes: normalizeSubThemes(childrenThemes),
    grandChildrenThemes: grandChildrenThemes ? normalizeSubThemes(grandChildrenThemes) : void 0
  });
  return lastBuilder = builder.themeBuilder, builder.themes;
}
__name(createThemes, "createThemes");
var lastBuilder = null;
function normalizeSubThemes(defs) {
  return Object.fromEntries(Object.entries(defs || {}).map(([name, value]) => [name, {
    palette: name,
    template: value.template || "base"
  }]));
}
__name(normalizeSubThemes, "normalizeSubThemes");
var defaultPalettes = createPalettes(getThemesPalettes({
  base: {
    palette: ["#fff", "#000"]
  },
  accent: {
    palette: ["#ff0000", "#ff9999"]
  }
}));
function createSimpleThemeBuilder(props) {
  const {
    extra,
    childrenThemes = null,
    grandChildrenThemes = null,
    templates: templates2 = defaultTemplates,
    palettes: palettes2 = defaultPalettes,
    accentTheme,
    componentThemes = templates2 === defaultTemplates ? defaultComponentThemes : void 0
  } = props;
  let themeBuilder = createThemeBuilder().addPalettes(palettes2).addTemplates(templates2).addThemes({
    light: {
      template: "base",
      palette: "light",
      nonInheritedValues: {
        ...extra?.light,
        ...accentTheme && palettes2.light_accent && {
          accent1: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 0],
          accent2: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 1],
          accent3: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 2],
          accent4: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 3],
          accent5: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 4],
          accent6: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 5],
          accent7: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 6],
          accent8: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 7],
          accent9: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 8],
          accent10: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 9],
          accent11: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 10],
          accent12: palettes2.light_accent[PALETTE_BACKGROUND_OFFSET + 11]
        }
      }
    },
    dark: {
      template: "base",
      palette: "dark",
      nonInheritedValues: {
        ...extra?.dark,
        ...accentTheme && palettes2.dark_accent && {
          accent1: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 0],
          accent2: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 1],
          accent3: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 2],
          accent4: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 3],
          accent5: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 4],
          accent6: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 5],
          accent7: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 6],
          accent8: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 7],
          accent9: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 8],
          accent10: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 9],
          accent11: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 10],
          accent12: palettes2.dark_accent[PALETTE_BACKGROUND_OFFSET + 11]
        }
      }
    }
  });
  return palettes2.light_accent && (themeBuilder = themeBuilder.addChildThemes({
    accent: [{
      parent: "light",
      template: "base",
      palette: "light_accent"
    }, {
      parent: "dark",
      template: "base",
      palette: "dark_accent"
    }]
  })), childrenThemes && (themeBuilder = themeBuilder.addChildThemes(childrenThemes, {
    avoidNestingWithin: ["accent"]
  })), grandChildrenThemes && (themeBuilder = themeBuilder.addChildThemes(grandChildrenThemes, {
    avoidNestingWithin: ["accent"]
  })), componentThemes && (themeBuilder = themeBuilder.addComponentThemes(getComponentThemes(componentThemes), {
    avoidNestingWithin: [
      // ...Object.keys(childrenThemes || {}),
      ...Object.keys(grandChildrenThemes || {})
    ]
  })), {
    themeBuilder,
    themes: themeBuilder.build()
  };
}
__name(createSimpleThemeBuilder, "createSimpleThemeBuilder");
function getSchemePalette(colors3) {
  return {
    light: colors3,
    dark: [...colors3].reverse()
  };
}
__name(getSchemePalette, "getSchemePalette");
function getAnchors(palette) {
  const numItems = palette.light.length;
  return palette.light.map((lcolor, index) => {
    const dcolor = palette.dark[index], [lhue, lsat, llum] = parseToHsla(lcolor), [dhue, dsat, dlum] = parseToHsla(dcolor);
    return {
      index: spreadIndex(11, numItems, index),
      hue: {
        light: lhue,
        dark: dhue
      },
      sat: {
        light: lsat,
        dark: dsat
      },
      lum: {
        light: llum,
        dark: dlum
      }
    };
  });
}
__name(getAnchors, "getAnchors");
function spreadIndex(maxIndex, numItems, index) {
  return Math.round(index / (numItems - 1) * maxIndex);
}
__name(spreadIndex, "spreadIndex");
function coerceSimplePaletteToSchemePalette(def) {
  return Array.isArray(def) ? getSchemePalette(def) : def;
}
__name(coerceSimplePaletteToSchemePalette, "coerceSimplePaletteToSchemePalette");
function getThemesPalettes(props) {
  const base = coerceSimplePaletteToSchemePalette(props.base.palette), accent = props.accent ? coerceSimplePaletteToSchemePalette(props.accent.palette) : null, baseAnchors = getAnchors(base);
  function getSubThemesPalettes(defs) {
    return Object.fromEntries(Object.entries(defs).map(([key, value]) => [key, {
      name: key,
      anchors: value.palette ? getAnchors(coerceSimplePaletteToSchemePalette(value.palette)) : baseAnchors
    }]));
  }
  __name(getSubThemesPalettes, "getSubThemesPalettes");
  return {
    base: {
      name: "base",
      anchors: baseAnchors
    },
    ...accent && {
      accent: {
        name: "accent",
        anchors: getAnchors(accent)
      }
    },
    ...props.childrenThemes && getSubThemesPalettes(props.childrenThemes),
    ...props.grandChildrenThemes && getSubThemesPalettes(props.grandChildrenThemes)
  };
}
__name(getThemesPalettes, "getThemesPalettes");
var getComponentThemes = /* @__PURE__ */ __name((components) => Object.fromEntries(Object.entries(components).map(([componentName, {
  template: template2
}]) => [componentName, {
  parent: "",
  template: template2 || "base"
}])), "getComponentThemes");
function createPalettes(palettes2) {
  const accentPalettes = palettes2.accent ? getThemeSuitePalettes(palettes2.accent) : null, basePalettes = getThemeSuitePalettes(palettes2.base);
  return Object.fromEntries(Object.entries(palettes2).flatMap(([name, palette]) => {
    const palettes22 = getThemeSuitePalettes(palette), oppositePalettes = name.startsWith("accent") ? basePalettes : accentPalettes || basePalettes;
    if (!oppositePalettes) return [];
    const oppositeLight = oppositePalettes.light, oppositeDark = oppositePalettes.dark, bgOffset = 7;
    return [[name === "base" ? "light" : `light_${name}`, [oppositeLight[bgOffset], ...palettes22.light, oppositeLight[oppositeLight.length - bgOffset - 1]]], [name === "base" ? "dark" : `dark_${name}`, [oppositeDark[oppositeDark.length - bgOffset - 1], ...palettes22.dark, oppositeDark[bgOffset]]]];
  }));
}
__name(createPalettes, "createPalettes");

// node_modules/@tamagui/theme-builder/dist/esm/defaultTemplatesStronger.mjs
var getTemplates2 = /* @__PURE__ */ __name(() => {
  const lightTemplates = getBaseTemplates2("light"), darkTemplates = getBaseTemplates2("dark");
  return {
    ...objectFromEntries3(objectKeys3(lightTemplates).map((name) => [`light_${name}`, lightTemplates[name]])),
    ...objectFromEntries3(objectKeys3(darkTemplates).map((name) => [`dark_${name}`, darkTemplates[name]]))
  };
}, "getTemplates");
var getBaseTemplates2 = /* @__PURE__ */ __name((scheme) => {
  const isLight = scheme === "light", bgIndex = 6, lighten = isLight ? -1 : 1, darken = -lighten, borderColor = bgIndex + 3, baseColors = {
    color: -bgIndex,
    colorHover: -bgIndex - 1,
    colorPress: -bgIndex,
    colorFocus: -bgIndex - 1,
    placeholderColor: -bgIndex - 3,
    outlineColor: -2
  }, base = {
    accentBackground: 0,
    accentColor: -0,
    background0: 1,
    background02: 2,
    background04: 3,
    background06: 4,
    background08: 5,
    color1: bgIndex,
    color2: bgIndex + 1,
    color3: bgIndex + 2,
    color4: bgIndex + 3,
    color5: bgIndex + 4,
    color6: bgIndex + 5,
    color7: bgIndex + 6,
    color8: bgIndex + 7,
    color9: bgIndex + 8,
    color10: bgIndex + 9,
    color11: bgIndex + 10,
    color12: bgIndex + 11,
    color0: -1,
    color02: -2,
    color04: -3,
    color06: -4,
    color08: -5,
    // the background, color, etc keys here work like generics - they make it so you
    // can publish components for others to use without mandating a specific color scale
    // the @tamagui/button Button component looks for `$background`, so you set the
    // dark_red_Button theme to have a stronger background than the dark_red theme.
    background: bgIndex,
    backgroundHover: bgIndex + lighten,
    // always lighten on hover no matter the scheme
    backgroundPress: bgIndex + darken,
    // always darken on press no matter the theme
    backgroundFocus: bgIndex + darken,
    borderColor,
    borderColorHover: borderColor + lighten,
    borderColorPress: borderColor + darken,
    borderColorFocus: borderColor,
    ...baseColors,
    colorTransparent: -1
  }, surface1 = {
    ...baseColors,
    background: base.background + 2,
    backgroundHover: base.backgroundHover + 2,
    backgroundPress: base.backgroundPress + 2,
    backgroundFocus: base.backgroundFocus + 2,
    borderColor: base.borderColor + 2,
    borderColorHover: base.borderColorHover + 2,
    borderColorFocus: base.borderColorFocus + 2,
    borderColorPress: base.borderColorPress + 2
  }, surface2 = {
    ...baseColors,
    background: base.background + 3,
    backgroundHover: base.backgroundHover + 3,
    backgroundPress: base.backgroundPress + 3,
    backgroundFocus: base.backgroundFocus + 3,
    borderColor: base.borderColor + 3,
    borderColorHover: base.borderColorHover + 3,
    borderColorFocus: base.borderColorFocus + 3,
    borderColorPress: base.borderColorPress + 3
  }, surface3 = {
    ...baseColors,
    background: base.background + 4,
    backgroundHover: base.backgroundHover + 4,
    backgroundPress: base.backgroundPress + 4,
    backgroundFocus: base.backgroundFocus + 4,
    borderColor: base.borderColor + 4,
    borderColorHover: base.borderColorHover + 4,
    borderColorFocus: base.borderColorFocus + 4,
    borderColorPress: base.borderColorPress + 4
  }, alt1 = {
    color: base.color - 1,
    colorHover: base.colorHover - 1,
    colorPress: base.colorPress - 1,
    colorFocus: base.colorFocus - 1
  }, alt2 = {
    color: base.color - 2,
    colorHover: base.colorHover - 2,
    colorPress: base.colorPress - 2,
    colorFocus: base.colorFocus - 2
  }, inverse = Object.fromEntries(Object.entries(base).map(([key, index]) => [key, -index]));
  return {
    base,
    surface1,
    surface2,
    surface3,
    alt1,
    alt2,
    inverse
  };
}, "getBaseTemplates");
var defaultTemplatesStronger = getTemplates2();

// node_modules/@tamagui/theme-builder/dist/esm/defaultTemplatesStrongest.mjs
var getTemplates3 = /* @__PURE__ */ __name(() => {
  const lightTemplates = getBaseTemplates3("light"), darkTemplates = getBaseTemplates3("dark");
  return {
    ...objectFromEntries3(objectKeys3(lightTemplates).map((name) => [`light_${name}`, lightTemplates[name]])),
    ...objectFromEntries3(objectKeys3(darkTemplates).map((name) => [`dark_${name}`, darkTemplates[name]]))
  };
}, "getTemplates");
var getBaseTemplates3 = /* @__PURE__ */ __name((scheme) => {
  const isLight = scheme === "light", bgIndex = 6, lighten = isLight ? -1 : 1, darken = -lighten, borderColor = bgIndex + 3, baseColors = {
    color: -bgIndex,
    colorHover: -bgIndex - 1,
    colorPress: -bgIndex,
    colorFocus: -bgIndex - 1,
    placeholderColor: -bgIndex - 3,
    outlineColor: -2
  }, base = {
    accentBackground: 0,
    accentColor: -0,
    background0: 1,
    background02: 2,
    background04: 3,
    background06: 4,
    background08: 5,
    color1: bgIndex,
    color2: bgIndex + 1,
    color3: bgIndex + 2,
    color4: bgIndex + 3,
    color5: bgIndex + 4,
    color6: bgIndex + 5,
    color7: bgIndex + 6,
    color8: bgIndex + 7,
    color9: bgIndex + 8,
    color10: bgIndex + 9,
    color11: bgIndex + 10,
    color12: bgIndex + 11,
    color0: -1,
    color02: -2,
    color04: -3,
    color06: -4,
    color08: -5,
    // the background, color, etc keys here work like generics - they make it so you
    // can publish components for others to use without mandating a specific color scale
    // the @tamagui/button Button component looks for `$background`, so you set the
    // dark_red_Button theme to have a stronger background than the dark_red theme.
    background: bgIndex,
    backgroundHover: bgIndex + lighten,
    // always lighten on hover no matter the scheme
    backgroundPress: bgIndex + darken,
    // always darken on press no matter the theme
    backgroundFocus: bgIndex + darken,
    borderColor,
    borderColorHover: borderColor + lighten,
    borderColorPress: borderColor + darken,
    borderColorFocus: borderColor,
    ...baseColors,
    colorTransparent: -1
  }, surface1 = {
    ...baseColors,
    background: base.background + 3,
    backgroundHover: base.backgroundHover + 3,
    backgroundPress: base.backgroundPress + 3,
    backgroundFocus: base.backgroundFocus + 3,
    borderColor: base.borderColor + 3,
    borderColorHover: base.borderColorHover + 3,
    borderColorFocus: base.borderColorFocus + 3,
    borderColorPress: base.borderColorPress + 3
  }, surface2 = {
    ...baseColors,
    background: base.background + 4,
    backgroundHover: base.backgroundHover + 4,
    backgroundPress: base.backgroundPress + 4,
    backgroundFocus: base.backgroundFocus + 4,
    borderColor: base.borderColor + 4,
    borderColorHover: base.borderColorHover + 4,
    borderColorFocus: base.borderColorFocus + 4,
    borderColorPress: base.borderColorPress + 4
  }, surface3 = {
    ...baseColors,
    background: base.background + 5,
    backgroundHover: base.backgroundHover + 5,
    backgroundPress: base.backgroundPress + 5,
    backgroundFocus: base.backgroundFocus + 5,
    borderColor: base.borderColor + 5,
    borderColorHover: base.borderColorHover + 5,
    borderColorFocus: base.borderColorFocus + 5,
    borderColorPress: base.borderColorPress + 5
  }, alt1 = {
    color: base.color - 1,
    colorHover: base.colorHover - 1,
    colorPress: base.colorPress - 1,
    colorFocus: base.colorFocus - 1
  }, alt2 = {
    color: base.color - 2,
    colorHover: base.colorHover - 2,
    colorPress: base.colorPress - 2,
    colorFocus: base.colorFocus - 2
  }, inverse = Object.fromEntries(Object.entries(base).map(([key, index]) => [key, -index]));
  return {
    base,
    surface1,
    surface2,
    surface3,
    alt1,
    alt2,
    inverse
  };
}, "getBaseTemplates");
var defaultTemplatesStrongest = getTemplates3();

// node_modules/@tamagui/theme-builder/dist/esm/createStudioThemes.mjs
function createStudioThemes(props) {
  const palettes2 = createPalettes(props.palettes), templates2 = props.templateStrategy === "stronger" ? defaultTemplatesStronger : props.templateStrategy === "strongest" ? defaultTemplatesStrongest : defaultTemplates;
  return createSimpleThemeBuilder({
    palettes: palettes2,
    templates: templates2,
    componentThemes: defaultComponentThemes,
    accentTheme: !!props.palettes.accent
  });
}
__name(createStudioThemes, "createStudioThemes");

// node_modules/@tamagui/theme-builder/dist/esm/masks.mjs
var masks = {
  identity: createIdentityMask(),
  soften: createSoftenMask(),
  soften2: createSoftenMask({
    strength: 2
  }),
  soften3: createSoftenMask({
    strength: 3
  }),
  strengthen: createStrengthenMask(),
  inverse: createInverseMask(),
  inverseSoften: combineMasks(createInverseMask(), createSoftenMask({
    strength: 2
  })),
  inverseSoften2: combineMasks(createInverseMask(), createSoftenMask({
    strength: 3
  })),
  inverseSoften3: combineMasks(createInverseMask(), createSoftenMask({
    strength: 4
  })),
  inverseStrengthen2: combineMasks(createInverseMask(), createStrengthenMask({
    strength: 2
  })),
  strengthenButSoftenBorder: createMask((template2, options) => {
    const stronger = createStrengthenMask().mask(template2, options), softer = createSoftenMask().mask(template2, options);
    return {
      ...stronger,
      borderColor: softer.borderColor,
      borderColorHover: softer.borderColorHover,
      borderColorPress: softer.borderColorPress,
      borderColorFocus: softer.borderColorFocus
    };
  }),
  soften2Border1: createMask((template2, options) => {
    const softer2 = createSoftenMask({
      strength: 2
    }).mask(template2, options), softer1 = createSoftenMask({
      strength: 1
    }).mask(template2, options);
    return {
      ...softer2,
      borderColor: softer1.borderColor,
      borderColorHover: softer1.borderColorHover,
      borderColorPress: softer1.borderColorPress,
      borderColorFocus: softer1.borderColorFocus
    };
  }),
  soften3FlatBorder: createMask((template2, options) => {
    const borderMask = createSoftenMask({
      strength: 2
    }).mask(template2, options);
    return {
      ...createSoftenMask({
        strength: 3
      }).mask(template2, options),
      borderColor: borderMask.borderColor,
      borderColorHover: borderMask.borderColorHover,
      borderColorPress: borderMask.borderColorPress,
      borderColorFocus: borderMask.borderColorFocus
    };
  }),
  softenBorder: createMask((template2, options) => {
    const plain = skipMask.mask(template2, options), softer = createSoftenMask().mask(template2, options);
    return {
      ...plain,
      borderColor: softer.borderColor,
      borderColorHover: softer.borderColorHover,
      borderColorPress: softer.borderColorPress,
      borderColorFocus: softer.borderColorFocus
    };
  }),
  softenBorder2: createMask((template2, options) => {
    const plain = skipMask.mask(template2, options), softer = createSoftenMask({
      strength: 2
    }).mask(template2, options);
    return {
      ...plain,
      borderColor: softer.borderColor,
      borderColorHover: softer.borderColorHover,
      borderColorPress: softer.borderColorPress,
      borderColorFocus: softer.borderColorFocus
    };
  })
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  PALETTE_BACKGROUND_OFFSET,
  ThemeBuilder,
  addChildren,
  amber,
  amberA,
  amberDark,
  amberDarkA,
  applyMask,
  applyMaskStateless,
  blackA,
  blue,
  blueA,
  blueDark,
  blueDarkA,
  bronze,
  bronzeA,
  bronzeDark,
  bronzeDarkA,
  brown,
  brownA,
  brownDark,
  brownDarkA,
  color,
  colorTokens,
  combineMasks,
  componentThemeDefinitions,
  createIdentityMask,
  createInverseMask,
  createMask,
  createPalettes,
  createShiftMask,
  createSoftenMask,
  createStrengthenMask,
  createStudioThemes,
  createTheme,
  createThemeBuilder,
  createThemeWithPalettes,
  createThemes,
  createWeakenMask,
  crimson,
  crimsonA,
  crimsonDark,
  crimsonDarkA,
  cyan,
  cyanA,
  cyanDark,
  cyanDarkA,
  darkColors,
  defaultComponentThemes,
  defaultTemplates,
  getThemeSuitePalettes,
  gold,
  goldA,
  goldDark,
  goldDarkA,
  grass,
  grassA,
  grassDark,
  grassDarkA,
  gray,
  grayA,
  grayDark,
  grayDarkA,
  green,
  greenA,
  greenDark,
  greenDarkA,
  indigo,
  indigoA,
  indigoDark,
  indigoDarkA,
  lightColors,
  lime,
  limeA,
  limeDark,
  limeDarkA,
  maskOptions,
  masks,
  mauve,
  mauveA,
  mauveDark,
  mauveDarkA,
  mint,
  mintA,
  mintDark,
  mintDarkA,
  objectEntries,
  objectFromEntries,
  objectKeys,
  olive,
  oliveA,
  oliveDark,
  oliveDarkA,
  orange,
  orangeA,
  orangeDark,
  orangeDarkA,
  overlayThemeDefinitions,
  palettes,
  pink,
  pinkA,
  pinkDark,
  pinkDarkA,
  plum,
  plumA,
  plumDark,
  plumDarkA,
  purple,
  purpleA,
  purpleDark,
  purpleDarkA,
  radius,
  red,
  redA,
  redDark,
  redDarkA,
  sage,
  sageA,
  sageDark,
  sageDarkA,
  sand,
  sandA,
  sandDark,
  sandDarkA,
  shadows,
  size,
  skipMask,
  sky,
  skyA,
  skyDark,
  skyDarkA,
  slate,
  slateA,
  slateDark,
  slateDarkA,
  space,
  teal,
  tealA,
  tealDark,
  tealDarkA,
  templates,
  themes,
  tokens,
  tomato,
  tomatoA,
  tomatoDark,
  tomatoDarkA,
  violet,
  violetA,
  violetDark,
  violetDarkA,
  whiteA,
  yellow,
  yellowA,
  yellowDark,
  yellowDarkA,
  zIndex
});
